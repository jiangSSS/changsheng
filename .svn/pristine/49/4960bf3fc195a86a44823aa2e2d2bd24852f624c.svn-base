<template>
  <div class="isMap" ref="chartDom" style="height: 510px"></div>
</template>
<script>
import echarts from "echarts/lib/echarts";
import "echarts/extension/bmap/bmap";
import mapData from "../../utils/mapcharts";
import { MP } from "../../map";
import { post, service } from "../../utils/request.js";
export default {
  props: {},
  data() {
    return {
      chart: null,
      mapAreaList: {},
      mapAreaLists: [],
      chartList: [],
    };
  },

  created() {},
  mounted() {
    this.$nextTick(() => {
      this.drawECharts();
      this.getData();
      
      setTimeout(() => {
        this.drawECharts();
      }, 500);
    });
    // setTimeout(() => {
    //   this.drawECharts();
    // }, 0);
    // let that = this;
    // let oScript = document.createElement("script");
    // oScript.src =
    //   "https://api.map.baidu.com/api?v=3.0&ak=aiM7jMPeUV9uEepWsxr642Plxqgfpvt9";
    // oScript.type = "text/javascript";
    // document.head.appendChild(oScript);
    // // window.onload = function() {
    // // that.$nextTick(that.drawECharts());
    // that.drawECharts();
    // // };
    // this.drawECharts()
    // MP().then(() => {
    //   // console.log('DDDDDDDDDDDDDDDDDDDDDD',_this.ak);

    //   this.drawECharts();
    // });
    // this.$nextTick(function() {
    //   // var _this = this;
    //   MP().then(() => {
    //     // console.log('DDDDDDDDDDDDDDDDDDDDDD',_this.ak);

    //     this.drawECharts();
    //   });
    //   // this.drawECharts();
    // });
    // this.$nextTick(() => {
    //   var _this = this;
    //   MP(_this.ak).then((BMap) => {
    //       this.drawECharts();
    //   });
    //   // this.drawECharts();
    // });

    // this.renderChart();
    // this.$nextTick(() => {
    //   // var win=document.querySelector(".BMap_bubble_title");
    //   // win.title = this.activeName;
    //   post(service.areanum).then(res => {
    //     console.log("area--------------", res.data.bodys);
    //     // res.data.bodys.map(items => {
    //     //   if (items.name) {
    //     //     let lastcode = items.name.substr(items.name.length - 1, 1);
    //     //     if (lastcode === "省" || lastcode === "市" || lastcode === "区") {
    //     //       items.name = items.name.substr(0, items.name.length - 1);
    //     //     }
    //     //   }
    //     // });
    //     mapData.getmapdata(res.data.bodys);
    //   });
    //   // post(service.getAreacode,{}).then((res)=>{
    //   //   this.mapAreaList = res.data.bodys
    //   // })
    //   this.mapAreaList = {
    //     '上海市市级分公司':[121.15,31.89],
    //     '江苏盐城营销服务部':[113.65,34.76]
    //   }
    // });

    // this.$nextTick(function() {
    //   var _this = this;
    //   MP(_this.ak).then(BMap => {
    //     console.log(_this.ak);

    //     this.renderChart();
    //   });
    //   this.renderChart();
    // });
  },
  beforeDestroy() {
    if (!this.chart) {
      return;
    }
    this.chart.dispose();
    this.chart = null;
  },
  methods: {
    convertData(data) {
      var res = [];
      for (var i = 0; i < data.length; i++) {
        var geoCoord = this.mapAreaList[data[i].name];
        if (geoCoord) {
          res.push({
            name: data[i].name,
            value: geoCoord.concat(data[i].value)
          });
        }
      }
      return res;
    },
    drawECharts() {
      console.log("kkkkkkkkkkkkk  ");
      this.chart = echarts.init(this.$refs.chartDom);
      this.getData();
      // this.chart = new BMap.Map("chartDom");
      var option = {};
      option = {
        title: {
          text: "",
          sublink: "",
          left: "center"
        },
        tooltip: {
          trigger: "item",
          formatter: function(params) {
            return params.name + ":" + params.value[2];
          }
        },
        bmap: {
          center: [104.114129, 37.550339],
          zoom: 5,
          roam: true,
          mapStyle: {
            styleJson: [
              {
                featureType: "water",
                elementType: "all",
                stylers: {
                  color: "#d1d1d1"
                }
              },
              {
                featureType: "land",
                elementType: "all",
                stylers: {
                  color: "#f3f3f3"
                }
              },
              {
                featureType: "railway",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "highway",
                elementType: "all",
                stylers: {
                  color: "#fdfdfd"
                }
              },
              {
                featureType: "highway",
                elementType: "labels",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "arterial",
                elementType: "geometry",
                stylers: {
                  color: "#fefefe"
                }
              },
              {
                featureType: "arterial",
                elementType: "geometry.fill",
                stylers: {
                  color: "#fefefe"
                }
              },
              {
                featureType: "poi",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "green",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "subway",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "manmade",
                elementType: "all",
                stylers: {
                  color: "#d1d1d1"
                }
              },
              {
                featureType: "local",
                elementType: "all",
                stylers: {
                  color: "#d1d1d1"
                }
              },
              {
                featureType: "arterial",
                elementType: "labels",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "boundary",
                elementType: "all",
                stylers: {
                  color: "#fefefe"
                }
              },
              {
                featureType: "building",
                elementType: "all",
                stylers: {
                  color: "#d1d1d1"
                }
              },
              {
                featureType: "label",
                elementType: "labels.text.fill",
                stylers: {
                  color: "#999999"
                }
              }
            ]
          }
        },
        series: [
          {
            name: "",
            type: "effectScatter",
            coordinateSystem: "bmap",
            data: this.convertData(
              this.chartList
                .sort(function(a, b) {
                  return b.value - a.value;
                })
                .slice(0, 6)
            ),
            symbolSize: function(val) {
              if (val[2] > 200) {
                return val[2] / 30;
              }
              if (val[2] < 30) {
                return val[2];
              }
              return val[2] / 10;
            },
            showEffectOn: "render",
            rippleEffect: {
              brushType: "stroke"
            },
            hoverAnimation: true,
            label: {
              normal: {
                formatter: "{b}",
                position: "right",
                show: true
              }
            },
            itemStyle: {
              normal: {
                color: " #ddb926",
                shadowBlur: 10,
                shadowColor: "#333"
              }
            },
            zlevel: 1
          }
        ]
      };
      // 执行渲染图形和数据的操作
      // if (option && typeof option === "object") {
      this.chart.setOption(option, true);
      // }
    },
    getData() {
      post(service.areanum).then(res => {
        this.chartList = res.data.bodys;
      });
      post(service.getAreacode).then(res => {
        this.mapAreaLists = res.data.bodys;
        this.mapAreaList = {};
        this.mapAreaLists.map(item => {
          item.coordinate = item.coordinate.slice(
            1,
            item.coordinate.length - 1
          );
          // let coordinate = item.coordinate.slice(3,item.coordinate.length-3)
          // console.log(item.name);
          item.coordinate = item.coordinate.split(",");
          item.coordinate[0] = Number(item.coordinate[0]);
          item.coordinate[1] = Number(item.coordinate[1]);
          this.mapAreaList[item.name] = item.coordinate;
        });
      });
    },
    renderChart() {
      this.chart = echarts.init(this.$refs.chartDom);
      console.log(this.chart);

      this.chart.setOption({
        title: {
          text: "",
          sublink: "",
          left: "center"
        },
        tooltip: {
          trigger: "item",
          formatter: function(params) {
            return params.name + ":" + params.value[2];
          }
        },
        bmap: {
          center: [104.114129, 37.550339],
          zoom: 5,
          roam: true,
          mapStyle: {
            styleJson: [
              {
                featureType: "water",
                elementType: "all",
                stylers: {
                  color: "#044161"
                }
              },
              {
                featureType: "land",
                elementType: "all",
                stylers: {
                  color: "#004981"
                }
              },
              {
                featureType: "boundary",
                elementType: "geometry",
                stylers: {
                  color: "#064f85"
                }
              },
              {
                featureType: "railway",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "highway",
                elementType: "geometry",
                stylers: {
                  color: "#004981"
                }
              },
              {
                featureType: "highway",
                elementType: "geometry.fill",
                stylers: {
                  color: "#005b96",
                  lightness: 1
                }
              },
              {
                featureType: "highway",
                elementType: "labels",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "arterial",
                elementType: "geometry",
                stylers: {
                  color: "#004981"
                }
              },
              {
                featureType: "arterial",
                elementType: "geometry.fill",
                stylers: {
                  color: "#00508b"
                }
              },
              {
                featureType: "poi",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "green",
                elementType: "all",
                stylers: {
                  color: "#056197",
                  visibility: "off"
                }
              },
              {
                featureType: "subway",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "manmade",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "local",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "arterial",
                elementType: "labels",
                stylers: {
                  visibility: "off"
                }
              },
              {
                featureType: "boundary",
                elementType: "geometry.fill",
                stylers: {
                  color: "#029fd4"
                }
              },
              {
                featureType: "building",
                elementType: "all",
                stylers: {
                  color: "#1a5787"
                }
              },
              {
                featureType: "label",
                elementType: "all",
                stylers: {
                  visibility: "off"
                }
              }
            ]
          }
        },
        series: [
          {
            name: "",
            type: "effectScatter",
            coordinateSystem: "bmap",
            // data: convertDatas(
            //   mapData.data
            //     .sort(function(a, b) {
            //       return b.value - a.value;
            //     })
            //     .slice(0, 6)
            // ),
            symbolSize: function(val) {
              if (val[2] > 200) {
                return val[2] / 30;
              }
              if (val[2] < 30) {
                return val[2];
              }
              return val[2] / 10;
            },
            showEffectOn: "render",
            rippleEffect: {
              brushType: "stroke"
            },
            hoverAnimation: true,
            label: {
              normal: {
                formatter: "{b}",
                position: "right",
                show: true
              }
            },
            itemStyle: {
              normal: {
                color: " #ddb926",
                shadowBlur: 10,
                shadowColor: "#333"
              }
            },
            zlevel: 1
          }
        ]
      });
    }
  }
};
</script>
<style lang="less" scope>
.isMap {
  /deep/.anchorBL {
    display: none !important;
  }
}
</style>  