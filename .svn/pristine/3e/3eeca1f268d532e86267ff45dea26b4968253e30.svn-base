<template>
  <div class="reviewInformation" id="reviewInformation" ref="reviewInformation">
    <div class="left">
      <el-collapse v-model="activeName">
        <el-collapse-item name="1" id="0">
          <template slot="title">
            出险人信息
            <i
              class="header-icon el-icon-caret-bottom"
              style="margin: 0 8px 0 auto;font-size: 30px;"
            ></i>
          </template>
          <el-form ref="form" :model="form" v-model="labelPosition" label-width="140px">
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="出险人姓名">
                    <el-input v-model="dangerperInfor.name" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="出险人证件类型">
                    <el-select
                      v-model="dangerperInfor.idtype"
                      placeholder="请选择"
                      disabled
                      class="disabledinput"
                    >
                      <el-option
                        v-for="item in cardTypeList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="出险人证件号码">
                    <el-input v-model="dangerperInfor.idno" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="性别">
                    <el-select
                      v-model="dangerperInfor.sex"
                      clearable
                      placeholder="请选择"
                      disabled
                      class="disabledinput"
                    >
                      <el-option
                        v-for="item in sexList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="出险人年龄">
                    <el-input v-model="dangerperInfor.age" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="电话号码">
                    <el-input v-model="dangerperInfor.phone" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="证件有效止期">
                    <el-input v-model="dangerperInfor.enddate" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="来源渠道">
                    <el-input v-model="rgtclass" disabled maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label>
                    <el-button type="primary" :disabled="isShowZBX" @click="isZBXDialog">风险提示</el-button>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
          </el-form>
        </el-collapse-item>
      </el-collapse>
      <!-- 出险人信息 -->

      <div id="1"></div>
      <div id="2"></div>
      <div id="3"></div>
      <Policy :customerno="this.customerno"></Policy>
      <el-collapse v-model="activeName">
        <el-collapse-item name="2" id="4">
          <template slot="title">
            立案申请信息
            <i
              class="header-icon el-icon-caret-bottom"
              style="margin: 0 8px 0 auto;font-size: 30px;"
            ></i>
            <!-- 理赔号 保单号 营销员电话 申请日期 是否通知营销员 -->
          </template>
          <el-form ref="form" :model="form" v-model="labelPosition" label-width="40%">
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="理赔号">
                    <el-input v-model="initApplicationInfor.rgtno" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="申请日期">
                    <el-date-picker
                      type="date"
                      v-model="initApplicationInfor.applydate"
                      style="width: 100%;"
                      format="yyyy-MM-dd"
                      disabled
                      class="disabledinput"
                    ></el-date-picker>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <el-form-item label="资料齐全日">
                  <el-input v-model="initApplicationInfor.accepteddate" disabled></el-input>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="保单号">
                    <el-input v-model="initApplicationInfor.polno" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <el-form-item label="资料收到日" prop="printdate">
                  <el-date-picker
                    type="date"
                    placeholder="选择日期"
                    v-model="initApplicationInfor.printdate"
                    style="width: 100%;"
                    disabled
                    value-format="yyyy-MM-dd"
                  ></el-date-picker>
                </el-form-item>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="营销员电话" prop="phone">
                    <el-input v-model="initApplicationInfor.phone" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <div class="grid-content">
                    <el-form-item label="是否通知营销员" prop="notice">
                      <el-select
                        v-model="initApplicationInfor.notice"
                        disabled
                        class="disabledinput"
                      >
                        <el-option label="是" value="1"></el-option>
                        <el-option label="否" value="0"></el-option>
                      </el-select>
                    </el-form-item>
                  </div>
                </div>
              </el-col>
            </el-row>
            <el-row v-if="rptno">
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="报案人姓名">
                    <el-input v-model="initApplicationInfor.reportname" disabled></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="报案日期">
                    <el-input v-model="initApplicationInfor.reportdate" disabled></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="报案人电话">
                    <el-input v-model="initApplicationInfor.reportmobile" disabled></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row v-if="rptno">
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="报案人与出险人关系">
                    <el-select v-model="initApplicationInfor.relatoinsure" disabled>
                      <el-option
                        v-for="item in relatoinsureList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="报案渠道">
                    <el-input v-model="initApplicationInfor.reportchannel" disabled></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
          </el-form>
        </el-collapse-item>
      </el-collapse>

      <el-collapse v-model="activeName">
        <el-collapse-item name="3" id="5">
          <template slot="title">
            出险信息
            <i
              class="header-icon el-icon-caret-bottom"
              style="margin: 0 8px 0 auto;font-size: 30px;"
            ></i>
          </template>
          <el-form
            ref="dangerInfor"
            :model="dangerInfor"
            v-model="labelPosition"
            label-width="140px"
            :rules="rules"
          >
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="出险类型"
                    prop="accidenttype"
                    :rules="!candisable?rules.accidenttype:[{requied:false}]"
                  >
                    <el-radio-group
                      v-model="dangerInfor.accidenttype"
                      :disabled="candisable"
                      @change="changeAcc()"
                      :class="candisable&&dangerInfor.accidenttype?'disabledinput':''"
                    >
                      <el-radio
                        :label="item.code"
                        :key="item.code"
                        v-for="item in accidenttypeList"
                      >{{item.codename}}</el-radio>
                      <!-- <el-radio label="02">意外</el-radio> -->
                    </el-radio-group>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="直付标志">
                    <el-switch
                      v-model="dangerInfor.directpay"
                      active-value="1"
                      inactive-value="0"
                      active-color="#13ce66"
                      inactive-color="#ff4949"
                      disabled
                    ></el-switch>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="理赔类型"
                    prop="getRescode"
                    :rules="!candisable?rules.getRescode:[{requied:false,message: '请选择', trigger: 'blur'}]"
                  >
                    <el-checkbox-group v-model="getRescode">
                      <el-checkbox
                        v-for="(item) in llclaimtypeList"
                        :key="item.code"
                        :label="item.code"
                        :class="candisable&&getRescode?'disabledinput':''"
                        :disabled="candisable"
                      >{{item.codename}}</el-checkbox>
                    </el-checkbox-group>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="出险日期"
                    prop="accidentdate"
                    :rules="!candisable?rules.accidentdate:[{requied:false,message: '请选择', trigger: 'blur'}]"
                  >
                    <el-date-picker
                      type="date"
                      placeholder="选择日期"
                      v-model="dangerInfor.accidentdate"
                      style="width: 100%;"
                      :disabled="candisable"
                      value-format="yyyy-MM-dd"
                      clearable
                      :class="candisable&&dangerInfor.accidentdate?'disabledinput':''"
                    ></el-date-picker>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="事故原因"
                    prop="accreason"
                    :rules="dangerInfor.accidenttype==='02'&&!candisable?rules.accreason:[{ required: false, message: '请输入事故原因', trigger: 'blur' }]"
                  >
                    <el-select
                      clearable
                      v-model="dangerInfor.accreason"
                      placeholder="请选择"
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.accreason?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in accReasonList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <div class="grid-content place">
                  <el-form-item
                    label="出险地点"
                    prop="accprovince"
                    :rules="dangerInfor.accidenttype==='02'&&!candisable?rules.accprovince:[{ required: false, message: '请输入省', trigger: 'blur' }]"
                  >
                    <el-select
                      clearable
                      filterable
                      v-model="dangerInfor.accprovince"
                      placeholder="省"
                      :disabled="candisable"
                      @change="changevince(dangerInfor.accprovince)"
                      @clear="clearData()"
                      :class="candisable&&dangerInfor.accprovince?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in provinceList"
                        :key="item.code"
                        :label="item.province"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                  <el-form-item
                    label
                    prop="acccity"
                    :rules="dangerInfor.accidenttype==='02'&&dangerInfor.accprovince!=='999999'&&!candisable?rules.acccity:[{ required: false, message: '请输入市', trigger: 'blur' }]"
                    class="risk_address"
                  >
                    <el-select
                      v-model="dangerInfor.acccity"
                      placeholder="市"
                      clearable
                      filterable
                      :disabled="candisable"
                      @change="changaccity(dangerInfor.acccity)"
                      @clear="clearData1()"
                      :class="candisable&&dangerInfor.acccity?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in cityList"
                        :key="item.code"
                        :label="item.city"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                  <el-form-item
                    label
                    prop="acccounty"
                    :rules="dangerInfor.accidenttype==='02'&&dangerInfor.accprovince!=='999999'&&!candisable?rules.acccounty:[{ required: false, message: '请输入市', trigger: 'blur' }]"
                    class="risk_address"
                    style="margin-left:8px;"
                  >
                    <el-select
                      v-model="dangerInfor.acccounty"
                      placeholder="区"
                      :disabled="candisable"
                      clearable
                      filterable
                      :class="candisable&&dangerInfor.acccounty?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in areaList"
                        :key="item.code"
                        :label="item.country"
                        :value="item.code"
                        @clear="clearData2()"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                  <el-form-item
                    label
                    prop="accaddress"
                    :rules="dangerInfor.accidenttype==='02'&&!candisable?rules.accaddress:[{ required: false, message: '请输入市', trigger: 'blur' }]"
                    class="risk_address"
                  >
                    <span style="display:inline-block;margin-left:8px">
                      <el-input
                        v-model="dangerInfor.accaddress"
                        :disabled="candisable"
                        placeholder="详细地址"
                        clearable
                        style="width: 100%"
                        :class="candisable&&dangerInfor.accaddress?'disabledinput':''"
                      ></el-input>
                    </span>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="事故发生地点性质"
                    prop="accidentsite"
                    :rules="dangerInfor.accidenttype==='02'&&!candisable?rules.accidentsite:[{ required: false, message: '请输入事故发生地点性质', trigger: 'blur' }]"
                  >
                    <!-- <el-input v-model="tableMes.caseno"></el-input> -->
                    <!-- <el-select v-model="dangerInfor.accidentsite" placeholder="请选择">
                      <el-option v-for="item in accnatureList" :key="item.code" :label="item.codename"
                        :value="item.code"></el-option>
                    </el-select>-->
                    <el-cascader
                      v-model="dangerInfor.accidentsite"
                      :options="placeOptions"
                      clearable
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.accidentsite?'disabledinput':''"
                    ></el-cascader>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="就诊医院"
                    :rules="dangerInfor.accidenttype=='01'&&!candisable?rules.hospitalname:[{ required: false, message: '请输入', trigger: 'blur' }]"
                  >
                    <el-select
                      placeholder="请选择"
                      v-model="dangerInfor.hospitalname"
                      filterable
                      clearable
                      :disabled="candisable"
                      :filter-method="filteredaa"
                      @change="changeHospital(dangerInfor.hospitalname)"
                      @focus="clearHospital()"
                      @blur="isHosNames"
                      v-el-select-loadmore="loadmoreaa"
                      :class="candisable&&dangerInfor.hospitalname?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in hospitalListsaa"
                        :key="item.hospitcode"
                        :label="item.hospitalname"
                        :value="item.hospitcode"
                      ></el-option>
                    </el-select>
                    <el-popover
                      v-if="remarkContents && dangerInfor.hospitalname"
                      placement="top-start"
                      width="200"
                      trigger="hover"
                      content="这"
                    >
                      <div>{{remarkContents}}</div>
                      <el-button slot="reference" class="jiuzhens">
                        <img
                          src="../../assets/images/filing/warn.png"
                          alt
                          style="width:20px;height:20px"
                        />
                      </el-button>
                    </el-popover>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="病区">
                    <el-input
                      v-model="dangerInfor.hospitallesion"
                      :disabled="candisable"
                      clearable
                      :class="candisable&&dangerInfor.hospitallesion?'disabledinput':''"
                    ></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="床位">
                    <el-input
                      v-model="dangerInfor.hospitalbed"
                      :disabled="candisable"
                      clearable
                      :class="candisable&&dangerInfor.hospitalbed?'disabledinput':''"
                    ></el-input>
                  </el-form-item>
                </div>
              </el-col>

              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="确诊日期"
                    prop="dianosedate"
                    :rules="getRescode.indexOf('102')!==-1&&!candisable?rules.dianosedate:[{ required: false, message: '请输入事故发生地点性质', trigger: 'blur' }]"
                  >
                    <el-date-picker
                      clearable
                      type="date"
                      placeholder="选择日期"
                      v-model="dangerInfor.dianosedate"
                      style="width: 100%;"
                      :disabled="candisable"
                      value-format="yyyy-MM-dd"
                      :class="candisable&&dangerInfor.dianosedate?'disabledinput':''"
                    ></el-date-picker>
                  </el-form-item>
                </div>
              </el-col>

              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="身故日期"
                    prop="deathdate"
                    :rules="getRescode.indexOf('100')!==-1&&!candisable?rules.deathdate:[{ required: false, message: '请输入事故发生地点性质', trigger: 'blur' }]"
                  >
                    <el-date-picker
                      clearable
                      type="date"
                      placeholder="选择日期"
                      v-model="dangerInfor.deathdate"
                      style="width: 100%;"
                      :disabled="candisable"
                      value-format="yyyy-MM-dd"
                      :class="candisable&&dangerInfor.deathdate?'disabledinput':''"
                    ></el-date-picker>
                  </el-form-item>
                </div>
              </el-col>
              <!-- <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="入院日期">
                    <el-date-picker
                      clearable
                      type="date"
                      placeholder="选择日期"
                      v-model="dangerInfor.inhospitaldate"
                      style="width: 100%;"
                      :disabled="candisable"
                      value-format="yyyy-MM-dd"
                      :class="candisable&&dangerInfor.inhospitaldate?'disabledinput':''"
                    ></el-date-picker>
                  </el-form-item>
                </div>
              </el-col>-->

              <!-- <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="出院日期">
                    <el-date-picker
                      clearable
                      type="date"
                      placeholder="选择日期"
                      v-model="dangerInfor.outhospitaldate"
                      style="width: 100%;"
                      :disabled="candisable"
                      value-format="yyyy-MM-dd"
                      :class="candisable&&dangerInfor.outhospitaldate?'disabledinput':''"
                    ></el-date-picker>
                  </el-form-item>
                </div>
              </el-col>-->
            </el-row>
            <el-row>
              <!-- <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="疾病分类"
                    prop="dieasetype"
                    :rules="dangerInfor.accidenttype=='01'&&!candisable?rules.dieasetype:[{ required: false, message: '请输入', trigger: 'blur' }]"
                  >
                    <el-radio-group
                      v-model="dangerInfor.dieasetype"
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.dieasetype?'disabledinput':''"
                    >
                      <el-radio
                        :label="item.code"
                        :key="item.code"
                        v-for="(item,index) in diseaseList"
                      >{{item.codename}}</el-radio>
                    </el-radio-group>
                  </el-form-item>
                </div>
              </el-col>-->

              <!-- <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="诊断依据" prop="dianobasis">
                    <el-select
                      clearable
                      v-model="dangerInfor.dianobasis"
                      placeholder="请选择"
                      multiple
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.dianobasis?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in dianobasisList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>-->
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="受益人是否指定"
                    prop="pointbnf"
                    :rules="getRescode.indexOf('100')!==-1&&!candisable?rules.pointbnf:[{ required: false, message: '请输入', trigger: 'blur' }]"
                  >
                    <el-radio-group
                      v-model="dangerInfor.pointbnf"
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.pointbnf?'disabledinput':''"
                    >
                      <el-radio label="1">是</el-radio>
                      <el-radio label="0">否</el-radio>
                    </el-radio-group>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="申请豁免原因"
                    prop="exempt"
                    :rules="getRescode.indexOf('104')!==-1&&!candisable? rules.exempt:[{ required: false, message: '请输入', trigger: 'blur' }]"
                  >
                    <el-select
                      v-if="dangerInfor.accidenttype==='01'"
                      v-model="dangerInfor.exempt"
                      clearable
                      placeholder="请选择"
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.exempt?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in resource"
                        :key="item.value"
                        :label="item.text"
                        :value="item.value"
                      ></el-option>
                    </el-select>

                    <el-select
                      v-if="dangerInfor.accidenttype==='02'"
                      v-model="dangerInfor.exempt"
                      clearable
                      placeholder="请选择"
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.exempt?'disabledinput':''"
                    >
                      <el-option
                        v-for="item in resource1"
                        :key="item.value"
                        :label="item.text"
                        :value="item.value"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="伤残鉴定报告"
                    prop="disabledrpt"
                    :rules="(getRescode.indexOf('101')!==-1||getRescode.indexOf('103')!==-1||getRescode.indexOf('104')!==-1||getRescode.indexOf('6')!==-1||getRescode.indexOf('7')!==-1)&&!candisable?rules.disabledrpt:[{ required: false, message: '请输入', trigger: 'blur' }]"
                  >
                    <el-radio-group
                      v-model="dangerInfor.disabledrpt"
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.disabledrpt?'disabledinput':''"
                    >
                      <el-radio label="1">是</el-radio>
                      <el-radio label="0">否</el-radio>
                    </el-radio-group>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item
                    label="工伤报告（失能鉴定、残疾证）"
                    prop="occuprpt"
                    class="midSty"
                    :rules="(getRescode.indexOf('101')!==-1||getRescode.indexOf('103')!==-1||getRescode.indexOf('104')!==-1||getRescode.indexOf('6')!==-1||getRescode.indexOf('7')!==-1)&&!candisable?rules.occuprpt:[{ required: false, message: '请输入', trigger: 'blur' }]"
                  >
                    <el-radio-group
                      v-model="dangerInfor.occuprpt"
                      :disabled="candisable"
                      :class="candisable&&dangerInfor.occuprpt?'disabledinput':''"
                    >
                      <el-radio label="1">是</el-radio>
                      <el-radio label="0">否</el-radio>
                    </el-radio-group>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
          </el-form>
        </el-collapse-item>
      </el-collapse>
      <div style="overflow:hidden">
        <div style="float:right;margin-bottom:10px;">
          <el-button type="primary" round @click="impInfoChange">重要信息修改</el-button>
        </div>
      </div>

      <el-collapse v-model="activeName">
        <el-collapse-item name="4" id="6">
          <template slot="title">
            申请人信息
            <i
              class="header-icon el-icon-caret-bottom"
              style="margin: 0 8px 0 auto;font-size: 30px;"
            ></i>
          </template>
          <el-form ref="form" :model="form" v-model="labelPosition" label-width="135px">
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="申请人姓名">
                    <el-input v-model="applicationInfor.rgtantname" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="申请人与出险人关系" class="midSty">
                    <el-input
                      v-model="applicationInfor.relationname"
                      disabled
                      class="disabledinput"
                    ></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="证件类型">
                    <el-input v-model="applicationInfor.idtypename" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="证件号码">
                    <el-input v-model="applicationInfor.idno" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="移动电话">
                    <el-input
                      v-model="applicationInfor.rgtantmobile"
                      disabled
                      class="disabledinput"
                    ></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="邮政编码">
                    <el-input v-model="applicationInfor.postcode" disabled class="disabledinput"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <div class="grid-content applyAddress">
                  <el-form-item label="联系地址">
                    <el-input
                      v-model="applicationInfor.rgtantprovincename"
                      disabled
                      class="disabledinput"
                    ></el-input>
                    <el-input
                      v-model="applicationInfor.rgtantcityname"
                      disabled
                      class="disabledinput"
                    ></el-input>
                    <el-input
                      v-model="applicationInfor.rgtantcountyname"
                      disabled
                      class="disabledinput"
                    ></el-input>
                    <span style="width:255px;display:inline-block;">
                      <el-input
                        v-model="applicationInfor.rgtantaddress"
                        placeholder="详细地址"
                        disabled
                        class="disabledinput applyDes"
                      ></el-input>
                    </span>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
          </el-form>
        </el-collapse-item>
      </el-collapse>

      <el-collapse v-model="activeName">
        <el-collapse-item name="5" id="7">
          <template slot="title">
            领款人信息
            <i
              class="header-icon el-icon-caret-bottom"
              style="margin: 0 8px 0 auto;font-size: 30px;"
            ></i>
          </template>
          <el-form ref="form" :model="form" v-model="labelPosition" label-width="135px">
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="与被保险人关系">
                    <el-select disabled v-model="drawMoneyInfor.relationtocont">
                      <el-option
                        v-for="item in linglist"
                        :key="item.id"
                        :label="item.name"
                        :value="item.id"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="账户所有人姓名">
                    <el-input v-model="drawMoneyInfor.recename" disabled maxlength="20"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="职业">
                    <el-select v-model="drawMoneyInfor.profession" placeholder="请选择" disabled>
                      <el-option
                        v-for="item in workListss"
                        :key="item.occupationcode"
                        :label="item.occuptionname"
                        :value="item.occupationcode"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="年收入" disabled>
                    <el-input v-model="drawMoneyInfor.annualincome" disabled maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="证件类型">
                    <el-select
                      disabled
                      v-model="drawMoneyInfor.receidtype"
                      placeholder="请选择"
                      clearable
                    >
                      <el-option
                        v-for="item in cardTypeList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="证件号码">
                    <el-input disabled v-model="drawMoneyInfor.receidno" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="16">
                <div class="grid-content place" style="display:flex">
                  <el-form-item label="授权银行" prop="headbankname">
                    <el-select disabled v-model="drawMoneyInfor.headbankname" placeholder="下拉模糊">
                      <el-option
                        v-for="item in tBankList"
                        :key="item.bankid"
                        :label="item.bankname"
                        :value="item.bankid"
                      ></el-option>
                    </el-select>
                  </el-form-item>

                  <el-form-item label class="risk_address">
                    <el-select disabled v-model="drawMoneyInfor.province" placeholder="所在地区">
                      <el-option
                        v-for="item in bankAddressList"
                        :key="item.standardareasid"
                        :label="item.standardareasname"
                        :value="item.standardareasid"
                      ></el-option>
                    </el-select>
                  </el-form-item>

                  <el-form-item label class="risk_address">
                    <el-select disabled v-model="drawMoneyInfor.bankname" placeholder="支行">
                      <el-option
                        v-for="item in branchBankListss"
                        :key="item.banklocationsid"
                        :label="item.banklocationsname"
                        :value="item.banklocationsid"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="授权账户号码">
                    <el-input disabled v-model="drawMoneyInfor.bankaccno" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="24">
                <div class="grid-content place">
                  <el-form-item label="联系地址">
                    <el-select disabled v-model="drawMoneyInfor.receiveaccprovinc" placeholder="省">
                      <el-option
                        v-for="item in provinceList"
                        :key="item.code"
                        :label="item.province"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                  <el-form-item label class="risk_address">
                    <el-select disabled v-model="drawMoneyInfor.receivecity" placeholder="市">
                      <el-option
                        v-for="item in cityListss"
                        :key="item.code"
                        :label="item.city"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                  <el-form-item label class="risk_address" style="margin-left:8px;">
                    <el-select disabled v-model="drawMoneyInfor.receivedistrict" placeholder="区">
                      <el-option
                        v-for="item in areaListss"
                        :key="item.code"
                        :label="item.country"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                  <el-form-item label class="risk_address">
                    <span class="full">
                      <el-input
                        disabled
                        v-model="drawMoneyInfor.receiveaddress"
                        placeholder="详细地址"
                        maxlength="100"
                      ></el-input>
                    </span>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="联系方式">
                    <el-input disabled v-model="drawMoneyInfor.contactway" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="单位名称">
                    <el-input disabled v-model="drawMoneyInfor.workunit" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <div class="grid-content">
                  <el-form-item label="单位地址">
                    <el-input disabled v-model="drawMoneyInfor.workaddress" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
          </el-form>
        </el-collapse-item>
      </el-collapse>

      <div id="8"></div>
      <div id="9"></div>
      <div id="10"></div>
      <!-- <div id="11"></div>
      <div id="12"></div>-->

      <el-tabs v-model="activeR" type="card" @tab-click="handleClick">
        <!-- <div :class="{box:isbox}"></div> -->
        <div :style="style1" :class="isbox ? 'box' : ''"></div>
        <el-tab-pane label="诊断代码" name="one">
          <div class="work_table">
            <el-table :data="diagnoseListArr" style="width: 100%;padding:0 10px;">
              <el-table-column label="序号" type="index"></el-table-column>
              <el-table-column prop="diagnosticcode" label="诊断代码" align="center">
                <template slot="header" slot-scope="scope">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>诊断代码</span>
                </template>
                <template slot-scope="scope">
                  <!-- <span>{{typeToname(scope.row.diagcode)}}</span> -->
                  <!-- <el-input v-model="scope.row.diagnosticcode" disabled></el-input> -->
                  <p>{{scope.row.diagnosticcode}}</p>
                </template>
              </el-table-column>
              <el-table-column prop="diagnosticname" label="诊断名称" align="center">
                <template slot="header">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>诊断名称</span>
                </template>
                <template slot-scope="scope">
                  <!-- <el-input v-model="scope.row.diagnosticname"></el-input> -->
                  <el-select
                    v-model="scope.row.diagnosticname"
                    clearable
                    placeholder="请选择"
                    filterable
                    :filter-method="filtered"
                    @change="changDiagnosticname(scope.row)"
                    @focus="init"
                    v-el-select-loadmore="loadmore"
                  >
                    <el-option
                      v-for="item in diagcodeList"
                      :key="item.code"
                      :label="item.codename"
                      :value="item.codename"
                    ></el-option>
                  </el-select>
                </template>
              </el-table-column>
              <el-table-column prop="customername" label="操作" align="center">
                <template slot-scope="scope">
                  <el-button
                    size="mini"
                    @click="deleteItem('2',scope.$index)"
                    type="danger"
                    round
                  >删除</el-button>
                  <!-- <span class="delete" @click="deleteItem('2',scope.$index)"></span> -->
                </template>
              </el-table-column>
            </el-table>
            <div style="overflow:hidden">
              <div style="float:right;margin:10px 10px 10px 0">
                <el-button type="primary" round @click="addItem('2')">增加</el-button>
              </div>
            </div>
          </div>
        </el-tab-pane>
        <el-tab-pane label="伤残代码" name="two">
          <el-table :data="diseaseListArr" style="width: 100%;padding:0 10px;">
            <el-table-column label="序号" type="index"></el-table-column>
            <el-table-column label="伤残代码" prop="disabilitycode" align="center">
              <template slot="header">
                <span
                  class="redStars"
                  v-if="getRescode.indexOf('101')!==-1||getRescode.indexOf('103')!==-1||getRescode.indexOf('6')!==-1||getRescode.indexOf('7')!==-1"
                >&nbsp;*&nbsp;</span>
                <span>伤残代码</span>
              </template>
              <template slot-scope="scope">
                <p>{{scope.row.disabilitycode}}</p>
              </template>
            </el-table-column>
            <el-table-column prop="disabilityname" label="伤残名称" align="center">
              <template slot="header">
                <span
                  class="redStars"
                  v-if="getRescode.indexOf('101')!==-1||getRescode.indexOf('103')!==-1||getRescode.indexOf('6')!==-1||getRescode.indexOf('7')!==-1"
                >&nbsp;*&nbsp;</span>
                <span>伤残名称</span>
              </template>
              <template slot-scope="scope">
                <el-select
                  v-model="scope.row.disabilityname"
                  clearable
                  placeholder="请选择"
                  filterable
                  @change="changeDisabilityname(scope.row)"
                >
                  <el-option
                    v-for="item in disabilityList"
                    :key="item.code"
                    :label="item.codename"
                    :value="item.codename"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column prop="disabilitylevel" label="伤残等级" align="center">
              <template slot="header">
                <span
                  class="redStars"
                  v-if="getRescode.indexOf('101')!==-1||getRescode.indexOf('103')!==-1||getRescode.indexOf('6')!==-1||getRescode.indexOf('7')!==-1"
                >&nbsp;*&nbsp;</span>
                <span>伤残等级</span>
              </template>
              <template slot-scope="scope">
                <p>{{scope.row.disabilitylevel}}</p>
              </template>
            </el-table-column>
            <el-table-column label="操作" align="center">
              <template slot-scope="scope">
                <el-button size="mini" @click="deleteItem('1',scope.$index)" type="danger" round>删除</el-button>
              </template>
            </el-table-column>
          </el-table>
          <div style="overflow:hidden">
            <div style="float:right;margin:10px 10px 10px 0">
              <el-button type="primary" round @click="addItem('1')">增加</el-button>
            </div>
          </div>
        </el-tab-pane>
        <el-tab-pane label="手术代码" name="three">
          <el-table :data="operationListArr" style="width: 100%;padding:0 10px;">
            <el-table-column label="序号" type="index"></el-table-column>
            <el-table-column prop="operationcode" label="手术代码" align="center">
              <template slot-scope="scope">
                <p>{{scope.row.operationcode}}</p>
              </template>
            </el-table-column>
            <el-table-column prop="operationname" label="手术名称" align="center">
              <template slot-scope="scope">
                <el-select
                  v-model="scope.row.operationname"
                  clearable
                  placeholder="请选择"
                  filterable
                  @change="changeOperationname(scope.row)"
                >
                  <el-option
                    style="width: 300px"
                    v-for="item in operationList"
                    :title="item.codename"
                    :key="item.code"
                    :label="item.codename"
                    :value="item.codename"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column prop="customername" label="操作" align="center">
              <template slot-scope="scope">
                <el-button size="mini" @click="deleteItem('3',scope.$index)" type="danger" round>删除</el-button>
              </template>
            </el-table-column>
          </el-table>
          <div style="overflow:hidden">
            <div style="float:right;margin:10px 10px 10px 0">
              <el-button type="primary" round @click="addItem('3')">增加</el-button>
            </div>
          </div>
        </el-tab-pane>
        <el-tab-pane label="骨折代码" name="four">
          <div class="work_table">
            <el-table :data="fractureListArr" style="width: 100%;padding:0 10px;">
              <el-table-column label="序号" type="index"></el-table-column>
              <el-table-column prop="fracturename" label="骨折部位" align="center">
                <template slot="header">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>骨折部位</span>
                </template>
                <template slot-scope="scope">
                  <el-select
                    v-model="scope.row.fracturename"
                    clearable
                    placeholder="请选择"
                    filterable
                    @change="changFracturename(scope.row)"
                  >
                    <el-option
                      v-for="item in fractureList"
                      :key="item.fracturecode"
                      :label="item.fracturename"
                      :value="item.fracturename"
                    ></el-option>
                  </el-select>
                </template>
              </el-table-column>
              <el-table-column prop="fracturedetailname" label="骨折具体部位" align="center">
                <template slot="header">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>骨折具体部位</span>
                </template>
                <template slot-scope="scope">
                  <el-select
                    v-model="scope.row.fracturedetailname"
                    clearable
                    placeholder="请选择"
                    filterable
                    @focus="initfracture(scope.row)"
                    @change="changFractureDname(scope.row)"
                  >
                    <el-option
                      v-for="item in fractureDList"
                      :key="item.fracturedetailcode"
                      :label="item.fracturedetailname"
                      :value="item.fracturedetailname"
                    ></el-option>
                  </el-select>
                </template>
              </el-table-column>
              <el-table-column prop="fracturelevel" label="骨折程度" align="center">
                <template slot="header">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>骨折程度</span>
                </template>
                <template slot-scope="scope">
                  <el-select
                    v-model="scope.row.fracturelevel"
                    clearable
                    placeholder="请选择"
                    filterable
                    @focus="initfracture11(scope.row)"
                  >
                    <el-option
                      v-for="(item,index) in fractureDetailList"
                      :key="index"
                      :label="item.fracturelevel"
                      :value="item.fracturelevel"
                    ></el-option>
                  </el-select>
                </template>
              </el-table-column>
              <el-table-column label="操作" align="center">
                <template slot-scope="scope">
                  <el-button
                    size="mini"
                    @click="deleteItem('4',scope.$index)"
                    type="danger"
                    round
                  >删除</el-button>
                </template>
              </el-table-column>
            </el-table>
            <div style="overflow:hidden">
              <div style="float:right;margin:10px 10px 10px 0">
                <el-button type="primary" round @click="addItem('4')">增加</el-button>
              </div>
            </div>
          </div>
        </el-tab-pane>
        <el-tab-pane label="重疾代码" name="five">
          <div class="work_table">
            <el-table :data="illnessListArr" style="width: 100%;padding:0 10px;">
              <el-table-column label="序号" type="index"></el-table-column>
              <el-table-column prop="criticalname" label="重疾名称" align="center">
                <template slot="header">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>重疾名称</span>
                </template>
                <template slot-scope="scope">
                  <el-select
                    v-model="scope.row.criticalname"
                    clearable
                    placeholder="请选择"
                    filterable
                    :filter-method="filteredIllness"
                    @change="changIllnessname(scope.row)"
                    @focus="initIll"
                    v-el-select-loadmore="loadmoreIll"
                  >
                    <el-option
                      v-for="item in illnessList"
                      :key="item.criticalcode"
                      :label="item.criticalname"
                      :value="item.criticalname"
                    ></el-option>
                  </el-select>
                </template>
              </el-table-column>
              <!-- <el-table-column prop="bigsource" label="大科" align="center">
                <template slot="header">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>大科</span>
                </template>
                <template slot-scope="scope">
                  <p>{{scope.row.bigsource}}</p>
                </template>
              </el-table-column>
              <el-table-column prop="smallsource" label="小科" align="center">
                <template slot="header" slot-scope="scope">
                  <span class="redStars">&nbsp;*&nbsp;</span>
                  <span>小科</span>
                </template>
                <template slot-scope="scope">
                  <p>{{scope.row.smallsource}}</p>
                </template>
              </el-table-column>-->
              <el-table-column label="操作" align="center">
                <template slot-scope="scope">
                  <el-button
                    size="mini"
                    @click="deleteItem('5',scope.$index)"
                    type="danger"
                    round
                  >删除</el-button>
                </template>
              </el-table-column>
            </el-table>
            <div style="overflow:hidden">
              <div style="float:right;margin:10px 10px 10px 0">
                <el-button type="primary" round @click="addItem('5')">增加</el-button>
              </div>
            </div>
          </div>
        </el-tab-pane>
      </el-tabs>
      <div style="text-align:right">
        <el-button type="primary" round @click="matcAdjust">匹配并理算</el-button>
        <el-button type="primary" round @click="toSameAccident">同一事故认定</el-button>
      </div>
      <!-- <div id="13"></div>
      <div id="14"></div>
      <div id="15"></div>
      <div id="16"></div>-->
      <!-- 赔案计算信息 -->
      <div class="work_queue" v-show="isPipei1&&countData1.length>0">
        <span>赔案计算信息</span>
        <div class="box"></div>
      </div>
      <div class="work_table" style="margin-bottom:20px;" v-show="isPipei1&&countData1.length>0">
        <el-table :data="countData1" style="width: 100%">
          <el-table-column label="序号" type="index" align="center"></el-table-column>
          <el-table-column prop="standpay" label="赔付金额" align="center"></el-table-column>
          <el-table-column prop="cutmoney" label="扣减项总金额" align="center"></el-table-column>
          <el-table-column prop="realpay" label="最终赔付金额" align="center"></el-table-column>
          <el-table-column prop="declinepay" label="拒赔金额" align="center"></el-table-column>
        </el-table>
      </div>
      <!-- 理赔类型计算信息 -->
      <div class="work_queue" v-show="isPipei2&&countData2.length>0">
        <span>理赔类型计算信息</span>
        <div class="box"></div>
      </div>
      <div class="work_table" style="margin-bottom:20px;" v-show="isPipei2&&countData2.length>0">
        <el-table :data="countData2" style="width: 100%">
          <el-table-column label="序号" type="index" align="center" width="65"></el-table-column>
          <el-table-column prop="claimtype" label="理赔类型名称" align="center"></el-table-column>
          <el-table-column prop="tabfeemoney" label="账单金额" align="center"></el-table-column>
          <el-table-column prop="selfamnt" label="自费金额" align="center"></el-table-column>
          <el-table-column prop="totalpay" label="统筹/附加金额" align="center"></el-table-column>
          <el-table-column prop="othpay" label="其他补偿" align="center"></el-table-column>
          <el-table-column prop="claimmoney" label="保单合计理算金额" align="center"></el-table-column>
          <el-table-column prop="realpay" label="最终赔付金额" align="center"></el-table-column>
        </el-table>
      </div>
      <!-- 保单计算信息 -->
      <div class="work_queue" v-show="isPipei3&&countData3.length>0">
        <!-- <img src="../../assets/images/report/tab_btn@1x.png" alt=""> -->
        <span>保单计算信息</span>
        <div class="box"></div>
      </div>
      <div class="work_table" style="margin-bottom:20px;" v-show="isPipei3&&countData3.length>0">
        <el-table :data="countData3" style="width: 100%">
          <el-table-column label="序号" type="index" align="center" width="65"></el-table-column>
          <el-table-column prop="contno" label="保单号" align="center"></el-table-column>
          <el-table-column prop="getdutykind" label="理赔类型" align="center">
            <template slot-scope="scope">
              <span>{{scope.row.getdutykind|resodefilt}}</span>
            </template>
          </el-table-column>
          <el-table-column prop="cvalidate" label="生效日期" align="center"></el-table-column>
          <el-table-column prop="contstate" label="保单状态" align="center"></el-table-column>
          <el-table-column prop="riskcode" label="险种代码" align="center"></el-table-column>
          <el-table-column prop="riskname" label="险种名称" align="center"></el-table-column>
          <el-table-column prop="standpay" label="理算金额" align="center"></el-table-column>
          <el-table-column prop="uwflag" label="核保决定" align="center"></el-table-column>
        </el-table>
      </div>
      <!-- 保项计算信息 -->
      <div class="work_queue" v-show="isPipei4&&countData4.length>0">
        <!-- <img src="../../assets/images/report/tab_btn@1x.png" alt=""> -->
        <span>保项计算信息</span>
        <div class="box"></div>
      </div>
      <div class="work_table" style="margin-bottom:20px;" v-show="isPipei4&&countData4.length>0">
        <el-table :data="countData4" style="width: 100%">
          <el-table-column label="序号" type="index" width="65" align="center"></el-table-column>
          <el-table-column prop="adjremark" max-width="45" min-width="35" align="center">
            <template slot-scope="scope">
              <el-popover
                v-if="scope.row.adjremark"
                placement="top-start"
                width="200"
                trigger="hover"
                content
              >
                <div>{{scope.row.adjremark}}</div>
                <template slot="reference" style="border:none;">
                  <img src="../../assets/images/filing/warn.png" alt style="width:20px;height:20px" />
                </template>
              </el-popover>
            </template>
          </el-table-column>
          <el-table-column prop="contno" label="保单号" align="center" width="150"></el-table-column>
          <el-table-column prop="riskcode" label="险种代码" align="center" width="150">
            <template slot-scope="scope">
              <div
                class="riskcodePDF"
                @click="clickCell(scope.row.riskcode)"
              >{{ scope.row.riskcode }}</div>
            </template>
          </el-table-column>
          <el-table-column prop="riskname" label="险种名称" align="center" width="150"></el-table-column>
          <el-table-column prop="getdutyname" label="保险责任" align="center" width="150"></el-table-column>
          <el-table-column prop="standpay" label="理算金额" align="center" width="150"></el-table-column>
          <el-table-column prop="realpay" label="调整为金额" align="center" width="150">
            <template slot-scope="scope">
              <el-input
                v-model="scope.row.realpay"
                @blur="moneyChek(scope.row.realpay)"
                maxlength="13"
              ></el-input>
            </template>
          </el-table-column>
          <el-table-column prop="givetype" label="给付状态" align="center" width="150">
            <template slot-scope="scope">
              <el-select placeholder="请选择" v-model="scope.row.givetype" clearable>
                <el-option
                  v-for="(item,index) in giveTypeList"
                  :label="item.codename"
                  :value="item.code"
                  :key="index"
                ></el-option>
              </el-select>
            </template>
          </el-table-column>
          <el-table-column prop="getstartdate" label="责任起期" align="center" width="150"></el-table-column>
          <el-table-column prop="getenddate" label="责任止期" align="center" width="150"></el-table-column>
          <el-table-column prop="realHospdate" label="住院天数" align="center" width="150"></el-table-column>
          <el-table-column prop="amnt" label="基本保险金额" align="center" width="150"></el-table-column>
          <el-table-column prop="freeamnt" label="优惠保险金额" align="center" width="150"></el-table-column>
          <el-table-column prop="outdutyamnt" label="免赔额" align="center" width="150"></el-table-column>
          <el-table-column prop="agreeamnt" label="剩余免赔额" align="center" width="150"></el-table-column>
          <el-table-column prop="yearbonus" label="红利金额" align="center" width="150"></el-table-column>
        </el-table>
      </div>

      <el-collapse v-model="activeName">
        <el-collapse-item name="6" id="11">
          <template slot="title">
            审核管理
            <i
              class="header-icon el-icon-caret-bottom"
              style="margin: 0 8px 0 auto;font-size: 30px;"
            ></i>
          </template>
          <el-form
            ref="auditObj"
            :model="auditObj"
            v-model="labelPosition"
            :rules="rules"
            label-width="18%"
            :label-position="topLabelPosition"
            style="padding:0 10px;"
          >
            <el-row style="padding-top:20px;">
              <el-col :span="24">
                <div class="grid-content">
                  <el-form-item label="决定解释（包括符号最多700字）" prop="auditexplain">
                    <el-input
                      type="textarea"
                      :autosize="{ minRows: 8}"
                      placeholder="请输入决定解释"
                      maxlength="700"
                      show-word-limit
                      v-model="auditObj.auditexplain"
                    ></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
            <el-row style="padding-top:20px;">
              <el-col :span="24">
                <div class="grid-content">
                  <el-form-item label="审核意见（包括符号最多700字）" prop="auditidea">
                    <el-input
                      type="textarea"
                      :autosize="{ minRows: 8}"
                      placeholder="请输入审核意见"
                      maxlength="700"
                      show-word-limit
                      v-model="auditObj.auditidea"
                    ></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
          </el-form>
          <el-form
            ref="audiObj"
            :model="auditObj"
            :rules="rules"
            v-model="labelPosition"
            label-width="35%"
            :validate-on-rule-change="false"
          >
            <el-row>
              <el-col :span="8">
                <div class="grid-content audit">
                  <el-form-item label="审核结论" prop="auditconclusion">
                    <el-select
                      v-model="auditObj.auditconclusion"
                      clearable
                      placeholder="请选择"
                      @change="changeAudit(auditObj.auditconclusion)"
                    >
                      <el-option
                        v-for="item in llclaimconclusionList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8">
                <!-- 拒赔 -->
                <div class="grid-content" v-if="auditObj.auditconclusion == 5">
                  <el-form-item
                    label="撤件原因"
                    ref="auditcancelreason"
                    prop="auditcancelreason"
                    @change="audit"
                    :rules="auditObj.auditconclusion == 5?rules.auditnopassreason2:[{ required: false, message: '请选择', trigger: 'blur' }]"
                  >
                    <el-select
                      v-model="auditObj.auditcancelreason"
                      clearable
                      placeholder="请选择"
                      prop="auditcancelreason"
                    >
                      <el-option
                        v-for="item in reasonswithdrawalList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
                <div class="grid-content" v-if="auditObj.auditconclusion == 4">
                  <el-form-item
                    label="拒赔原因"
                    ref="auditnopassreason"
                    prop="auditnopassreason"
                    @change="audit"
                    :rules="auditObj.auditconclusion == 4?rules.auditnopassreason:[{ required: false, message: '请选择', trigger: 'blur' }]"
                  >
                    <el-select v-model="auditObj.auditnopassreason" clearable placeholder="请选择">
                      <el-option
                        v-for="item in llprotestreasonList"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
                <div class="grid-content" v-if="auditObj.auditconclusion == 6">
                  <el-form-item
                    label="回退原因"
                    ref="llauditbackreason"
                    prop="llauditbackreason"
                    @change="audit"
                    :rules="auditObj.auditconclusion == 6?rules.llauditbackreason:[{ required: false, message: '请选择', trigger: 'blur' }]"
                  >
                    <el-select v-model="auditObj.llauditbackreason" clearable placeholder="请选择">
                      <el-option
                        v-for="item in backReason"
                        :key="item.code"
                        :label="item.codename"
                        :value="item.code"
                      ></el-option>
                    </el-select>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8" v-if="auditObj.auditconclusion == 6">
                <div class="grid-content">
                  <el-form-item
                    label="回退原因说明"
                    ref="backdesc"
                    prop="backdesc"
                    :rules="auditObj.auditconclusion == 6?rules.backdesc:[{ required: false, message: '请选择', trigger: 'blur' }]"
                  >
                    <el-input v-model="auditObj.backdesc" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8" v-if="auditObj.auditconclusion == 4">
                <div class="grid-content">
                  <el-form-item
                    label="原因说明"
                    prop="auditnopassdesc"
                    ref="auditnopassdesc"
                    :rules="auditObj.auditconclusion == 4?rules.auditnopassdesc:[{ required: false, message: '请选择', trigger: 'blur' }]"
                  >
                    <el-input v-model="auditObj.auditnopassdesc" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
              <el-col :span="8" v-if="auditObj.auditconclusion == 5">
                <div class="grid-content">
                  <el-form-item
                    label="原因说明"
                    prop="auditcanceldesc"
                    ref="auditcanceldesc1"
                    :rules="auditObj.auditconclusion == 5?rules.auditcanceldesc:[{ required: false, message: '请选择', trigger: 'blur' }]"
                  >
                    <el-input v-model="auditObj.auditcanceldesc" maxlength="100"></el-input>
                  </el-form-item>
                </div>
              </el-col>
            </el-row>
          </el-form>
        </el-collapse-item>
      </el-collapse>
      <div class="bottom_box_before">
        <div class="box_before">
          <el-button
            type="primary"
            round
            @click="noticepdfprint()"
            :disabled="auditObj.auditconclusion != '5' &&( auditObj.auditconclusion == '6' || !this.countData1 || this.countData1.length == 0)"
          >通知书预览</el-button>
          <el-button type="primary" @click="saveAudit1()" round :disabled="dissaveAudit1()">审核确认</el-button>
        </div>
      </div>

      <div class="botton_box">
        <div style="text-align:center;" class="button_style">
          <el-button type="primary" round size="mini" @click="getHosa">医疗单证录入</el-button>
          <el-button
            type="primary"
            round
            @click="toInitiatingPhoto"
            :disabled="getPhotoState()"
            size="mini"
          >生成照会</el-button>
          <el-button
            type="primary"
            round
            @click="toInitiateSurvey"
            :disabled="getState()"
            size="mini"
          >提起调查</el-button>
          <el-button
            type="primary"
            round
            size="mini"
            @click="toSecondary"
            :disabled="startsecondflag == '0' || isShowTwo == '01'"
          >发起二核</el-button>
          <el-button
            type="primary"
            round
            @click="goSecond"
            :disabled="lookTwo == false"
            size="mini"
          >二核结论查看</el-button>
          <el-button type="primary" round @click="toInitImg()" size="mini">影像查询</el-button>
          <el-button
            type="primary"
            round
            size="mini"
            @click="benefitF()"
            :disabled="(!isContractState) || ((!isPipei1&&!countData1.length>0)&&(!isPipei2&&!countData2.length>0)&&(!isPipei3&&!countData3.length>0)&&(!isPipei4&&!countData4.length>0))"
          >受益人分配</el-button>
          <el-button
            type="primary"
            round
            @click="toContractProcess"
            :disabled="!isContractStates"
            size="mini"
          >合同处理</el-button>
          <el-button type="primary" round @click="isShowRemark()" size="mini">备注信息</el-button>
          <el-button
            type="primary"
            round
            size="mini"
            @click="torRollBackMes()"
            :disabled="casebackList.length == 0"
          >回退查询</el-button>
          <el-button @click="saveAudit()" type="primary" round size="mini">保 存</el-button>
          <el-button type="primary" round @click="goBack()" size="mini">返 回</el-button>
        </div>
      </div>
    </div>

    <div class="right">
      <!-- <img src="../../assets/images/filing/anchor_bgc.png" alt=""> -->
      <img src="../../assets/images/filing/downArrow.png" alt class="downArrow" />
      <img src="../../assets/images/filing/TOP.png" alt @click="jump('top')" class="top" />
      <img src="../../assets/images/filing/upArrow.png" alt @click="jump('top')" class="upArrow" />
      <!-- <p style="margin-top:82px;">12344</p>
      <p>ghhjj</p>-->
      <p
        v-for="(item,index) in btnArr"
        :key="index"
        class="btn_text"
        @click="jump(index)"
        :style="{color: activeStep === index ? '#F1CF60' : '#333'}"
      >{{item}}</p>
      <!-- </div> -->
      <!-- 对私受益人分配 -->
      <el-dialog :visible.sync="dialogFormVisible" @close="closeDialog" width="94%">
        <div class="work_queue" style="display: flex;">
          <!-- <img src="../../assets/images/report/tab_btn@1x.png" alt=""> -->
          <span>赔案保单信息</span>
          <div class="box"></div>
        </div>
        <div class="lable">
          <el-table
            :data="benefitData"
            @row-click="getBenfit"
            border
            highlight-current-row
            :header-cell-style="{background:'#F7FAFF',color:'#333333'}"
          >
            <el-table-column label="序号" type="index" align="center" width="50"></el-table-column>
            <el-table-column prop="contno" align="center" label="保单号"></el-table-column>
            <el-table-column prop="pay" align="center" label="赔付金额"></el-table-column>
            <el-table-column prop="state" align="center" label="分配情况"></el-table-column>
          </el-table>
        </div>
        <!-- v-if="noCompany == true && isCompany == false" -->
        <!-- v-if="isCompany == false" -->
        <div v-if="noCompany == true && isCompany == false" class="work_queue" style="display: flex;margin-top: 10px;">
          <!-- <img src="../../assets/images/report/tab_btn@1x.png" alt=""> -->
          <span>理赔受益人信息</span>
          <div class="box"></div>
        </div>
        <div class="lable" v-if="noCompany == true && isCompany == false">
          <!-- <div class="lable" v-if="noCompany == true && isCompany == false"> -->
          <el-table
            :data="benefitArray"
            style="width: 100%"
            :header-cell-style="{background:'#F7FAFF',color:'#333333'}"
          >
            <el-table-column label="序号" type="index" align="center" width="50"></el-table-column>
            <!-- <el-table-column label="姓名" align="center" width="140">
              <template slot="header" slot-scope="scope">
                <span class="redStars">&nbsp*&nbsp</span>
                <span>姓名</span>
              </template>
              <template slot-scope="scope" prop="name">
                <el-input v-model="scope.row.name" maxlength="20"></el-input>
              </template>
            </el-table-column>-->
            <el-table-column label="证件类型" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>证件类型</span>
              </template>
              <template slot-scope="scope" prop="name">
                <el-select placeholder="请选择" v-model="scope.row.idtype">
                  <el-option
                    v-for="item in cardTypeList"
                    :key="item.code"
                    :label="item.codename"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="证件号码" align="center" width="170">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>证件号码</span>
              </template>
              <template slot-scope="scope" prop="idno">
                <el-input
                  v-model="scope.row.idno"
                  @input="changeToUpperCase(scope.row)"
                  @change="scope.row.idno = ToCDB(scope.row.idno)"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="与被保险人关系" align="center" width="150">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>与被保险人关系</span>
              </template>
              <template prop="relationtoinsured" slot-scope="scope">
                <el-select
                  placeholder="请选择"
                  v-model="scope.row.relationtoinsured"
                  @change="toChangeRelation(scope.row,scope.$index)"
                >
                  <el-option
                    v-for="item in relations"
                    :key="item.code"
                    :label="item.codename"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="受益人顺位" align="center" width="150">
              <template slot="header">
                <span>受益人顺位</span>
              </template>
              <template prop="benposition" slot-scope="scope">
                <el-input v-model="scope.row.benposition" disabled></el-input>
              </template>
            </el-table-column>
            <el-table-column prop="bnflot" label="分配比例" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>分配比例（%）</span>
              </template>
              <template slot-scope="scope" prop="name">
                <el-input
                  type="text"
                  v-model="scope.row.bnflot"
                  maxlength="100"
                  @blur="twoNum(scope.row)"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="账户所有人姓名" align="center" width="150">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>账户所有人姓名</span>
              </template>
              <template slot-scope="scope" prop="payeename">
                <el-input
                  :disabled="disableds(scope.row)"
                  v-model="scope.row.payeename"
                  maxlength="20"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column prop="payeeidno" label="授权账户号码" align="center" width="240">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>授权账户号码</span>
              </template>
              <template slot-scope="scope" prop="bankaccno">
                <el-input v-model="scope.row.bankaccno" maxlength="100"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="授权银行" align="center" width="250">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>授权银行</span>
              </template>
              <template slot-scope="scope">
                <el-select
                  placeholder="请选择"
                  v-model="scope.row.bankcode"
                  @change="getBanchBank(scope.row)"
                  clearable
                  filterable
                >
                  <el-option
                    v-for="item in tBankList"
                    :key="item.bankid"
                    :label="item.bankname"
                    :value="item.bankid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="所在地区" align="center" width="200">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>所在地区</span>
              </template>
              <template slot-scope="scope" prop="bankprovince">
                <el-select
                  v-model="scope.row.bankprovince"
                  placeholder="请选择"
                  @change="getBanchBank(scope.row)"
                  filterable
                  clearable
                >
                  <el-option
                    v-for="item in bankAddressList"
                    :key="item.standardareasid"
                    :label="item.standardareasname"
                    :value="item.standardareasid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="支行" align="center" width="280">
              <template slot="header">
                <!-- <span class="redStars">&nbsp*&nbsp</span> -->
                <span>支行</span>
              </template>
              <template slot-scope="scope">
                <el-select v-model="scope.row.bankbranch" clearable filterable placeholder="请选择">
                  <el-option
                    v-for="(item,index) in newbranchBankList[scope.$index]"
                    :key="index"
                    :label="item.banklocationsname"
                    :value="item.banklocationsid"
                  ></el-option>
                </el-select>
                <el-select class="nobankData" v-model="scope.row.bankbranch" placeholder="请选择">
                  <el-option
                    v-for="item in branchBankList"
                    :key="item.banklocationsid"
                    :label="item.banklocationsname"
                    :value="item.banklocationsid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="职业" align="center" width="220">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>职业</span>
              </template>
              <template slot-scope="scope">
                <el-select placeholder="请选择" v-model="scope.row.occupation" filterable>
                  <el-option
                    v-for="item in workList"
                    :key="item.occupationcode"
                    :label="item.occuptionname"
                    :value="item.occupationcode"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="年收入" align="center" width="140">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>年收入</span>
              </template>
              <template slot-scope="scope" prop="annualincome">
                <el-input v-model="scope.row.annualincome" type="text" maxlength="100" min="0"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="联系方式" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;&nbsp;</span>
                <span>联系方式</span>
              </template>
              <template slot-scope="scope" prop="phone">
                <el-input v-model="scope.row.phone" maxlength="100"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="住所地址省" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>住所地址省</span>
              </template>
              <template slot-scope="scope" prop="addressprovince">
                <el-select
                  v-model="scope.row.addressprovince"
                  placeholder="省"
                  @change="changevince1(scope.row,scope.$index)"
                  filterable
                >
                  <el-option
                    v-for="(item,index) in provinceList"
                    :key="index"
                    :label="item.province"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="住所地址市" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>住所地址市</span>
              </template>
              <template slot-scope="scope" prop="addresscity">
                <el-select
                  v-model="scope.row.addresscity"
                  placeholder="市"
                  @change="changaccity1(scope.row)"
                  filterable
                >
                  <el-option
                    v-for="(item,index) in newcitylist1[scope.$index]"
                    :key="index"
                    :label="item.city"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="住所地址区" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>住所地址区</span>
              </template>
              <template slot-scope="scope" prop="addressarea">
                <el-select
                  @change="changecountry(scope.row)"
                  v-model="scope.row.addressarea"
                  placeholder="区"
                  filterable
                >
                  <el-option
                    v-for="(item,index) in newarealist1[scope.$index]"
                    :key="index"
                    :label="item.country"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="详细住址" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>详细住址</span>
              </template>
              <template slot-scope="scope" prop="addressdetail">
                <el-input v-model="scope.row.addressdetail"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="工作单位名称" align="center" width="160">
              <template slot-scope="scope" prop="workunit">
                <el-input v-model="scope.row.workunit" maxlength="100"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="工作单位地址" align="center" width="160">
              <template slot-scope="scope" prop="workaddress">
                <el-input v-model="scope.row.workaddress" maxlength="100"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="操作">
              <template slot-scope="scope">
                <el-button size="mini" @click="deleteData(scope.$index)">删除</el-button>
              </template>
            </el-table-column>
          </el-table>
          <div
            v-if="isCompany != true"
            style="background-color:#fff;text-align:right;padding:10px 20px;"
          >
            <el-button
              type="primary"
              round
              :disabled="this.deleteBnfContNo == ''"
              @click="addData()"
            >增 加</el-button>
            <el-button
              type="primary"
              round
              :disabled="this.deleteBnfContNo == ''"
              @click="saveBenefit()"
            >保 存</el-button>
          </div>
        </div>
        <div v-if="isCompany == true" class="work_queue" style="display: flex;margin-top: 10px;">
          <span>信托公司信息</span>
          <div class="box"></div>
        </div>
        <!-- =================信托============= -->
        <div class="lable" v-if="isCompany == true">
          <el-table
            id="CompanyStyle"
            :data="companyData"
            style="width: 100%"
            :header-cell-style="{background:'#F7FAFF',color:'#333333'}"
            default-expand-all
          >
            <el-table-column type="expand">
              <!-- 信托所有人 -->
              <template>
                <div class="work_queue" style="display: flex;margin-top: 10px;">
                  <span>信托所有人信息</span>
                  <div class="box"></div>
                </div>
                <el-table
                  :data="companyAllData"
                  class="sonTable"
                  border
                  :header-cell-style="{background:'#F7FAFF',color:'#333333'}"
                >
                  <el-table-column type="index" width="60" align="center" label="序号"></el-table-column>
                  <el-table-column prop="owname" label="姓名" align="center" width="150">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>姓名</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.owname"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="owaddr" label="住址" align="center" width="200">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>住址</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.owaddr"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="owidtype" label="证件类型" align="center" width="200">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>证件类型</span>
                    </template>
                    <template slot-scope="scope">
                      <el-select placeholder="请选择" v-model="scope.row.owidtype">
                        <el-option
                          v-for="item in cardTypeList"
                          :key="item.code"
                          :label="item.codename"
                          :value="item.code"
                        ></el-option>
                      </el-select>
                    </template>
                  </el-table-column>
                  <el-table-column prop="owidnum" label="证件号码" align="center" width="200">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>证件号码</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input
                        v-model="scope.row.owidnum"
                        @input="changeToUpperCase(scope.row)"
                        @change="scope.row.owidnum = ToCDB(scope.row.owidnum)"
                      ></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="owidedate" label="证件有效期止期" align="center" width="200">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>证件有效期止期</span>
                    </template>
                    <template slot-scope="scope">
                      <el-date-picker
                        type="date"
                        placeholder="选择日期"
                        v-model="scope.row.owidedate"
                        style="width: 100%;"
                        value-format="yyyy-MM-dd"
                      ></el-date-picker>
                    </template>
                  </el-table-column>
                  <el-table-column prop="owphone" label="联系方式" align="center" width="200">
                    <template slot="header">
                      <!-- <span class="redStars">&nbsp;*&nbsp;</span> -->
                      <span>联系方式</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.owphone"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column label="操作" align="center" width="200">
                    <template slot-scope="scope">
                      <el-button size="mini" @click="deleteCompanyAllData(scope.$index)">删除</el-button>
                    </template>
                  </el-table-column>
                </el-table>
              </template>
              <!-- 信托受益人 -->
              <template>
                <div class="work_queue" style="display: flex;margin-top: 10px;">
                  <span>信托受益人信息</span>
                  <div class="box"></div>
                </div>
                <el-table
                  :data="companyPersonData"
                  class="sonTable"
                  border
                  :header-cell-style="{background:'#F7FAFF',color:'#333333'}"
                >
                  <el-table-column type="index" width="60" align="center" label="序号"></el-table-column>
                  <el-table-column prop="name" label="姓名" align="center" width="150">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>姓名</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.name"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="idtype" label="证件类型" align="center" width="180">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>证件类型</span>
                    </template>
                    <template slot-scope="scope">
                      <el-select placeholder="请选择" v-model="scope.row.idtype">
                        <el-option
                          v-for="item in cardTypeList"
                          :key="item.code"
                          :label="item.codename"
                          :value="item.code"
                        ></el-option>
                      </el-select>
                    </template>
                  </el-table-column>
                  <el-table-column prop="idno" label="证件号码" align="center" width="200">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>证件号码</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input
                        v-model="scope.row.idno"
                        @input="changeToUpperCase(scope.row)"
                        @change="scope.row.idno = ToCDB(scope.row.idno)"
                      ></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="idtypedate" label="证件有效期止期" align="center" width="180">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>证件有效期止期</span>
                    </template>
                    <template slot-scope="scope">
                      <el-date-picker
                        type="date"
                        placeholder="选择日期"
                        v-model="scope.row.idtypedate"
                        style="width: 100%;"
                        value-format="yyyy-MM-dd"
                      ></el-date-picker>
                    </template>
                  </el-table-column>
                  <el-table-column prop="sex" label="性别" align="center" width="140">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>性别</span>
                    </template>
                    <template slot-scope="scope">
                      <el-select v-model="scope.row.sex" clearable placeholder="请选择">
                        <el-option
                          v-for="item in sexList"
                          :key="item.code"
                          :label="item.codename"
                          :value="item.code"
                        ></el-option>
                      </el-select>
                    </template>
                  </el-table-column>

                  <el-table-column prop="nationality" label="国籍" align="center" width="140">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>国籍</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.nationality"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="occupation" label="职业" align="center" width="200">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>职业</span>
                    </template>
                    <template slot-scope="scope">
                      <el-select placeholder="请选择" v-model="scope.row.occupation" filterable>
                        <el-option
                          v-for="item in workList"
                          :key="item.occupationcode"
                          :label="item.occuptionname"
                          :value="item.occupationcode"
                        ></el-option>
                      </el-select>
                    </template>
                  </el-table-column>
                  <el-table-column prop="annualincome" label="年收入" align="center" width="140">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>年收入</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.annualincome"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="phone" label="联系方式" align="center" width="160">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>联系方式</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.phone"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="addressdetail" label="联系地址" align="center" width="160">
                    <template slot="header">
                      <span class="redStars">&nbsp;*&nbsp;</span>
                      <span>联系地址</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.addressdetail"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="workunit" label="单位名称" align="center" width="160">
                    <template slot="header">
                      <!-- <span class="redStars">&nbsp;*&nbsp;</span> -->
                      <span>单位名称</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.workunit"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column prop="workaddress" label="单位地址" align="center" width="160">
                    <template slot="header">
                      <!-- <span class="redStars">&nbsp;*&nbsp;</span> -->
                      <span>单位地址</span>
                    </template>
                    <template slot-scope="scope">
                      <el-input v-model="scope.row.workaddress"></el-input>
                    </template>
                  </el-table-column>
                  <el-table-column label="操作" align="center" width="140">
                    <template slot-scope="scope">
                      <el-button size="mini" @click="deleteCompanyPersonData(scope.$index)">删除</el-button>
                    </template>
                  </el-table-column>
                </el-table>
              </template>
            </el-table-column>
            <el-table-column label="序号" type="index" align="center" width="50"></el-table-column>
            <el-table-column label="账户名称" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>账户名称</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.acname"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="账号" align="center" width="220">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>账号</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.acnumber"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="开户银行" align="center" width="240">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>开户银行</span>
              </template>
              <template slot-scope="scope">
                <el-select
                  placeholder="请选择"
                  @change="getBanchBanks(scope.row)"
                  clearable
                  filterable
                  v-model="scope.row.debank"
                >
                  <el-option
                    v-for="item in tBankList"
                    :key="item.bankid"
                    :label="item.bankname"
                    :value="item.bankid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="开户行所在地" align="center" width="240">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>开户行所在地</span>
              </template>
              <template slot-scope="scope">
                <el-select
                  placeholder="请选择"
                  v-model="scope.row.deadress"
                  @change="getBanchBanks(scope.row)"
                  filterable
                  clearable
                >
                  <el-option
                    v-for="item in bankAddressList"
                    :key="item.standardareasid"
                    :label="item.standardareasname"
                    :value="item.standardareasid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="支行" align="center" width="240">
              <template slot="header">
                <!-- <span class="redStars">&nbsp;*&nbsp;</span> -->
                <span>支行</span>
              </template>
              <template slot-scope="scope">
                <el-select placeholder="请选择" filterable clearable v-model="scope.row.bankbranch">
                  <el-option
                    v-for="item in branchBankList"
                    :key="item.banklocationsid"
                    :label="item.banklocationsname"
                    :value="item.banklocationsid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="单位全称" align="center" width="240">
              <template slot="header">
                <!-- <span class="redStars">&nbsp;*&nbsp;</span> -->
                <span>单位全称</span>
              </template>
              <template slot-scope="scope">
                <el-input disabled v-model="scope.row.tcname"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="单位地址" align="center" width="240">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>单位地址</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.tcaddr"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="经营范围" align="center" width="240">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>经营范围</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.tcbuss"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="统一社会信用代码" align="center" width="200">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>统一社会信用代码</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.tcuscc"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="营业执照有效起期" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>营业执照有效起期</span>
              </template>
              <template slot-scope="scope">
                <el-date-picker
                  type="date"
                  placeholder="选择日期"
                  v-model="scope.row.tcbuslsdate"
                  style="width: 100%;"
                  value-format="yyyy-MM-dd"
                ></el-date-picker>
              </template>
            </el-table-column>
            <el-table-column label="营业执照有效止期" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>营业执照有效止期</span>
              </template>
              <template slot-scope="scope">
                <el-date-picker
                  type="date"
                  placeholder="选择日期"
                  v-model="scope.row.tcbusledate"
                  style="width: 100%;"
                  value-format="yyyy-MM-dd"
                ></el-date-picker>
              </template>
            </el-table-column>
            <el-table-column label="法定代表人姓名" align="center" width="140">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>法定代表人姓名</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.tclrname"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="法定代表人证件类型" align="center" width="180">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>法定代表人证件类型</span>
              </template>
              <template slot-scope="scope">
                <el-select placeholder="请选择" v-model="scope.row.tclridtp">
                  <el-option
                    v-for="item in cardTypeList"
                    :key="item.code"
                    :label="item.codename"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="法定代表人证件号码" align="center" width="180">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>法定代表人证件号码</span>
              </template>
              <template slot-scope="scope">
                <el-input
                  v-model="scope.row.tclridnum"
                  @input="changeToUpperCase(scope.row)"
                  @change="scope.row.tclridnum = ToCDB(scope.row.tclridnum)"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="法定代表人证件有效止期" align="center" width="200">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>法定代表人证件有效止期</span>
              </template>
              <template slot-scope="scope">
                <el-date-picker
                  type="date"
                  placeholder="选择日期"
                  v-model="scope.row.tclridedate"
                  style="width: 100%;"
                  value-format="yyyy-MM-dd"
                ></el-date-picker>
              </template>
            </el-table-column>
            <el-table-column label="控股股东或实际控制人姓名" align="center" width="220">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>控股股东或实际控制人姓名</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.tcacname"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="控股股东或实际控制人证件类型" align="center" width="240">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>控股股东或实际控制人证件类型</span>
              </template>
              <template slot-scope="scope">
                <el-select placeholder="请选择" v-model="scope.row.tcacidtp">
                  <el-option
                    v-for="item in cardTypeList"
                    :key="item.code"
                    :label="item.codename"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="控股股东或实际控制人证件号码" align="center" width="260">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>控股股东或实际控制人证件号码</span>
              </template>
              <template slot-scope="scope">
                <el-input
                  v-model="scope.row.tcacidnum"
                  @input="changeToUpperCase(scope.row)"
                  @change="scope.row.tcacidnum = ToCDB(scope.row.tcacidnum)"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="控股股东或实际控制人证件有效止期" align="center" width="280">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>控股股东或实际控制人证件有效止期</span>
              </template>
              <template slot-scope="scope">
                <el-date-picker
                  type="date"
                  placeholder="选择日期"
                  v-model="scope.row.tcacidedate"
                  style="width: 100%;"
                  value-format="yyyy-MM-dd"
                ></el-date-picker>
              </template>
            </el-table-column>
            <el-table-column label="授权办理业务人员姓名" align="center" width="200">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>授权办理业务人员姓名</span>
              </template>
              <template slot-scope="scope">
                <el-input v-model="scope.row.tcatname"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="授权办理业务人员证件类型" align="center" width="220">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>授权办理业务人员证件类型</span>
              </template>
              <template slot-scope="scope">
                <el-select placeholder="请选择" v-model="scope.row.tcatidtp">
                  <el-option
                    v-for="item in cardTypeList"
                    :key="item.code"
                    :label="item.codename"
                    :value="item.code"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="授权办理业务人员证件号码" align="center" width="220">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>授权办理业务人员证件号码</span>
              </template>
              <template slot-scope="scope">
                <el-input
                  v-model="scope.row.tcatidnum"
                  @input="changeToUpperCase(scope.row)"
                  @change="scope.row.tcatidnum = ToCDB(scope.row.tcatidnum)"
                ></el-input>
              </template>
            </el-table-column>
            <el-table-column label="授权办理业务人员证件有效止期" align="center" width="260">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>授权办理业务人员证件有效止期</span>
              </template>
              <template slot-scope="scope">
                <el-date-picker
                  type="date"
                  placeholder="选择日期"
                  v-model="scope.row.tcatidedate"
                  style="width: 100%;"
                  value-format="yyyy-MM-dd"
                ></el-date-picker>
              </template>
            </el-table-column>
          </el-table>
          <div style="background-color:#fff;text-align:right;padding:10px 20px;">
            <el-button
              type="primary"
              round
              :disabled="this.deleteBnfContNo == ''"
              @click="addCompanyAllData()"
            >新增信托所有人</el-button>
            <el-button
              type="primary"
              round
              :disabled="this.deleteBnfContNo == ''"
              @click="addCompanyPersonData()"
            >新增信托受益人</el-button>
            <el-button
              type="primary"
              round
              :disabled="this.deleteBnfContNo == ''"
              @click="saveCompany()"
            >保 存</el-button>
          </div>
        </div>
      </el-dialog>
      <!-- 对公受益人分配 -->
      <el-dialog :visible.sync="dialogFormPublic" width="94%">
        <div class="work_queue" style="display: flex;">
          <span>赔案保单信息</span>
          <div class="box"></div>
        </div>
        <div class="lable">
          <el-table
            :data="benefitData"
            @row-click="getPubBenfit"
            border
            highlight-current-row
            :header-cell-style="{background:'#F7FAFF',color:'#333333'}"
          >
            <el-table-column label="序号" type="index" align="center" width="50"></el-table-column>
            <el-table-column prop="contno" label="保单号" align="center"></el-table-column>
            <el-table-column prop="pay" label="赔付金额" align="center"></el-table-column>
            <el-table-column prop="state" label="分配情况" align="center"></el-table-column>
          </el-table>
        </div>
        <div class="work_queue" style="display: flex;margin-top: 10px;">
          <span>理赔受益人信息</span>
          <div class="box"></div>
        </div>
        <div class="lable">
          <el-table
            :data="benefitPubArray"
            style="width: 100%;"
            :header-cell-style="{background:'#F7FAFF',color:'#333333'}"
          >
            <el-table-column label="序号" type="index" align="center" width="50"></el-table-column>
            <el-table-column label="对公账户" align="center" width="160">
              <template slot="header">
                <span class="redStars">&nbsp;*&nbsp;</span>
                <span>对公账户</span>
              </template>
              <template slot-scope="scope" prop="accname">
                <el-select
                  v-model="scope.row.accname"
                  @change="changeAccname(scope.row,scope.$index)"
                  placeholder="请选择"
                >
                  <el-option
                    v-for="item in accountList"
                    :key="item.accname"
                    :label="item.accname"
                    :value="item.accname"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="分配比例（%）" align="center" width="160">
              <template>
                <el-input disabled type="text" value="100"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="账户所有人姓名" align="center" width="150">
              <template slot-scope="scope" prop="accpername">
                <el-input disabled v-model="scope.row.accpername" maxlength="20"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="授权账户号码" align="center" width="240">
              <template slot-scope="scope" prop="bankaccno">
                <el-input disabled v-model="scope.row.bankaccno" maxlength="100"></el-input>
              </template>
            </el-table-column>
            <el-table-column label="授权银行" align="center" width="230">
              <template slot-scope="scope">
                <el-select
                  disabled
                  placeholder="请选择"
                  v-model="scope.row.bankcode"
                  @change="getBanchBank(scope.row)"
                  clearable
                  filterable
                >
                  <el-option
                    v-for="item in tBankList"
                    :key="item.bankid"
                    :label="item.bankname"
                    :value="item.bankid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="所在地区" align="center" width="200">
              <template slot-scope="scope" prop="bankprovince">
                <el-select
                  disabled
                  v-model="scope.row.bankprovince"
                  placeholder="请选择"
                  @change="getBanchPubBank(scope.row.bankcode,scope.row.bankprovince)"
                >
                  <el-option
                    v-for="item in bankAddressList"
                    :key="item.standardareasid"
                    :label="item.standardareasname"
                    :value="item.standardareasid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
            <el-table-column label="支行" align="center" width="280">
              <template slot-scope="scope">
                <el-select v-model="scope.row.bankbranch" disabled placeholder="请选择">
                  <el-option
                    v-for="item in branchBankList"
                    :key="item.banklocationsid"
                    :label="item.banklocationsname"
                    :value="item.banklocationsid"
                  ></el-option>
                </el-select>
              </template>
            </el-table-column>
          </el-table>
          <div style="background-color:#fff;text-align:right;padding:10px 20px;">
            <el-button
              type="primary"
              round
              :disabled="this.deleteBnfContNo == ''"
              @click="savePubBenefit()"
            >保 存</el-button>
          </div>
        </div>
      </el-dialog>

      <!--  备注弹框 -->
      <el-dialog :visible.sync="isshowremark" width="74%">
        <remark-dialog
          @changeisshow="changeisshow"
          :is-show-remark.sync="isshowremark"
          :rgtno="this.rgtno"
          :startphase="3"
        ></remark-dialog>
      </el-dialog>
      <el-dialog :visible.sync="isAudit" width="30%" :show-close="false">
        <span>案件不符合审核规则，将提交审批</span>
        <div style="display: flex;align-items: center;margin-top: 30px;">
          <span style="flex-basis: 25%">指定审批人:</span>
          <el-select
            style="flex-basis: 75%"
            v-model="auditu"
            placeholder="请选择"
            clearable
            filterable
          >
            <el-option
              v-for="item in auditorArr"
              :key="item.auditcode"
              :label="item.auditname"
              :value="item.auditcode"
            ></el-option>
          </el-select>
        </div>
        <div style="margin-top: 20px">
          <el-button style="background-color:#0673FF;" round type="primary" @click="cSure('1')">确认</el-button>
          <el-button round type="info" @click="cSure('2')">取消</el-button>
          <!-- <span @click="cSure('1')">确认</span>
          <span @click="cSure('2')">取消</span>-->
        </div>
      </el-dialog>
    </div>
    <!-- 医疗单证 -->
    <el-dialog
      class="diamh"
      :visible.sync="isShowhospital"
      :close-on-click-modal="false"
      width="100%"
      :show-close="false"
      :fullscreen="true"
    >
      <el-tabs v-model="activeNames" class="mels">
        <el-tab-pane label="普通医疗单证" name="first">
          <medical-dialog
            :isShowhospital.sync="isShowhospital"
            :rgtno.sync="this.rgtno"
            :customerno.sync="this.customerno"
            :hospitalname.sync="this.dangerInfor.hospitalname"
          ></medical-dialog>
        </el-tab-pane>
        <el-tab-pane label="北京医疗单证" name="second">
          <beijing-dialog
            :bjObjForm.sync="bjObjForm"
            :isShowhospital.sync="isShowhospital"
            :key="timer"
          />
        </el-tab-pane>
      </el-tabs>
    </el-dialog>
    <Drag v-if="rgtclass == '微信渠道'" ref="dragno" :rgtobj="rgtobj"></Drag>
    <ZBX
      ref="isZBX"
      :rgtno="rgtno"
      :idno="dangerperInfor.idno"
      :idtype="dangerperInfor.idtype"
      :insuredname="dangerperInfor.name"
    ></ZBX>
  </div>
</template>
<script>
import axios from "axios";
import BeijingDialog from "@/components/BeijingDialog";
import Drag from "../../components/dragCard";
import remarkDialog from "../../components/remarkDialog";
import { post, service } from "../../utils/request.js";
import Policy from "../../components/policy";
import MedicalDialog from "../../components/medicalDialog";
import ZBX from "../../components/ZBX";
import {
  getCodeType,
  checkAudit,
  checkChange,
  nameTocode,
  nameTocode1,
  abc,
  abcd,
  abcde,
  abc1,
  abc2,
  checkdeff,
  checkLfor3,
  checkMfor,
  sumDays,
  checkLfor1,
  checkLfor2,
  accMul,
  numTwo
} from "../../utils/service.js";
export default {
  name: "ReviewInformation",
  components: {
    BeijingDialog,
    Drag,
    remarkDialog,
    Policy,
    MedicalDialog,
    ZBX
  },
  directives: {
    "el-select-loadmore": {
      bind(el, binding) {
        const elss = el.querySelector(
          ".el-select-dropdown .el-select-dropdown__wrap"
        );
        elss.addEventListener("scroll", function() {
          const condition =
            this.scrollHeight - this.scrollTop - 1 <= this.clientHeight;
          if (condition) {
            binding.value();
          }
        });
      }
    }
  },
  data() {
    return {
      // 信托Start
      companyData: [],
      companyAllData: [],
      companyPersonData: [],
      isCompany: false,
      noCompany: false,
      // 信托End
      isShowZBX: false,
      countData4s: [], // 受益人分配页面未保存
      relatoinsureList: [], // 报案人与出险人关系
      isHosname: "",
      workListss: [],
      isshowremark: false, // 备注弹框
      linglist: [
        {
          id: "8",
          name: "投保人"
        },
        {
          id: "32",
          name: "被保人"
        }
      ],
      rgtclass: "柜面渠道",
      activeNames: "first",
      giveTypeList: [
        {
          code: "0",
          codename: "给付"
        },
        {
          code: "1",
          codename: "拒赔"
        },
        {
          code: "2",
          codename: "不承担"
        }
      ],
      bjObjForm: {},
      bJdialogVisible: false,
      dialogVisible: false,
      isShowhospital: false,
      remarkContents: "", // 就诊医院备注
      toShowss: false,
      startsecondflag: localStorage.getItem("startsecondflag"),
      expands: [],
      filterVal: "",
      filterValIll: "",
      countyStr: "",
      provinceStr: "",
      cityStr: "",
      // 保项计算信息PDF
      downloadpath: "",
      // ----枚举
      // 是否匹配理算
      deleteBnfContNo: "",
      lookTwo: false,
      isShowTwo: "",
      pagesize: 10,
      currpage: 1,
      isPipei1: false,
      isPipei2: false,
      isPipei3: false,
      isPipei4: false,
      bankFirst: "",
      candisable: true,
      isAudit: false,
      auditu: null,
      currentPage: 1,
      auditorArr: [], // 审批人
      isAuth: true,
      casebackList: [],
      cardTypeList: [], // 证件类型
      sexList: [], // 性别
      relations: [], // 关系
      reportchnlList: [], //报案渠道
      llclaimtypeList: [], // 理赔类型'
      accidenttypeList: [], //出险类型
      accnatureList: [], // 事故地点性质
      hospitalList: [], // 医院
      diseaseList: [], // 疾病类型
      accReasonList: [], //事故原因
      shoushangList: [], //受伤程度
      // chuxianResult: [], //出险结果
      llclaimconclusionList: [], // 审核结论
      llprotestreasonList: [], // 拒赔原因
      reasonswithdrawalList: [], // 撤件原因
      provinceList: [], //省
      cityList: [], //市
      cityListss: [], //市
      areaList: [], //区
      cityList1: [],
      cityList111: [],
      newcitylist1: [],
      areaList1: [],
      newarealist1: [],
      // dianobasisList: [], //诊断依据
      // resource: [],
      // resource1: [],
      // resource2: [],
      axiosList: [],
      getRescode: [], // 获取理赔类型
      workList: [], //职业
      diagcodeList: [], // 诊断代码
      illnessList: [], //重疾代码
      sFlag: true,
      value: "",
      tableMes: [],
      checkList: [],
      personalData: [],
      accountList: [],
      listForm: {
        accountname: "",
        accountpername: ""
      },
      relationId: "",
      groupaccountid: "",
      timer: "",
      activeStep: 0,
      btnArr: [
        "出险人信息",
        "保单信息查询",
        "既往赔案查询",
        "保全记录",
        "立案申请信息",
        "出险信息",
        "申请人信息",
        "领款人信息",
        "诊断代码",
        "伤残代码",
        "手术代码",

        // "赔案计算信息",
        // "保单计算信息",
        // "保项计算信息",
        "审核管理"
      ],
      centerDialogVisible: false,
      dialogTableVisible: false,
      form: {
        name: "",
        region: "",
        date1: "",
        date2: "",
        delivery: false,
        type: [],
        resource: "",
        desc: ""
      },
      riskResultList: [],
      activeName: ["1", "2", "3", "4", "5", "6", "17"],
      labelPosition: "right",
      topLabelPosition: "top",
      isbox: true,
      style1: {
        margin: "0 0 0 15px"
      },
      isbox1: true,
      style2: {
        margin: "0 0 0 15px"
      },
      active: "first",
      activeR: "one",
      tableData: [],
      tableData1: [],
      clmno: "",
      countData1: [],
      countData2: [],
      countData3: [],
      countData4: [],
      countData4Copy: [],
      dangerperInfor: {},
      initApplicationInfor: {},
      dangerInfor: {
        // accidenttype:'',
        directpay: "",
        // accidentdate:'',
        // accreason:'',

        getRescode: []
      },
      getRescode: [],
      applicationInfor: {},
      drawMoneyInfor: {},
      policyArr1: [],
      policyArr2: [],
      policyArr3: [],
      getJZS: [], // 疾病，诊断，手术
      getZG: [], // 重疾
      getGZ: [], // 骨折
      dialogFormVisible: false,
      dialogFormPublic: false,
      remarkTableData: [],
      conNum: null,
      benefitData: [],
      backdesc: "",
      // 审核
      auditObj: {
        auditconclusion: "", //审核结论
        auditidea: "", // 审核意见
        auditexplain: "",
        auditnopassreason: "", //拒赔撤件原因
        auditnopassdesc: "", // 拒赔撤件原因说明
        auditcancelreason: "",
        auditcanceldesc: "",
        llauditbackreason: "", //回退原因
        backdesc: "" //回退原因说明
      },
      diseaseListArr: [], //疾病代码
      diagnoseListArr: [], // 诊断代码
      operationListArr: [], // 手术
      operationList: [], // 手术名称
      fractureList: [], // 骨折部位
      fractureDList: [], // 骨折具体部位
      fractureDetailList: [], //骨折程度
      fractureListArr: [], //骨折
      illnessListArr: [], // 重疾
      oldObj: null,
      oldObj1: null,
      benefitArray: [],
      benefitPubArray: [],
      tBankList: [], // 总行
      bankAddressList: [], // 所在地区
      branchBankList: [],
      newbranchBankList: [],
      resource: [
        // 豁免原因
        {
          value: "1",
          text: "恶性肿瘤"
        },
        {
          value: "2",
          text: "非恶性肿瘤"
        }
      ],
      resource1: [
        {
          value: "3",
          text: "交通事故"
        },
        {
          value: "4",
          text: "非交通事故"
        }
      ],
      placeOptions: [
        {
          value: "1",
          label: "室内",
          children: [
            {
              value: "01",
              label: "厂房内"
            },
            {
              value: "02",
              label: "室内职场"
            },
            {
              value: "03",
              label: "住宅内"
            },
            {
              value: "04",
              label: "公共室内"
            },
            {
              value: "15",
              label: "电梯"
            }
          ]
        },
        {
          value: "2",
          label: "室外",
          children: [
            {
              value: "05",
              label: "工地"
            },
            {
              value: "06",
              label: "农田"
            },
            {
              value: "07",
              label: "山岭"
            },
            {
              value: "08",
              label: "公共室外"
            }
          ]
        },
        {
          value: "3",
          label: "道路上"
        },
        {
          value: "4",
          label: "交通工具",
          children: [
            {
              value: "09",
              label: "运营车辆内"
            },
            {
              value: "10",
              label: "私家车辆内"
            },
            {
              value: "11",
              label: "火车"
            },
            {
              value: "12",
              label: "飞机"
            },
            {
              value: "13",
              label: "轮船"
            },
            {
              value: "14",
              label: "非机动车"
            }
          ]
        },
        {
          value: "5",
          label: "其他"
        }
      ],
      itemBenefitData: {},
      emptyList: [
        {
          accname: "",
          accpername: null,
          bankaccno: null,
          bankprovince: null,
          bankcode: null,
          bankbranch: null,
          bankcodename: null,
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          contno: this.deleteBnfContNo
        }
      ],
      rules: {
        auditidea: [
          {
            required: true,
            message: "审核意见不能为空！",
            trigger: "blur"
          }
        ],
        auditexplain: [
          {
            required: true,
            message: "决定解释不能为空！",
            trigger: "blur"
          }
        ],
        auditconclusion: [
          {
            required: true,
            message: "审核结论不能为空！",
            trigger: "change"
          }
        ],
        // auditnopassreason: [
        //   {
        //     required: true,
        //     message: "原因不能为空！",
        //     trigger: ["blur", "change"]
        //   }
        // ],
        auditnopassreason: [
          {
            required: true,
            message: "拒赔原因不能为空！",
            trigger: "change"
          }
        ],
        auditcancelreason: [
          {
            required: true,
            message: "撤件原因不能为空！",
            trigger: "change"
          }
        ],
        auditnopassdesc: [
          {
            required: true,
            message: "原因说明不能为空！",
            trigger: "blur"
          }
        ],
        auditcanceldesc: [
          {
            required: true,
            message: "原因说明不能为空！",
            trigger: "blur"
          }
        ],
        llauditbackreason: [
          {
            required: true,
            message: "回退原因不能为空！",
            trigger: "change"
          }
        ],
        backdesc: [
          {
            required: true,
            message: "回退原因说明不能为空！",
            trigger: "blur"
          }
        ],
        getRescode: [
          {
            required: true,
            message: "理赔类型不能为空！",
            trigger: "blur"
          }
        ],
        accidenttype: [
          {
            required: true,
            message: "出险类型不能为空！",
            trigger: "change"
          }
        ],
        accidentdate: [
          {
            required: true,
            message: "出险日期不能为空！",
            trigger: "blur"
          }
        ],
        accreason: [
          {
            required: true,
            message: "事故原因不能为空！",
            trigger: "change"
          }
        ],
        accprovince: [
          {
            required: true,
            message: "省不能为空！",
            trigger: "change"
          }
        ],
        acccity: [
          {
            required: true,
            message: "市不能为空！",
            trigger: "change"
          }
        ],
        acccounty: [
          {
            required: true,
            message: "区不能为空！",
            trigger: "change"
          }
        ],
        accaddress: [
          {
            required: true,
            message: "详细地址不能为空！",
            trigger: "blur"
          }
        ],
        // accidentcourse: [
        //   {
        //     required: true,
        //     message: "请选择出险结果",
        //     trigger: "change"
        //   }
        // ],
        accidentsite: [
          {
            required: true,
            message: "事故发生地点性质不能为空！",
            trigger: "change"
          }
        ],
        // accaddress: [
        //   {
        //     required: true,
        //     message: "请输入出险地点",
        //     trigger: ["blur", "change"]
        //   }
        // ],
        hospitalname: [
          {
            required: true,
            message: "就诊医院不能为空！",
            trigger: "change"
          }
        ],
        dianosedate: [
          {
            required: true,
            message: "确诊日期不能为空！",
            trigger: ["blur", "change"]
          }
        ],
        dieasetype: [
          {
            required: true,
            message: "疾病分类不能为空！",
            trigger: ["blur", "change"]
          }
        ],
        deathdate: [
          {
            required: true,
            message: "身故日期不能为空！",
            trigger: ["blur", "change"]
          }
        ],
        pointbnf: [
          {
            required: true,
            message: "受益人是否指定不能为空！",
            trigger: ["blur", "change"]
          }
        ],
        exempt: [
          {
            required: true,
            message: "申请豁免原因不能为空！",
            trigger: ["blur", "change"]
          }
        ],
        // resource: [
        //   {
        //     required: true,
        //     message: "请选择申请豁免原因",
        //     trigger: ["blur", "change"]
        //   }
        // ],
        disabledrpt: [
          {
            required: true,
            message: "伤残鉴定报告不能为空！",
            trigger: ["blur", "change"]
          }
        ],
        occuprpt: [
          {
            required: true,
            message: "工伤报告不能为空！",
            trigger: ["blur", "change"]
          }
        ]
      },
      money: false,
      formData: {
        pagestart: 1,
        pageend: 100,
        likename: ""
      },
      formData1: {
        pagestart: 0,
        pageend: 100,
        likename: ""
      },
      formDataIll: {
        pagestart: 0,
        pageend: 100,
        likename: ""
      },
      hospitalListsaa: [],
      pageDataaa: {
        startPage: 0,
        endPage: 100
      },
      isContractState: "",
      isContractStates: "",
      rgtobj: null, // 微信框
      rptno: "", // 报案信息参数
      branchBankListss: [],
      areaListss: []
    };
  },
  inject: ["reload"],
  created() {
    this.initBtn();
    this.initInfor(); // 获取基本信息
    this.rgtno = JSON.parse(this.$route.params.dataOfTable).rgtno;
    this.customerno = JSON.parse(this.$route.params.dataOfTable).customerno;
  },
  mounted() {
    setTimeout(() => {
      if (this.$refs.isZBX.ZBXList.length == 0) {
        // this.isShowZBX = false;
        this.isShowZBX = true;
      }
    }, 1000);
    this.$watermark.set(
      localStorage.getItem("userCode"),
      localStorage.getItem("userName")
    );
    this.koufeiReason = getCodeType("deductionReason");
    window.addEventListener("scroll", this.handleScroll1, true);
    // this.riskResultList = riskResult.bodys;
    this.cardTypeList = getCodeType("llidtype"); // 证件类型
    this.sexList = getCodeType("llsex"); // 性别
    this.accidenttypeList = getCodeType("accidenttype"); // 出险类型
    // this.shoushangList = getCodeType("accdegree"); // 受伤程度
    this.accReasonList = getCodeType("accreason"); // 事故原因
    this.relations = getCodeType("bnfRelationToInsured"); // 申请人与出险人关系
    this.reportchnlList = getCodeType("reportchnl"); // 报案渠道
    // this.chuxianResult = getCodeType("accresult"); // 出险结果
    this.llclaimtypeList = getCodeType("llclaimtype"); // 理赔类型
    this.accnatureList = getCodeType("accnature"); // 事故地点性质
    this.diseaseList = getCodeType("dieasetype"); // 疾病分类
    this.dianobasisList = getCodeType("dianobasis"); // 诊断依据
    this.llclaimconclusionList = getCodeType("llclaimconclusion"); // 审核结论
    this.llprotestreasonList = getCodeType("llprotestreason"); // 拒赔原因
    this.reasonswithdrawalList = getCodeType("reasonswithdrawal"); //撤件
    this.backReason = getCodeType("llbackreason"); // 回退原因
    this.workList = JSON.parse(localStorage.getItem("workcodeList")); //职业类型
    // this.getRiskRes(this.formData); //出险结果
    // this.diagcodeList = JSON.parse(localStorage.getItem("zhengduanList")); // 诊断代码
    // this.getDiagnosis(this.formData1); // 诊断代码
    this.operationList = getCodeType("operationcode"); //手术代码
    this.disabilityList = JSON.parse(localStorage.getItem("disabilityList")); // 伤残代码\

    this.buttonCheck(); // 根据合同处理控制受益人分配按钮是否置灰
    this.queryButtonCheck(); // 合同处理按钮是否置灰判断
    this.queryTranNo(); // 微信框参数获取及报案信息获取
    setTimeout(() => {
      if (this.rgtobj != null && this.rgtclass == "微信渠道") {
        this.$refs.dragno.queryRegisterRelation();
      }
      this.bjObjForm = {
        operator: localStorage.getItem("userCode"),
        mngcom: localStorage.getItem("comCode"),
        customerno: JSON.parse(this.$route.params.dataOfTable).customerno,
        rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno,
        hospitalname: this.dangerInfor.hospitalname
      };
    }, 1000);
    this.getSheng();
    this.initData1();
    this.initData(); // 获取赔案信息等四个列表
    this.getLipei();
    this.toShowTwo();
    this.getHeadBank();
    this.getBankAddress();
    this.getCodeList();
    // this.getCityCode();
    // this.getcountyCode()
    this.searchAudit(); // 二核结论查看是否置灰
    this.initList();
    this.getBanchBankss();
    this.getFracture();
    // Bus.$on("bJdialogVisible", bJdialogVisible => {
    //   this.bJdialogVisible = bJdialogVisible;
    // });
  },
  beforeDestroy() {
    this.$store.dispatch("titleshow", "");
    window.removeEventListener("scroll", this.handleScroll1, true);
  },
  watch: {
    "dangerInfor.accprovince": function(value) {
      if (value === "999999") {
        this.cityList = null;
        this.areaList = null;
      }
    }
  },
  methods: {
    isZBXDialog() {
      this.$refs.isZBX.dialogZBX = true;
    },
    getBanchBankss(key1, key2) {
      // if (key1 && key2) {
      // this.getBankAddress();
      setTimeout(() => {
        post(service.queryTbanklocations, {
          bodys: {
            bankid: this.drawMoneyInfor.headbankname,
            standardareasid: this.drawMoneyInfor.province
          }
        }).then(res => {
          if (res.data.header.code === "200") {
            this.branchBankListss = res.data.bodys;
            // this.objForm.bankname = "";
          }
        });
      }, 1000);

      // }
    },
    // ====备注信息弹框=====
    changeisshow(event) {
      this.isshowremark = event;
    },
    isShowRemark() {
      this.isshowremark = true;
    },
    // ====备注信息弹框End=====
    // 通知书预览
    noticepdfprint() {
      if (this.auditObj.auditconclusion == "5") {
        post(service.noticepdfprint, {
          rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          noticeno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          printtype: "06"
        }).then(res => {
          if (res.data.pdflist) {
            window.open(res.data.pdflist[0].pdfurl, "_blank");
          } else {
            this.$message.error("数据更新中请稍后！");
          }
        });
      } else {
        post(service.noticepdfprint, {
          rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          noticeno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          printtype: "05"
        }).then(res => {
          if (res.data.pdflist) {
            window.open(res.data.pdflist[0].pdfurl, "_blank");
          } else {
            this.$message.error("数据更新中请稍后！");
          }
        });
      }
    },
    // 微信框
    queryTranNo() {
      post(service.queryTranNo, {
        bodys: {
          rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      })
        .then(res => {
          this.rgtobj = res.data.bodys.rgtobj;
          this.rptno = res.data.bodys.rptno || "";
          if (res.data.bodys.rgtclass == "") {
            this.rgtclass = "柜面渠道";
          } else if (res.data.bodys.rgtclass == "02") {
            this.rgtclass = "柜面渠道";
          } else if (res.data.bodys.rgtclass == "01") {
            this.rgtclass = "微信渠道";
          } else if (res.data.bodys.rgtclass == "03") {
            this.rgtclass = "电话中心渠道";
          }
        })
        .then(() => {
          this.reportInformation();
        });
    },
    // 报案转立案申请信息
    reportInformation() {
      // if (this.rgtclass == ("电话中心渠道" || "03")) {
      post(service.reportInformation, {
        bodys: {
          rptno: this.rptno || ""
        }
      }).then(res => {
        this.initApplicationInfor.reportname = res.data.bodys.reportname;
        this.initApplicationInfor.reportdate = res.data.bodys.reportdate;
        this.initApplicationInfor.reportmobile = res.data.bodys.reportmobile;
        this.initApplicationInfor.relatoinsure = res.data.bodys.relatoinsure;
        this.initApplicationInfor.reportchannel = res.data.bodys.reportchannel;
        if (this.initApplicationInfor.reportchannel == "01") {
          this.initApplicationInfor.reportchannel = "微信";
        } else if (this.initApplicationInfor.reportchannel == "02") {
          this.initApplicationInfor.reportchannel = "柜面";
        } else if (this.initApplicationInfor.reportchannel == "03") {
          this.initApplicationInfor.reportchannel = "电话中心";
        }
      });
      // }
    },
    // 合同处理按钮控制是否置灰
    queryButtonCheck() {
      post(service.contDealButton, {
        bodys: {
          customerno: JSON.parse(this.$route.params.dataOfTable).customerno,
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.bodys == true) {
          this.isContractStates = true;
        } else if (res.data.bodys == false) {
          this.isContractStates = false;
        }
      });
    },
    // 根据合同处理控制受益人分配按钮是否置灰
    buttonCheck() {
      post(service.buttonCheck, {
        bodys: {
          customerno: JSON.parse(this.$route.params.dataOfTable).customerno,
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.bodys == true) {
          this.isContractState = true;
        } else if (res.data.bodys == false) {
          this.isContractState = false;
        }
      });
    },
    handleScroll1() {
      let lOne = document.getElementById("0");
      let lSecnd = document.getElementById("1");
      let lThree = document.getElementById("2");
      let lFour = document.getElementById("3");
      let lFive = document.getElementById("4");
      let lSix = document.getElementById("5");
      let lSeven = document.getElementById("6");
      let lEight = document.getElementById("7");
      let lNine = document.getElementById("8");
      let lTen = document.getElementById("9");
      let lEleven = document.getElementById("10");
      let lTwelve = document.getElementById("11");
      let dom1 = this.$refs.reviewInformation.parentElement;
      if (lOne.offsetTop - dom1.scrollTop >= 60) {
        this.activeStep = 0;
      } else if (
        lSecnd.offsetTop - dom1.scrollTop <= 110 &&
        lSecnd.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 1;
      } else if (
        lThree.offsetTop - dom1.scrollTop <= 110 &&
        lThree.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 2;
      } else if (
        lFour.offsetTop - dom1.scrollTop <= 110 &&
        lFour.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 3;
      } else if (
        lFive.offsetTop - dom1.scrollTop <= 110 &&
        lFive.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 4;
      } else if (
        lSix.offsetTop - dom1.scrollTop <= 110 &&
        lSix.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 5;
      } else if (
        lSeven.offsetTop - dom1.scrollTop <= 110 &&
        lSeven.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 6;
      } else if (
        lEight.offsetTop - dom1.scrollTop <= 110 &&
        lEight.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 7;
      } else if (
        lNine.offsetTop - dom1.scrollTop <= 110 &&
        lNine.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 8;
      } else if (
        lTen.offsetTop - dom1.scrollTop <= 110 &&
        lTen.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 9;
      } else if (
        lEleven.offsetTop - dom1.scrollTop <= 110 &&
        lEleven.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 10;
      } else if (
        lTwelve.offsetTop - dom1.scrollTop <= 110 &&
        lTwelve.offsetTop - dom1.scrollTop >= 10
      ) {
        this.activeStep = 11;
      }
    },
    initfracture(data) {
      post(service.ldfracture, {
        code: data.fracturecode,
        likename: "",
        pagestart: 0,
        pageend: 100
      }).then(res => {
        const _res1 = res.data.bodys;
        this.fractureDList = _res1;
      });
    },
    initfracture11(data) {
      post(service.ldfracture, {
        code: data.fracturecode,
        likename: data.fracturedetailcode,
        pagestart: 0,
        pageend: 100
      }).then(res => {
        const _res1 = res.data.bodys;
        this.fractureDetailList = _res1;
      });
    },
    initIll() {
      this.formDataIll.likename = "";
      this.formDataIll.pagestart = 0;
      this.filterValIll = "";
      post(service.ldcritical, this.formDataIll).then(res => {
        const _res1 = res.data.bodys;
        this.illnessList = _res1;
      });
    },
    loadmoreIll() {
      this.formDataIll.pagestart += 100;
      if (this.filterValIll) {
        this.formDataIll.likename = this.filterValIll;
      }
      post(service.ldcritical, this.formDataIll).then(res => {
        const _res1 = res.data.bodys;
        this.illnessList = [...this.illnessList, ..._res1];
      });
    },
    filteredIllness(val) {
      this.filterValIll = val;
      if (val) {
        let illData = {
          pagestart: 0,
          pageend: 100,
          likename: val
        };
        post(service.ldcritical, illData).then(res => {
          const _res1 = res.data.bodys;
          this.illnessList = _res1;
        });
      }
    },
    changIllnessname(data) {
      this.initIll();
      data.bigsource = abc(data.criticalname, this.illnessList);
      data.smallsource = abcd(data.criticalname, this.illnessList);
      data.criticalcode = abcde(data.criticalname, this.illnessList);
      // this.criticalCode = data.criticalcode;
    },
    getFracture() {
      post(service.ldfracture, {
        code: "",
        likename: "",
        pagestart: 0,
        pageend: 100
      }).then(res => {
        const _res1 = res.data.bodys;
        this.fractureList = _res1;
      });
    },
    changFracturename(data) {
      this.$forceUpdate();
      data.fracturedetailname = "";
      // data.fracturelevel = "";
      data.fracturecode = abc1(data.fracturename, this.fractureList);
      post(service.ldfracture, {
        code: data.fracturecode,
        likename: "",
        pagestart: 0,
        pageend: 100
      }).then(res => {
        const _res1 = res.data.bodys;
        this.fractureDList = _res1;
      });
    },
    changFractureDname(data) {
      // data.fracturelevel = "";
      data.fracturedetailcode = abc2(
        data.fracturedetailname,
        this.fractureDList
      );
      post(service.ldfracture, {
        code: data.fracturecode,
        likename: data.fracturedetailcode,
        pagestart: 0,
        pageend: 100
      }).then(res => {
        const _res1 = res.data.bodys;
        this.fractureDetailList = _res1;
      });
    },
    init() {
      this.formData1.likename = "";
      this.formData1.pagestart = 0;
      this.filterVal = "";
      // this.getDiagnosis(this.formData1)
      post(service.lldiagcode, this.formData1).then(res => {
        const _res1 = res.data.bodys;
        this.diagcodeList = _res1;
      });
    },
    //疾病名称select初始化
    filtered(val) {
      this.filterVal = val;
      if (val) {
        let formdata = {
          pagestart: 0,
          pageend: 100,
          likename: val,
          code: ""
        };
        post(service.lldiagcode, formdata).then(res => {
          const _res1 = res.data.bodys;
          this.diagcodeList = _res1;
        });
      }
    },
    moneyChek(value) {
      if (value) {
        var reg = /^\d+$|^\d*\.\d+$/g;
        if (!reg.test(value)) {
          this.$message.error("只能填写数字！");
        } else {
          if (value.substr(0, 1) === "." || value.substr(-1, 1) === ".") {
            this.$message.error("只能填写数字！");
          } else {
            var amtreg = /^(\d+)(.\d{0,2})?$/;
            if (!amtreg.test(value)) {
              this.$message.error("最多支持两位小数！");
            }
          }
        }
      }
    },
    // 受益人分配更改被保险人关系
    toChangeRelation(bodys, index) {
      post(service.queryChangeBnf, {
        bodys
      }).then(res => {
        // this.itemBenefitData = {};
        this.itemBenefitData = res.data.bodys;
        this.benefitArray[index] = this.itemBenefitData;
        for (var key = 0; key < this.benefitArray.length; key++) {
          if (index === key) {
            this.benefitArray.splice(key, 1);
            this.benefitArray[key] = this.itemBenefitData;
          }
        }
      });
    },
    changeAccname(bodys, index) {
      post(service.fuzzyQueryAccount, {
        bodys: {
          accname: bodys.accname
        }
      }).then(res => {
        this.benefitPubArray = res.data.bodys;
        this.groupaccountid = res.data.bodys[0].groupaccountid;
        this.getBanchPubBank();
      });
    },
    initBtn() {
      post(service.queryAuth, {
        bodys: {
          operator: localStorage.getItem("userCode"),
          auth: "06"
        }
      }).then(res => {
        if (res.data.headers.code === "200" && res.data.headers.success) {
          if (res.data.bodys.authcode === "1") {
            this.isAuth = false;
          } else {
            this.isAuth = true;
          }
        }
      });
    },
    changeAcc() {
      this.dangerInfor.exempt = "";
    },
    getBenfit(row) {
      this.deleteBnfContNo = row.contno;
      // 对私受益人
      if (!this.isCompany) {
        post(service.queryClaimBnf, {
          bodys: {
            clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            contno: row.contno
          }
        }).then(res => {
          if (res.data.headers.code === "200") {
            this.benefitArray = res.data.bodys;
            this.conNum = row.contno;
            setTimeout(() => {
              this.getCity();
              this.getCountry();
              this.getBanchData();
              this.getHeadBank();
            }, 1000);
          }
        });
      }
      if (this.dangerInfor.directpay == "0") {
        this.dialogFormVisible = true;
        // =============================
      } else {
        this.dialogFormPublic = true;
        this.initList();
      }
      // ==============判断是否信托===============
      post(service.queryEntrust, {
        bodys: {
          clmno: this.rgtno,
          contno: row.contno
        }
      }).then(res => {
        if (res.data.bodys.entrustFlag == "Y") {
          this.isCompany = true;
          this.noCompany = false;
          if (this.isCompany) {
            // 信托公司
            post(service.queryLlCmTrustc, {
              bodys: {
                clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
                contno: row.contno
              }
            }).then(res => {
              if (res.data.headers.code === "200") {
                this.companyData = res.data.bodys;

                if (this.companyData[0]) {
                  this.companyData[0].tclridtp = this.companyData[0].tclridtp.toString();
                  this.companyData[0].tcacidtp = this.companyData[0].tcacidtp.toString();
                  this.companyData[0].tcatidtp = this.companyData[0].tcatidtp.toString();
                  // setTimeout(() => {
                  this.getBanchBankData();
                  // }, 100);
                }
              }
            });

            // 信托所有人
            post(service.queryLlCmtCowner, {
              bodys: {
                clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
                contno: row.contno
              }
            }).then(res => {
              if (res.data.headers.code === "200") {
                this.companyAllData = res.data.bodys;
                this.companyAllData.forEach(item => {
                  item.owidtype = item.owidtype.toString();
                });
              }
            });
            // 信托受益人
            post(service.queryLlbnf, {
              bodys: {
                clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
                contno: row.contno
              }
            }).then(res => {
              if (res.data.headers.code === "200") {
                this.companyPersonData = res.data.bodys;
              }
            });
          }
          // this.noCompany = false
        } else {
          this.isCompany = false;
          this.noCompany = true;
          // 对私受益人
          if (!this.isCompany) {
            post(service.queryClaimBnf, {
              bodys: {
                clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
                contno: row.contno
              }
            }).then(res => {
              if (res.data.headers.code === "200") {
                this.benefitArray = res.data.bodys;
                this.conNum = row.contno;
                setTimeout(() => {
                  this.getCity();
                  this.getCountry();
                  this.getBanchData();
                  this.getHeadBank();
                }, 1000);
              }
            });
          }
          if (this.dangerInfor.directpay == "0") {
            this.dialogFormVisible = true;
            // =============================
          } else {
            this.dialogFormPublic = true;
            this.initList();
          }
        }
      });
      // if (this.dangerInfor.directpay == "0") {
      //   this.dialogFormVisible = true;
      //   // =============================
      // } else {
      //   this.dialogFormPublic = true;
      //   this.initList();
      // }
    },
    getPubBenfit(row) {
      this.deleteBnfContNo = row.contno;
      post(service.queryGroupBnf, {
        bodys: {
          contno: row.contno
        }
      }).then(res => {
        if (res.data.headers.code == "200") {
          if (res.data.bodys.length == 0) {
            // this.benefitPubArray.push({
            //   accname: "",
            //   accpername: null,
            //   bankaccno: null,
            //   bankprovince: null,
            //   bankcode: null,
            //   bankbranch: null,
            //   bankcodename: null,
            //   clmno: JSON.parse(this.$route.params.dataOfTable).caseno,
            //   contno: this.deleteBnfContNo
            // });
            this.benefitPubArray = this.emptyList;
            this.emptyList[0].accname = "";
            this.getBanchPubBank();
            this.getBranchBank();
          } else {
            this.benefitPubArray = res.data.bodys;
            this.relationId = res.data.bodys[0].relationId;
            this.groupaccountid = res.data.bodys[0].groupaccountid;
            setTimeout(() => {
              this.getBanchPubBank();
              this.getBranchBank();
            }, 1000);
          }
        }
      });
    },
    handleSizeChange(val) {
      this.pagesize = val;
    },
    handleCurrentChange(val) {
      this.currpage = val;
    },

    // 获取总行
    getHeadBank() {
      post(service.tBank, {
        bodys: {}
      }).then(res => {
        if (res.data.header.code === "200") {
          this.tBankList = res.data.bodys;
        }
      });
    },
    // 银行所在地区
    getBankAddress() {
      post(service.queryStand, {
        bodys: {}
      }).then(res => {
        if (res.data.header.code === "200") {
          this.bankAddressList = res.data.bodys;
        }
      });
    },
    // 银行支行
    getBanchData() {
      for (let key = 0; key < this.benefitArray.length; key++) {
        if (
          this.benefitArray[key].bankprovince &&
          this.benefitArray[key].bankcode
        ) {
          post(service.queryTbanklocations, {
            bodys: {
              bankid: this.benefitArray[key].bankcode,
              standardareasid: this.benefitArray[key].bankprovince
            }
          }).then(res => {
            this.branchBankList = res.data.bodys;
            this.newbranchBankList[key] = res.data.bodys;
          });
        }
      }
    },
    // 银行支行
    getBanchBank(key) {
      key.bankbranch = null;
      if (key.bankcode && key.bankprovince) {
        post(service.queryTbanklocations, {
          bodys: {
            bankid: key.bankcode,
            standardareasid: key.bankprovince
          }
        }).then(res => {
          if (res.data.header.code === "200") {
            this.branchBankList = res.data.bodys;
            for (var i = 0; i < this.benefitArray.length; i++) {
              if (
                key.bankprovince == this.benefitArray[i].bankprovince &&
                key.bankcode == this.benefitArray[i].bankcode
              ) {
                this.newbranchBankList.push(this.branchBankList);
                this.newbranchBankList[i] = res.data.bodys;
              }
            }
          }
        });
      }
    },
    // 银行支行
    getBanchBanks(key) {
      key.bankbranch = null;
      if (key.debank && key.deadress) {
        post(service.queryTbanklocations, {
          bodys: {
            bankid: key.debank,
            standardareasid: key.deadress
          }
        }).then(res => {
          if (res.data.header.code === "200") {
            this.branchBankList = res.data.bodys;
          }
        });
      }
    },
    getBanchBankData() {
      if (this.companyData[0].debank && this.companyData[0].deadress) {
        post(service.queryTbanklocations, {
          bodys: {
            bankid: this.companyData[0].debank,
            standardareasid: this.companyData[0].deadress
          }
        }).then(res => {
          if (res.data.header.code === "200") {
            this.branchBankList = res.data.bodys;
          }
        });
      }
    },
    // 对公
    getBanchPubBank(key1, key2) {
      post(service.queryTbanklocations, {
        bodys: {
          bankid: this.benefitPubArray[0].bankcode,
          standardareasid: this.benefitPubArray[0].bankprovince
        }
      }).then(res => {
        if (res.data.header.code === "200") {
          this.branchBankList = res.data.bodys;
          // this.listForm2.bankbranch = "";
        }
      });
    },
    //对公银行支行
    getBranchBank() {
      if (this.benefitPubArray[0].bankbranch) {
        post(service.queryTbanklocations, {
          bodys: {
            bankid: this.benefitPubArray[0].bankcode,
            standardareasid: this.benefitPubArray[0].bankprovince
          }
        }).then(res => {
          if (res.data.header.code === "200") {
            this.branchBankList = res.data.bodys;
          }
        });
      }
    },
    // 对公账户
    initList() {
      post(service.compAccountQuery, {
        bodys: this.listForm
      }).then(result => {
        if (result.data.headers.code === "200") {
          this.accountList = result.data.bodys.rows;
        }
      });
    },
    // 受益人分配
    benefitF() {
      let isSaveBenefit = JSON.parse(sessionStorage.getItem("isCountData4"));
      for (let key in this.countData4) {
        if (this.countData4[key].realpay != isSaveBenefit[key]) {
          this.$message.error("页面信息未保存！");
          return;
        }
      }
      // ==============判断是否信托===============
      // post(service.queryEntrust, {
      //   bodys: {
      //     clmno: this.rgtno,
      //     contno: this.initApplicationInfor.polno
      //   }
      // }).then(res => {
      //   if (res.data.bodys.entrustFlag == "Y") {
      //     this.isCompany = true;
      //   } else {
      //     if (this.dangerInfor.directpay == "0") {
      //       this.dialogFormVisible = true;
      //       // =============================
      //     } else {
      //       this.dialogFormPublic = true;
      //       this.initList();
      //     }
      //   }
      // });
      if (this.dangerInfor.directpay == "0") {
        this.dialogFormVisible = true;
        // =============================
      } else {
        this.dialogFormPublic = true;
        this.initList();
      }
      // 刷新未分配为已分配
      this.getBenefitInfo();
      this.benefitArray = [];
      this.benefitPubArray = [];
    },

    //删除受益人
    deleteData(index) {
      this.benefitArray.splice(index, 1);
    },
    closeDialog() {
      this.isCompany = false;
      this.noCompany = false;
      // if (this.isCompany) {
      //   this.companyData = [];
      //   this.companyAllData = [];
      //   this.companyPersonData = [];
      // }
      // this.benefitArray = [];
      // this.benefitPubArray = [];
    },
    // 信托保存
    saveCompany() {
      if (
        !this.companyData[0].acname ||
        !this.companyData[0].acnumber ||
        !this.companyData[0].debank ||
        !this.companyData[0].deadress ||
        // !this.companyData[0].bankbranch ||
        !this.companyData[0].tcname ||
        !this.companyData[0].tcaddr ||
        !this.companyData[0].tcbuss ||
        !this.companyData[0].tcuscc ||
        !this.companyData[0].tcbuslsdate ||
        !this.companyData[0].tcbusledate ||
        !this.companyData[0].tclrname ||
        !this.companyData[0].tclridtp ||
        !this.companyData[0].tclridnum ||
        !this.companyData[0].tclridedate ||
        !this.companyData[0].tcacname ||
        !this.companyData[0].tcacidtp ||
        !this.companyData[0].tcacidnum ||
        !this.companyData[0].tcacidedate ||
        !this.companyData[0].tcatname ||
        !this.companyData[0].tcatidtp ||
        !this.companyData[0].tcatidnum ||
        !this.companyData[0].tcatidedate
      ) {
        this.$message.error("请先完成必录项！");
        return false;
      }
      // 法人证件类型
      if (this.companyData[0].tclridtp == 1) {
        var reg1 = /^[0-9a-zA-Z]*$/g;
        if (!reg1.test(this.companyData[0].tclridnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tclridnum = null;
          return;
        } else {
          if (!this.companyData[0].tclridnum) {
            this.$message.error("请输入证件号码");
            return;
          } else if (
            this.companyData[0].tclridnum.length != 15 &&
            this.companyData[0].tclridnum.length != 18
          ) {
            this.$message.error("身份证只能为15位或18位");
            this.companyData[0].tclridnum = null;
            return;
          } else {
            const reg = /(^[1-9]\d{5}(18|19|([23]\d))\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}$)/;
            if (!reg.test(this.companyData[0].tclridnum)) {
              this.$message.error("请输入合法的的身份证号码");
              this.companyData[0].tclridnum = null;
              return;
            }
          }
        }
      } else if (
        this.companyData[0].tclridtp == 2 ||
        this.companyData[0].tclridtp == 7
      ) {
        var reg2 = /^[0-9a-zA-Z]*$/g;
        if (!reg2.test(this.companyData[0].tclridnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tclridnum = null;
          return;
        } else if (this.companyData[0].tclridnum.length < 6) {
          this.$message.error("护照的长度必须大于等于6");
          this.companyData[0].tclridnum = null;
          return;
        }
      } else {
        var reg1 = /^[0-9a-zA-Z]*$/g;
        if (!reg1.test(this.companyData[0].tclridnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tclridnum = null;
          return;
        }
      }
      // 控股人
      if (this.companyData[0].tcacidtp == 1) {
        var reg1 = /^[0-9a-zA-Z]*$/g;
        if (!reg1.test(this.companyData[0].tcacidnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tcacidnum = null;
          return;
        } else {
          if (!this.companyData[0].tcacidnum) {
            this.$message.error("请输入证件号码");
            return;
          } else if (
            this.companyData[0].tcacidnum.length != 15 &&
            this.companyData[0].tcacidnum.length != 18
          ) {
            this.$message.error("身份证只能为15位或18位");
            this.companyData[0].tcacidnum = null;
            return;
          } else {
            const reg = /(^[1-9]\d{5}(18|19|([23]\d))\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}$)/;
            if (!reg.test(this.companyData[0].tcacidnum)) {
              this.$message.error("请输入合法的的身份证号码");
              this.companyData[0].tcacidnum = null;
              return;
            }
          }
        }
      } else if (
        this.companyData[0].tcacidtp == 2 ||
        this.companyData[0].tcacidtp == 7
      ) {
        var reg2 = /^[0-9a-zA-Z]*$/g;
        if (!reg2.test(this.companyData[0].tcacidnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tcacidnum = null;
          return;
        } else if (this.companyData[0].tcacidnum.length < 6) {
          this.$message.error("护照的长度必须大于等于6");
          this.companyData[0].tcacidnum = null;
          return;
        }
      } else {
        var reg1 = /^[0-9a-zA-Z]*$/g;
        if (!reg1.test(this.companyData[0].tcacidnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tcacidnum = null;
          return;
        }
      }
      // 办理业务人员
      if (this.companyData[0].tcatidtp == 1) {
        var reg1 = /^[0-9a-zA-Z]*$/g;
        if (!reg1.test(this.companyData[0].tcatidnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tcatidnum = null;
          return;
        } else {
          if (!this.companyData[0].tcatidnum) {
            this.$message.error("请输入证件号码");
            return;
          } else if (
            this.companyData[0].tcatidnum.length != 15 &&
            this.companyData[0].tcatidnum.length != 18
          ) {
            this.$message.error("身份证只能为15位或18位");
            this.companyData[0].tcatidnum = null;
            return;
          } else {
            const reg = /(^[1-9]\d{5}(18|19|([23]\d))\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}$)/;
            if (!reg.test(this.companyData[0].tcatidnum)) {
              this.$message.error("请输入合法的的身份证号码");
              this.companyData[0].tcatidnum = null;
              return;
            }
          }
        }
      } else if (
        this.companyData[0].tcatidtp == 2 ||
        this.companyData[0].tcatidtp == 7
      ) {
        var reg2 = /^[0-9a-zA-Z]*$/g;
        if (!reg2.test(this.companyData[0].tcatidnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tcatidnum = null;
          return;
        } else if (this.companyData[0].tcatidnum.length < 6) {
          this.$message.error("护照的长度必须大于等于6");
          this.companyData[0].tcatidnum = null;
          return;
        }
      } else {
        var reg1 = /^[0-9a-zA-Z]*$/g;
        if (!reg1.test(this.companyData[0].tcatidnum)) {
          this.$message.error("请输入合法的证件号码");
          this.companyData[0].tcatidnum = null;
          return;
        }
      }
      if (this.companyAllData.length != 0) {
        for (let i = 0; i < this.companyAllData.length; i++) {
          if (
            !this.companyAllData[i].owname ||
            !this.companyAllData[i].owaddr ||
            !this.companyAllData[i].owidtype ||
            !this.companyAllData[i].owidnum ||
            !this.companyAllData[i].owidedate
          ) {
            this.$message.error("请先完成必录项！");
            return false;
          }
          // 信托受益人证件号码校验
          if (this.companyAllData[i].owidtype == 1) {
            var reg1 = /^[0-9a-zA-Z]*$/g;
            if (!reg1.test(this.companyAllData[i].owidnum)) {
              this.$message.error("请输入合法的证件号码");
              this.companyAllData[i].owidnum = null;
              return;
            } else {
              if (!this.companyAllData[i].owidnum) {
                this.$message.error("请输入证件号码");
                return;
              } else if (
                this.companyAllData[i].owidnum.length != 15 &&
                this.companyAllData[i].owidnum.length != 18
              ) {
                this.$message.error("身份证只能为15位或18位");
                this.companyAllData[i].owidnum = null;
                return;
              } else {
                const reg = /(^[1-9]\d{5}(18|19|([23]\d))\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}$)/;
                if (!reg.test(this.companyAllData[i].owidnum)) {
                  this.$message.error("请输入合法的的身份证号码");
                  this.companyAllData[i].owidnum = null;
                  return;
                }
              }
            }
          } else if (
            this.companyAllData[i].owidtype == 2 ||
            this.companyAllData[i].owidtype == 7
          ) {
            var reg2 = /^[0-9a-zA-Z]*$/g;
            if (!reg2.test(this.companyAllData[i].owidnum)) {
              this.$message.error("请输入合法的证件号码");
              this.companyAllData[i].owidnum = null;
              return;
            } else if (this.companyAllData[i].owidnum.length < 6) {
              this.$message.error("护照的长度必须大于等于6");
              this.companyAllData[i].owidnum = null;
              return;
            }
          } else {
            var reg1 = /^[0-9a-zA-Z]*$/g;
            if (!reg1.test(this.companyAllData[i].owidnum)) {
              this.$message.error("请输入合法的证件号码");
              this.companyAllData[i].owidnum = null;
              return;
            }
          }
        }
      }
      if (this.companyPersonData.length != 0) {
        for (let i = 0; i < this.companyPersonData.length; i++) {
          // 信托受益人非空校验
          if (
            !this.companyPersonData[i].name ||
            !this.companyPersonData[i].idtype ||
            !this.companyPersonData[i].idno ||
            !this.companyPersonData[i].idtypedate ||
            !this.companyPersonData[i].sex ||
            !this.companyPersonData[i].nationality ||
            !this.companyPersonData[i].occupation ||
            !this.companyPersonData[i].annualincome ||
            !this.companyPersonData[i].phone ||
            !this.companyPersonData[i].addressdetail
          ) {
            this.$message.error("请先完成必录项！");
            return false;
          }
          if (
            !this.companyPersonData[i].workunit &&
            !this.companyPersonData[i].workaddress
          ) {
            this.$message.error("单位名称和单位地址必须填写一个！");
            return;
          }
          // 信托受益人证件号码校验
          if (this.companyPersonData[i].idtype == 1) {
            var reg1 = /^[0-9a-zA-Z]*$/g;
            if (!reg1.test(this.companyPersonData[i].idno)) {
              this.$message.error("请输入合法的证件号码");
              this.companyPersonData[i].idno = null;
              return;
            } else {
              if (!this.companyPersonData[i].idno) {
                this.$message.error("请输入证件号码");
                return;
              } else if (
                this.companyPersonData[i].idno.length != 15 &&
                this.companyPersonData[i].idno.length != 18
              ) {
                this.$message.error("身份证只能为15位或18位");
                this.companyPersonData[i].idno = null;
                return;
              } else {
                const reg = /(^[1-9]\d{5}(18|19|([23]\d))\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}$)/;
                if (!reg.test(this.companyPersonData[i].idno)) {
                  this.$message.error("请输入合法的的身份证号码");
                  this.companyPersonData[i].idno = null;
                  return;
                }
              }
            }
          } else if (
            this.companyPersonData[i].idtype == 2 ||
            this.companyPersonData[i].idtype == 7
          ) {
            var reg2 = /^[0-9a-zA-Z]*$/g;
            if (!reg2.test(this.companyPersonData[i].idno)) {
              this.$message.error("请输入合法的证件号码");
              this.companyPersonData[i].idno = null;
              return;
            } else if (this.companyPersonData[i].idno.length < 6) {
              this.$message.error("护照的长度必须大于等于6");
              this.companyPersonData[i].idno = null;
              return;
            }
          } else {
            var reg1 = /^[0-9a-zA-Z]*$/g;
            if (!reg1.test(this.companyPersonData[i].idno)) {
              this.$message.error("请输入合法的证件号码");
              this.companyPersonData[i].idno = null;
              return;
            }
          }
          // 信托受益人年收入校验
          if (!this.companyPersonData[i].annualincome) {
          } else {
            var reg = /^\d+$|^\d*\.\d+$/g;
            if (!reg.test(this.companyPersonData[i].annualincome)) {
              this.$message.error("年收入只能填写数字！");
              this.companyPersonData[i].annualincome = null;
              return false;
            } else {
              if (
                this.companyPersonData[i].annualincome.substr(0, 1) === "." ||
                this.companyPersonData[i].annualincome.substr(-1, 1) === "."
              ) {
                this.$message.error("年收入只能填写数字！");
                this.companyPersonData[i].companyPersonData = null;
                return false;
              } else {
                var amtreg = /^(\d+)(.\d{0,2})?$/;
                if (!amtreg.test(this.companyPersonData[i].annualincome)) {
                  this.$message.error("年收入最多支持两位小数！");
                  this.companyPersonData[i].annualincome = null;
                  return false;
                }
              }
            }
          }
          // 信托受益人联系方式校验
          if (!this.companyPersonData[i].phone) {
          } else {
            if (this.companyPersonData[i].phone.substr(0, 1) == 1) {
              if (this.companyPersonData[i].phone.length != 11) {
                this.$message.error("信托受益人联系方式不合法！");
                this.companyPersonData[i].phone = null;
                return false;
              }
            } else if (this.companyPersonData[i].phone.length > 100) {
              this.$message.error("信托受益人联系方式不合法！");
              this.companyPersonData[i].phone = null;
              return false;
            }
          }
        }
      }
      this.companyData[0].clmno = this.rgtno;
      this.companyData[0].contno = this.initApplicationInfor.polno;
      this.companyData[0].lastFlag = this.companyData[0].last_flag;
      this.companyData[0].updateFlag = this.companyData[0].update_flag;
      post(service.updateTrust, {
        bodys: {
          llCmTrustcSchema: this.companyData[0],
          llCmtCownerSchema: this.companyAllData,
          llBnfSchemaDtos: this.companyPersonData
        }
      }).then(res => {
        if (res.data.headers.success === true) {
          this.$message.success("保存成功！");
          this.getBenefitInfo();
        } else {
          this.$message.error(res.data.headers.message);
        }
      });
    },
    // 删除信托受益人
    deleteCompanyPersonData(index) {
      this.companyPersonData.splice(index, 1);
    },
    // 删除信托所有人
    deleteCompanyAllData(index) {
      this.companyAllData.splice(index, 1);
    },
    // 新增对私受益人
    addData() {
      this.benefitArray.push({
        name: null,
        idtype: "1",
        idno: null,
        relationtoinsured: null,
        bnflot: 100,
        benposition: null, // 受益人顺位
        payeename: null,
        bankaccno: null,
        bankprovince: null,
        bankcode: null,
        bankbranch: null,
        occupation: null,
        annualincome: null,
        phone: null,
        addressprovince: null,
        addresscity: null,
        addressarea: null,
        addressdetail: null,
        workunit: null,
        workaddress: null,
        clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
        contno: this.deleteBnfContNo
      });
    },
    // 信托所有人新增
    addCompanyAllData() {
      this.companyAllData.push({
        versionid: "1",
        owname: null,
        owaddr: null,
        owidtype: null,
        owidnum: null,
        owidedate: null,
        owphone: null,
        recid: null,
        clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
        contno: this.deleteBnfContNo
      });
    },
    // 信托受益人新增
    addCompanyPersonData() {
      this.companyPersonData.push({
        clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
        insuredno: JSON.parse(this.$route.params.dataOfTable).customerno,
        customerno: JSON.parse(this.$route.params.dataOfTable).customerno,
        name: null,
        idtype: null,
        idno: null,
        idtypedate: null,
        sex: null,
        nationality: null,
        occupation: null,
        annualincome: null,
        phone: null,
        addressdetail: null,
        workaddress: null,
        workunit: null
      });
    },
    savePubBenefit() {
      if (this.benefitPubArray[0].accname == "") {
        this.$message.error("对公账户不能为空！");
      } else {
        post(service.saveGroupBnf, {
          bodys: {
            contno: this.deleteBnfContNo,
            groupaccountid: this.groupaccountid,
            operator: localStorage.getItem("userCode"),
            clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            relationid: this.relationId
          }
        }).then(result => {
          if (result.data.headers.code === "200") {
            this.$message({
              message: result.data.headers.message,
              type: "success"
            });
            // 刷新未分配为已分配
            this.getBenefitInfo();
          }
        });
      }
    },

    // 保存受益人
    saveBenefit() {
      for (var key = 0; key < this.benefitArray.length; key++) {
        // 证件号码校验
        if (this.benefitArray[key].idtype == 1) {
          var reg1 = /^[0-9a-zA-Z]*$/g;
          if (!reg1.test(this.benefitArray[key].idno)) {
            this.$message.error("请输入合法的证件号码");
            this.benefitArray[key].idno = null;
            return;
          } else {
            if (!this.benefitArray[key].idno) {
              this.$message.error("请输入证件号码");
              return;
            } else if (
              this.benefitArray[key].idno.length != 15 &&
              this.benefitArray[key].idno.length != 18
            ) {
              this.$message.error("身份证只能为15位或18位");
              this.benefitArray[key].idno = null;
              return;
            } else {
              const reg = /(^[1-9]\d{5}(18|19|([23]\d))\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}[0-9Xx]$)|(^[1-9]\d{5}\d{2}(((0[13578]|10|12)(0[1-9]|[12]\d|3[01]))|((0[469]|11)(0[1-9]|[12]\d|30))|(02(0[1-9]|[12]\d)))\d{3}$)/;
              if (!reg.test(this.benefitArray[key].idno)) {
                this.$message.error("请输入合法的的身份证号码");
                this.benefitArray[key].idno = null;
                return;
              }
            }
          }
        } else if (
          this.benefitArray[key].idtype == 2 ||
          this.benefitArray[key].idtype == 7
        ) {
          var reg2 = /^[0-9a-zA-Z]*$/g;
          if (!reg2.test(this.benefitArray[key].idno)) {
            this.$message.error("请输入合法的证件号码");
            this.benefitArray[key].idno = null;
            return;
          } else if (this.benefitArray[key].idno.length < 6) {
            this.$message.error("护照的长度必须大于等于6");
            this.benefitArray[key].idno = null;
            return;
          }
        } else {
          var reg1 = /^[0-9a-zA-Z]*$/g;
          if (!reg1.test(this.benefitArray[key].idno)) {
            this.$message.error("请输入合法的证件号码");
            this.benefitArray[key].idno = null;
            return;
          }
        }
        // 联系方式校验
        if (!this.benefitArray[key].phone) {
        } else {
          if (this.benefitArray[key].phone.substr(0, 1) == 1) {
            if (this.benefitArray[key].phone.length != 11) {
              this.$message.error("联系方式不合法！");
              this.benefitArray[key].phone = null;
              return;
            }
          } else if (this.benefitArray[key].phone.length > 100) {
            this.$message.error("联系方式不合法！");
            this.benefitArray[key].phone = null;
            return;
          }
        }
        // 年收入校验
        if (!this.benefitArray[key].annualincome) {
        } else {
          var reg = /^\d+$|^\d*\.\d+$/g;
          if (!reg.test(this.benefitArray[key].annualincome)) {
            this.$message.error("只能填写数字！");
            this.benefitArray[key].annualincome = null;
            return false;
          } else {
            if (
              this.benefitArray[key].annualincome.substr(0, 1) === "." ||
              this.benefitArray[key].annualincome.substr(-1, 1) === "."
            ) {
              this.$message.error("只能填写数字！");
              this.benefitArray[key].annualincome = null;
              return false;
            } else {
              var amtreg = /^(\d+)(.\d{0,2})?$/;
              if (!amtreg.test(this.benefitArray[key].annualincome)) {
                this.$message.error("最多支持两位小数！");
                this.benefitArray[key].annualincome = null;
                return false;
              }
            }
          }
        }
        this.benefitArray[key].name = this.benefitArray[key].payeename;
      }
      if (this.benefitArray.length == 0) {
        post(service.deleteBnf, {
          bodys: {
            clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            contno: this.deleteBnfContNo
          }
        }).then(result => {
          if (result.data && result.data.headers.code == "200") {
            this.$message({
              message: result.data.headers.message,
              type: "success"
            });
            this.getBenefitInfo();
          } else if (result.data && result.data.headers.code == "500") {
            this.$message({
              message: result.data.headers.message,
              type: "error"
            });
          }
        });
      } else {
        post(service.saveBnf, {
          bodys: this.benefitArray
          // 1909120081801

          // JSON.parse(this.$route.params.dataOfTable).rgtno
        }).then(result => {
          if (result.data && result.data.headers.code == "200") {
            this.$message({
              message: result.data.headers.message,
              type: "success"
            });
            // 刷新未分配为已分配
            this.getBenefitInfo();
          } else if (result.data && result.data.headers.code == "500") {
            this.$message({
              message: result.data.headers.message,
              type: "error"
            });
          }
        });
      }
    },
    // 取消选择审核人
    cSure(type) {
      var getRe;
      if (type == "1") {
        getRe = this.auditu;
      } else if (type == "2" || !this.auditu) {
        this.isAudit = false;
        return;
      }
      post(service.auditSure, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          operator: localStorage.getItem("userCode"),
          managecom: localStorage.getItem("comCode"),
          auditconclusion: this.auditObj.auditconclusion,
          audituser: getRe
        }
      })
        .then(res => {
          if (res.data.headers.code == "200") {
            this.$message({
              message: res.data.headers.message,
              type: "success"
            });
            this.isAudit = false;
            this.$router.push({ name: "WorkPool" });
          } else if (res.data.headers.code == "500") {
            this.$message({
              message: res.data.headers.message,
              type: "success"
            });
          }
          this.isAudit = false;
          this.$router.push({ name: "WorkPool" });
        })
        .catch();
    },

    // 获取审核意见
    // 获取审核人
    initData1() {
      post(service.queryLLCaseBack, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.header.code === "200") {
          this.casebackList = res.data.bodys;
        }
      });
    },
    getCityCode() {
      if (this.dangerInfor.accprovince) {
        post(service.getCity, {
          bodys: {
            state: "city",
            code: this.dangerInfor.accprovince
          }
        }).then(res => {
          if (res.data.headers.code === "200") {
            this.cityList = res.data.bodys.rows;
          }
        });
      }
    },
    getcountyCode() {
      if (this.dangerInfor.acccity) {
        post(service.getCity, {
          bodys: {
            state: "country",
            code: this.dangerInfor.acccity
          }
        }).then(res => {
          if (res.data.headers.code === "200") {
            this.areaList = res.data.bodys.rows;
          }
        });
      }
    },
    // 根据诊断名称获取code
    changDiagnosticname(data) {
      this.init();
      data.diagnosticcode = nameTocode(data.diagnosticname, this.diagcodeList);
      for (var i = 0; i < this.diagnoseListArr.length; i++) {
        if (data.diagnosticname == this.diagnoseListArr[i].codename) {
          this.$message.error("诊断名称不能重复");
          data.diagnosticname = null;
          data.diagnosticcode = null;
          return;
        }
        for (var key in this.diagnoseListArr) {
          if (data.diagnosticname == this.diagnoseListArr[key].code) {
            this.kyListCode = this.diagnoseListArr[key].code;
          }
        }
      }
    },
    //根据手术名称获取code
    changeOperationname(data) {
      data.operationcode = nameTocode(data.operationname, this.operationList);
    },
    // 根据伤残名称获取code
    changeDisabilityname(data) {
      data.disabilitycode = nameTocode(
        data.disabilityname,
        JSON.parse(localStorage.getItem("disabilityList"))
      );
      data.disabilitylevel = nameTocode1(
        data.disabilityname,
        JSON.parse(localStorage.getItem("disabilityList"))
      );
    },

    // 获取审核人
    getAuditList() {
      // 获取省
      post(service.getAuditor, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          auditname: "",
          operator: localStorage.getItem("userCode"),
          auditconclusion: this.auditObj.auditconclusion,
          reasoncode: this.getRescode ? this.getRescode : null
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.auditorArr = res.data.bodys;
        }
      });
    },
    // 删除省
    clearData() {
      this.dangerInfor.acccity = null;
      this.dangerInfor.acccounty = null;
      this.dangerInfor.accaddress = null;
    },
    // 删除市
    clearData1() {
      this.dangerInfor.acccounty = null;
      this.dangerInfor.accaddress = null;
    },

    clearData2() {
      this.dangerInfor.accaddress = null;
    },
    getSheng() {
      // 获取省
      post(service.getCity, {
        bodys: {
          state: "province",
          code: ""
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.provinceList = res.data.bodys.rows;
        }
      });
    },
    changevince(key) {
      post(service.getCity, {
        bodys: {
          state: "city",
          code: key
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.cityList = res.data.bodys.rows;
          this.dangerInfor.acccity = null;
          this.dangerInfor.acccounty = null;
          this.dangerInfor.accaddress = null;
        }
      });
    },
    getCity() {
      for (let key = 0; key < this.benefitArray.length; key++) {
        if (this.benefitArray[key].addressprovince) {
          post(service.getCity, {
            bodys: {
              state: "city",
              code: this.benefitArray[key].addressprovince
            }
          }).then(res => {
            if (res.data.headers.code === "200") {
              this.newcitylist1[key] = res.data.bodys.rows;
            }
          });
        }
      }
    },
    getCountry() {
      for (let key = 0; key < this.benefitArray.length; key++) {
        if (this.benefitArray[key].addresscity) {
          post(service.getCity, {
            bodys: {
              state: "country",
              code: this.benefitArray[key].addresscity
            }
          }).then(res => {
            if (res.data.headers.code === "200") {
              this.newarealist1[key] = res.data.bodys.rows;
            }
          });
        }
      }
    },
    changevince1(key, a) {
      key.addresscity = "";
      key.addressarea = "";
      key.addressdetail = "";
      // 省获取市
      post(service.getCity, {
        bodys: {
          state: "city",
          code: key.addressprovince
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.cityList1 = res.data.bodys.rows;
          for (var i = 0; i < this.benefitArray.length; i++) {
            if (key.addressprovince === this.benefitArray[i].addressprovince) {
              this.newcitylist1.push(this.cityList1);
              this.newcitylist1[i] = res.data.bodys.rows;
            }
          }
          // key.addresscity = null;
          // key.addressarea = null;
          // key.addressdetail = null;
        }
      });
    },

    // 获取市==县
    changaccity1(key) {
      key.addressarea = "";
      key.addressdetail = "";
      post(service.getCity, {
        bodys: {
          state: "country",
          code: key.addresscity
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.areaList1 = res.data.bodys.rows;
          for (var i = 0; i < this.benefitArray.length; i++) {
            if (key.addresscity === this.benefitArray[i].addresscity) {
              this.newarealist1.push(this.areaList1);
              this.newarealist1[i] = res.data.bodys.rows;
            }
          }
        }
      });
    },
    changecountry(key) {
      key.addressdetail = "";
    },
    changaccity(key) {
      post(service.getCity, {
        bodys: {
          state: "country",
          code: key
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.areaList = res.data.bodys.rows;
          this.dangerInfor.acccounty = null;
          this.dangerInfor.accaddress = null;
        }
      });
    },

    //诊断代码等增加
    addItem(type) {
      // debugger;
      if (type === "1") {
        this.diseaseListArr.push({
          // 疾病
          disabilitycode: "",
          disabilityname: "",
          disabilitylevel: ""
        });
      } else if (type === "2") {
        this.diagnoseListArr.push({
          //诊断
          diagnosticcode: "",
          diagnosticname: ""
        });
      } else if (type === "3") {
        this.operationListArr.push({
          //手术
          operationcode: "",
          operationname: ""
        });
      } else if (type === "4") {
        this.fractureListArr.push({
          fracturename: "",
          fracturedetailname: "",
          fracturedetailcode: "",
          fracturelevel: ""
        });
      } else if (type === "5") {
        this.illnessListArr.push({
          criticalname: "",
          bigsource: "",
          smallsource: "",
          criticalcode: ""
        });
      }
    },
    // 诊断代码等删除
    deleteItem(type, index) {
      if (type === "1") {
        this.diseaseListArr.splice(index, 1);
      } else if (type === "2") {
        this.diagnoseListArr.splice(index, 1);
      } else if (type === "3") {
        this.operationListArr.splice(index, 1);
      } else if (type === "4") {
        this.fractureListArr.splice(index, 1);
      } else if (type === "5") {
        this.illnessListArr.splice(index, 1);
      }
    },
    getLipei() {
      post(service.getResaonCode, {
        bodys: {
          caseno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          customerno: JSON.parse(this.$route.params.dataOfTable).customerno
        }
      }).then(result => {
        if (result.data.headers.code === "200") {
          this.getRescode = result.data.bodys.rows.map(e => {
            return e.reasoncode;
          });
        }
      });
    },
    // 理算匹配
    matcAdjust() {
      this.oldObj1 = JSON.stringify({
        diseaseListArr: this.diseaseListArr,
        diagnoseListArr: this.diagnoseListArr,
        operationListArr: this.operationListArr,
        dangerInfor: this.dangerInfor,
        auditObj: this.auditObj
      });
      if (this.oldObj == this.oldObj1) {
        post(service.adjustment, {
          bodys: {
            caseno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            accdate: this.dangerInfor.accidentdate,
            conttype: "1",
            usercode: localStorage.getItem("userCode"),
            comcode: localStorage.getItem("comCode")
          }
        }).then(result => {
          if (result.data.header.code === "200") {
            this.$message.success(result.data.header.message);
            this.initData(); // 刷新赔案信息等四个
            this.queryButtonCheck(); // 匹配理算成功后刷新合同处理按钮判断
          } else {
            this.$message.error(result.data.header.message);
          }
        });
      } else {
        this.$confirm("页面信息未保存，是否确认不保存离开本页面！", "提示", {
          confirmButtonText: "是",
          cancelButtonText: "否",
          cancelButtonClass: "cancelButton",
          confirmButtonClass: "confirmButton",
          center: true,
          type: "warning"
        }).then(() => {
          post(service.adjustment, {
            bodys: {
              caseno: JSON.parse(this.$route.params.dataOfTable).rgtno,
              accdate: this.dangerInfor.accidentdate,
              conttype: "1",
              usercode: localStorage.getItem("userCode"),
              comcode: localStorage.getItem("comCode")
            }
          }).then(result => {
            if (result.data.header.code === "200") {
              this.$message.success(result.data.header.message);
              this.initData(); // 赔案信息等四个
              this.queryButtonCheck(); // 匹配理算成功后刷新合同处理按钮判断
            } else {
              this.$message.error(result.data.header.message);
            }
          });
        });
      }
    },
    // 影像查询
    toInitImg() {
      let routeUrl = this.$router.resolve({
        name: "initImg",
        query: {
          rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      });
      window.open(routeUrl.href, "_blank");
    },
    //返回按钮点击事件
    goBack() {
      // debugger;
      this.oldObj1 = JSON.stringify({
        diseaseListArr: this.diseaseListArr,
        diagnoseListArr: this.diagnoseListArr,
        operationListArr: this.operationListArr,
        dangerInfor: this.dangerInfor,
        auditObj: this.auditObj
      });
      if (this.oldObj == this.oldObj1) {
        this.$router.go(-1);
      } else {
        this.$confirm("页面信息未保存，是否确认不保存离开本页面！", "提示", {
          confirmButtonText: "是",
          cancelButtonText: "否",
          cancelButtonClass: "cancelButton",
          confirmButtonClass: "confirmButton",
          type: "warning",
          center: true
        }).then(() => {
          this.$router.go(-1);
        });
      }
    },
    // 选择审核结论
    changeAudit(data) {
      this.$refs.audiObj.clearValidate();
      this.$forceUpdate();
      // alert('111')
      if (data == "6") {
        (this.auditObj.auditnopassreason = ""), //拒赔，撤件
          (this.auditObj.auditnopassdesc = ""); // 拒赔，撤件原因
        (this.auditObj.auditcancelreason = ""), //拒赔，撤件
          (this.auditObj.auditcanceldesc = ""); // 拒赔，撤件原因
      } else if (data == "4") {
        (this.auditObj.llauditbackreason = ""), // 回退
          (this.auditObj.backdesc = ""); // 回退原因
        (this.auditObj.auditcancelreason = ""), //拒赔，撤件
          (this.auditObj.auditcanceldesc = ""); // 拒赔，撤件原因
      } else if (data == "5") {
        this.$refs.audiObj.clearValidate();
        (this.auditObj.llauditbackreason = ""), // 回退
          (this.auditObj.backdesc = ""); // 回退原因
        (this.auditObj.auditnopassreason = ""), //拒赔，撤件
          (this.auditObj.auditnopassdesc = ""); // 拒赔，撤件原因
      } else {
        (this.auditObj.auditnopassreason = ""), //拒赔，撤件
          (this.auditObj.auditnopassdesc = ""), // 拒赔，撤件原因
          (this.auditObj.llauditbackreason = ""), // 回退
          (this.auditObj.backdesc = ""); // 回退原因
        (this.auditObj.auditcancelreason = ""), //拒赔，撤件
          (this.auditObj.auditcanceldesc = ""); // 拒赔，撤件原因
      }
      this.$forceUpdate();
    },
    audit() {
      this.$forceUpdate();
    },
    // 保存审核信息
    saveAudit() {
      var postObj = {
        clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
        auditconclusion: this.auditObj.auditconclusion, //审核结论
        auditidea: this.auditObj.auditidea, // 审核意见
        auditexplain: this.auditObj.auditexplain, // 审核意见
        auditnopassreason: this.auditObj.auditnopassreason, //拒赔，撤件
        auditnopassdesc: this.auditObj.auditnopassdesc, // 拒赔，撤件原因
        auditcancelreason: this.auditObj.auditcancelreason, //拒赔，撤件
        auditcanceldesc: this.auditObj.auditcanceldesc, // 拒赔，撤件原因
        llauditbackreason: this.auditObj.llauditbackreason, // 回退
        backdesc: this.auditObj.backdesc, // 回退原因
        operate: "00",
        llclaimdetailschemas:
          this.countData4.length == 0 ||
          checkChange(this.countData4, JSON.parse(this.countData4Copy))
            .length == 0
            ? null
            : checkChange(this.countData4, JSON.parse(this.countData4Copy)),
        approveinfo:
          this.candisable == true
            ? null
            : {
                accidenttype: this.dangerInfor.accidenttype
                  ? this.dangerInfor.accidenttype
                  : null, //  出险类别
                directpay: this.dangerInfor.directpay
                  ? this.dangerInfor.directpay
                  : null, // 直付标志
                reasoncode: this.getRescode ? this.getRescode : null, // 理赔类型
                accidentdate: this.dangerInfor.accidentdate
                  ? this.dangerInfor.accidentdate
                  : null, // 出险日期
                accreason: this.dangerInfor.accreason
                  ? this.dangerInfor.accreason
                  : null, // 事故原因
                accidentsite: this.dangerInfor.accidentsite
                  ? this.dangerInfor.accidentsite
                  : null, // 事故地点发生性质
                accprovince: this.dangerInfor.accprovince
                  ? this.dangerInfor.accprovince
                  : null, // 出险地点省
                acccity: this.dangerInfor.acccity
                  ? this.dangerInfor.acccity
                  : null, // 出险地点市
                acccounty: this.dangerInfor.acccounty
                  ? this.dangerInfor.acccounty
                  : null, // 出险地点区
                accaddress: this.dangerInfor.accaddress
                  ? this.dangerInfor.accaddress
                  : null, // 详细地址
                hospitalname: this.dangerInfor.hospitalname
                  ? this.dangerInfor.hospitalname
                  : null, // 就诊医院
                hospitallesion: this.dangerInfor.hospitallesion
                  ? this.dangerInfor.hospitallesion
                  : null, // 病区
                hospitalbed: this.dangerInfor.hospitalbed
                  ? this.dangerInfor.hospitalbed
                  : null, // 床位
                // inhospitaldate: this.dangerInfor.inhospitaldate
                //   ? this.dangerInfor.inhospitaldate
                //   : null, //入院日期
                // outhospitaldate: this.dangerInfor.outhospitaldate
                //   ? this.dangerInfor.outhospitaldate
                //   : null, // 出院日期
                dianosedate: this.dangerInfor.dianosedate
                  ? this.dangerInfor.dianosedate
                  : null, //确诊日期
                // dieasetype: this.dangerInfor.dieasetype
                //   ? this.dangerInfor.dieasetype
                //   : null, // 疾病分类
                // dianobasis: this.dangerInfor.dianobasis
                //   ? this.dangerInfor.dianobasis
                //   : null, // 诊断依据
                deathdate: this.dangerInfor.deathdate
                  ? this.dangerInfor.deathdate
                  : null, //身故日期
                pointbnf: this.dangerInfor.pointbnf
                  ? this.dangerInfor.pointbnf
                  : null, // 受益人是否指定
                exempt: this.dangerInfor.exempt
                  ? this.dangerInfor.exempt
                  : null, // 豁免原因
                disabledrpt: this.dangerInfor.disabledrpt
                  ? this.dangerInfor.disabledrpt
                  : null, // 伤残鉴定报告
                occuprpt: this.dangerInfor.occuprpt
                  ? this.dangerInfor.occuprpt
                  : null // 工伤报告（失能鉴定、残疾证
              },
        diagnosticinfos:
          this.diagnoseListArr.length == 0 ? null : this.diagnoseListArr, //诊断代码
        operator: localStorage.getItem("userCode"),
        managecom: localStorage.getItem("comCode"),
        disabilityinfos:
          this.diseaseListArr.length == 0 ? null : this.diseaseListArr, //伤残代码
        operationinfos:
          this.operationListArr.length == 0 ? null : this.operationListArr, //手术代码
        fractureinfos:
          this.fractureListArr.length == 0 ? null : this.fractureListArr, //骨折代码
        criticalinfos:
          this.illnessListArr.length == 0 ? null : this.illnessListArr //重疾代码
      };
      post(service.postAudit, {
        bodys: postObj
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.$message.success(res.data.headers.message);
          // this.reload();
          this.initData(); // 赔案信息等4个
          this.getAuditList(); // 获取审核人
          this.candisable = true;
          //定义
          this.oldObj = JSON.stringify({
            diseaseListArr: this.diseaseListArr,
            diagnoseListArr: this.diagnoseListArr,
            operationListArr: this.operationListArr,
            dangerInfor: this.dangerInfor,
            auditObj: this.auditObj
          });
        } else if (res.data.headers.code === "500") {
          this.$message.error(res.data.headers.message);
        }
      });
    },
    // 审核确认是否置灰
    dissaveAudit1() {
      if (localStorage.getItem("checkflag") == "0") {
        return true;
      }
      if (this.isAuth) {
        return true;
      }
    },
    // 审核确认
    saveAudit1() {
      this.getAuditList();
      var postObj = {
        clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
        auditconclusion: this.auditObj.auditconclusion, //审核结论
        auditidea: this.auditObj.auditidea, // 审核意见
        auditexplain: this.auditObj.auditexplain, // 审核意见
        auditnopassreason: this.auditObj.auditnopassreason, //拒赔，撤件
        auditnopassdesc: this.auditObj.auditnopassdesc, // 拒赔，撤件原因
        auditcancelreason: this.auditObj.auditcancelreason, //拒赔，撤件
        auditcanceldesc: this.auditObj.auditcanceldesc, // 拒赔，撤件原因
        llauditbackreason: this.auditObj.llauditbackreason, // 回退
        backdesc: this.auditObj.backdesc, // 回退原因
        operate: "01",
        llclaimdetailschemas:
          this.countData4.length == 0 ||
          checkChange(this.countData4, JSON.parse(this.countData4Copy))
            .length == 0
            ? null
            : checkChange(this.countData4, JSON.parse(this.countData4Copy)),
        approveinfo:
          this.candisable == true
            ? null
            : {
                accidenttype: this.dangerInfor.accidenttype
                  ? this.dangerInfor.accidenttype
                  : null, //  出险类别
                directpay: this.dangerInfor.directpay
                  ? this.dangerInfor.directpay
                  : null, // 直付标志
                reasoncode: this.getRescode ? this.getRescode : null, // 理赔类型
                accidentdate: this.dangerInfor.accidentdate
                  ? this.dangerInfor.accidentdate
                  : null, // 出险日期
                accreason: this.dangerInfor.accreason
                  ? this.dangerInfor.accreason
                  : null, // 事故原因
                accidentsite: this.dangerInfor.accidentsite
                  ? this.dangerInfor.accidentsite
                  : null, // 事故地点发生性质
                accprovince: this.dangerInfor.accprovince
                  ? this.dangerInfor.accprovince
                  : null, // 出险地点省
                acccity: this.dangerInfor.acccity
                  ? this.dangerInfor.acccity
                  : null, // 出险地点市
                acccounty: this.dangerInfor.acccounty
                  ? this.dangerInfor.acccounty
                  : null, // 出险地点区
                accaddress: this.dangerInfor.accaddress
                  ? this.dangerInfor.accaddress
                  : null, // 详细地址
                hospitalname: this.dangerInfor.hospitalname
                  ? this.dangerInfor.hospitalname
                  : null, // 就诊医院
                hospitallesion: this.dangerInfor.hospitallesion
                  ? this.dangerInfor.hospitallesion
                  : null, // 病区
                hospitalbed: this.dangerInfor.hospitalbed
                  ? this.dangerInfor.hospitalbed
                  : null, // 床位
                // inhospitaldate: this.dangerInfor.inhospitaldate
                //   ? this.dangerInfor.inhospitaldate
                //   : null, //入院日期
                // outhospitaldate: this.dangerInfor.outhospitaldate
                //   ? this.dangerInfor.outhospitaldate
                //   : null, // 出院日期
                dianosedate: this.dangerInfor.dianosedate
                  ? this.dangerInfor.dianosedate
                  : null, //确诊日期
                // dieasetype: this.dangerInfor.dieasetype
                //   ? this.dangerInfor.dieasetype
                //   : null, // 疾病分类
                // dianobasis: this.dangerInfor.dianobasis
                //   ? this.dangerInfor.dianobasis
                //   : null, // 诊断依据
                deathdate: this.dangerInfor.deathdate
                  ? this.dangerInfor.deathdate
                  : null, //身故日期
                pointbnf: this.dangerInfor.pointbnf
                  ? this.dangerInfor.pointbnf
                  : null, // 受益人是否指定
                exempt: this.dangerInfor.exempt
                  ? this.dangerInfor.exempt
                  : null, // 豁免原因
                disabledrpt: this.dangerInfor.disabledrpt
                  ? this.dangerInfor.disabledrpt
                  : null, // 伤残鉴定报告
                occuprpt: this.dangerInfor.occuprpt
                  ? this.dangerInfor.occuprpt
                  : null // 工伤报告（失能鉴定、残疾证
              },
        diagnosticinfos:
          this.diagnoseListArr.length == 0 ? null : this.diagnoseListArr, //诊断代码
        operator: localStorage.getItem("userCode"),
        managecom: localStorage.getItem("comCode"),
        disabilityinfos:
          this.diseaseListArr.length == 0 ? null : this.diseaseListArr, //伤残代码
        operationinfos:
          this.operationListArr.length == 0 ? null : this.operationListArr, //手术代码
        fractureinfos:
          this.fractureListArr.length == 0 ? null : this.fractureListArr, //骨折代码
        criticalinfos:
          this.illnessListArr.length == 0 ? null : this.illnessListArr //重疾代码
      };
      post(service.postAudit, {
        bodys: postObj
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.candisable = true;
          this.insureAudit();
        } else if (res.data.headers.code === "500") {
          this.$message.error(res.data.headers.message);
        }
      });
    },
    // 审核确认（具体不清楚）
    insureAudit() {
      post(service.auditSure, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
          operator: localStorage.getItem("userCode"),
          managecom: localStorage.getItem("comCode"),
          auditconclusion: this.auditObj.auditconclusion,
          audituser: localStorage.getItem("userCode")
        }
      }).then(res => {
        if (res.data.headers.code == 500) {
          this.$message({
            message: res.data.headers.message,
            type: "error"
          });
        } else if (
          res.data.headers.code == 200 &&
          res.data.headers.standbyflag1 == "00"
        ) {
          this.isAudit = true;
        } else if (
          res.data.headers.code == 200 &&
          res.data.headers.standbyflag1 != "00"
        ) {
          this.$message({
            message: res.data.headers.message,
            type: "success"
          });
          this.$router.push({ name: "WorkPool" });
        }
      });
    },

    // 获取基本信息
    initInfor() {
      let _this = this;
      (_this.postArray = [
        {
          url: service.dangerperInfor, // 出险人信息
          params: {
            bodys: {
              rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        },
        {
          url: service.initApplicationInfor, // 立案申请信息
          params: {
            bodys: {
              rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        },
        {
          url: service.dangerInfor, //出险信息
          params: {
            bodys: {
              rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno,
              customerno: JSON.parse(this.$route.params.dataOfTable).customerno
            }
          }
        },
        {
          url: service.applicationInfor, // // 申请人信息
          params: {
            bodys: {
              rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        },
        {
          url: service.receviceperson, //领款人信息
          params: {
            bodys: {
              rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        },
        {
          url: service.lianPolicy, //
          params: {
            bodys: {
              customerno: JSON.parse(this.$route.params.dataOfTable).customerno
            }
          }
        },
        {
          url: service.lianJiwang, //
          params: {
            bodys: {
              customerno: JSON.parse(this.$route.params.dataOfTable).customerno
            }
          }
        },
        {
          url: service.lianBaoquan, //
          params: {
            bodys: {
              customerno: JSON.parse(this.$route.params.dataOfTable).customerno
            }
          }
        },
        {
          url: service.getquList,
          params: {
            bodys: {
              clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        },
        {
          url: service.getMsg,
          params: {
            bodys: {
              clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        },
        {
          url: service.queryCritical,
          params: {
            bodys: {
              clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        },
        {
          url: service.queryFracture,
          params: {
            bodys: {
              clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
            }
          }
        }
      ]),
        _this.postArray.forEach(postItem => {
          _this.axiosList.push(post(postItem.url, postItem.params));
        });
      axios
        .all(_this.axiosList)
        .then(function(res) {
          _this.dangerperInfor = res[0].data.bodys; // 出险人信息
          _this.initApplicationInfor = res[1].data.bodys; // 立案申请信息
          // _this.initApplicationInfor.applydate = res[1].data.bodys.applydate
          _this.dangerInfor = res[2].data.bodys; // 出险信息

          _this.applicationInfor = res[3].data.bodys;
          // 申请人信息
          // _this.drawMoneyInfor = res[4].data.bodys;
          _this.drawMoneyInfor = res[4].data.bodys.rows[0];
          // 领款人信息

          // 审批管理
          _this.policyArr1 = res[5].data.bodys;
          _this.policyArr2 = res[6].data.bodys;
          _this.policyArr3 = res[7].data.bodys;
          _this.getCityCode();
          _this.getcountyCode();
          _this.getJZS = res[8].data.bodys;
          _this.getZG = res[10].data.bodys;
          _this.getGZ = res[11].data.bodys;
          if (_this.getJZS[0] != null) {
            for (var i = 0; i < _this.getJZS.length; i++) {
              if (
                _this.getJZS[i].defocode &&
                _this.getJZS[i].defocodename &&
                _this.getJZS[i].defograde
              ) {
                _this.diseaseListArr.push({
                  disabilitycode: _this.getJZS[i].defocode,
                  disabilityname: _this.getJZS[i].defocodename,
                  disabilitylevel: _this.getJZS[i].defograde
                });
              }
              if (_this.getJZS[i].diagcode && _this.getJZS[i].diagcodename) {
                _this.diagnoseListArr.push({
                  diagnosticcode: _this.getJZS[i].diagcode,
                  diagnosticname: _this.getJZS[i].diagcodename
                }); //疾病代码
              }
              if (
                _this.getJZS[i].operationcode &&
                _this.getJZS[i].operationcodename
              ) {
                _this.operationListArr.push({
                  operationcode: _this.getJZS[i].operationcode,
                  operationname: _this.getJZS[i].operationcodename
                });
              }
            }
          }

          for (var i = 0; i < _this.getZG.length; i++) {
            if (
              _this.getZG[i].criticalname &&
              _this.getZG[i].bigsource &&
              _this.getZG[i].smallsource
            ) {
              _this.illnessListArr.push({
                criticalname: _this.getZG[i].criticalname,
                criticalcode: _this.getZG[i].criticalcode,
                bigsource: _this.getZG[i].bigsource,
                smallsource: _this.getZG[i].smallsource
              });
            }
          }
          for (let i = 0; i < _this.getGZ.length; i++) {
            if (
              _this.getGZ[i].fracturename &&
              _this.getGZ[i].fracturedetailname &&
              _this.getGZ[i].fracturecode
            ) {
              _this.fractureListArr.push({
                fracturename: _this.getGZ[i].fracturename,
                fracturedetailname: _this.getGZ[i].fracturedetailname,
                fracturecode: _this.getGZ[i].fracturecode,
                fracturedetailcode: _this.getGZ[i].fracturedetailcode,
                fracturelevel: _this.getGZ[i].fracturelevel || ""
              });
            }
          }
          if (res[9].data.headers.code === "200") {
            // debugger;
            if (res[9].data.bodys) {
              _this.auditObj.auditconclusion = res[9].data.bodys.auditconclusion
                ? res[9].data.bodys.auditconclusion
                : "";
              (_this.auditObj.auditidea = res[9].data.bodys.auditidea
                ? res[9].data.bodys.auditidea
                : ""), // 审核不通过原因
                (_this.auditObj.auditnopassreason = res[9].data.bodys
                  .auditnopassreason
                  ? res[9].data.bodys.auditnopassreason
                  : ""), //审核不通过依据
                (_this.auditObj.auditnopassdesc = res[9].data.bodys
                  .auditnopassdesc
                  ? res[9].data.bodys.auditnopassdesc
                  : ""), // 拒赔原因说明
                (_this.auditObj.auditcancelreason = res[9].data.bodys
                  .auditcancelreason
                  ? res[9].data.bodys.auditcancelreason
                  : ""), //审核不通过依据
                (_this.auditObj.auditcanceldesc = res[9].data.bodys
                  .auditcanceldesc
                  ? res[9].data.bodys.auditcanceldesc
                  : ""), // 拒赔原因说明
                (_this.auditObj.llauditbackreason = res[9].data.bodys
                  .llauditbackreason
                  ? res[9].data.bodys.llauditbackreason
                  : ""),
                (_this.auditObj.backdesc = res[9].data.bodys.backdesc
                  ? res[9].data.bodys.backdesc
                  : "");
              _this.auditObj = res[9].data.bodys;
            }
          }
          _this.oldObj = JSON.stringify({
            diseaseListArr: _this.diseaseListArr,
            diagnoseListArr: _this.diagnoseListArr,
            operationListArr: _this.operationListArr,
            dangerInfor: _this.dangerInfor,
            auditObj: _this.auditObj
          });
        })
        .then(() => {
          if (this.dangerInfor.hospitalname) {
            post(service.getHospital, {
              pagestart: this.pageDataaa.startPage,
              pageend: this.pageDataaa.endPage,
              likename: this.dangerInfor.hospitalname || ""
            }).then(res => {
              this.hospitalListsaa = res.data.bodys;
              this.remarkContents = this.hospitalListsaa[0].remark;
            });
          }
          if (this.drawMoneyInfor.receiveaccprovinc) {
            post(service.getCity, {
              bodys: {
                state: "city",
                code: this.drawMoneyInfor.receiveaccprovinc
              }
            }).then(res => {
              if (res.data.headers.code === "200") {
                this.cityListss = res.data.bodys.rows;
              }
            });
          }

          if (this.drawMoneyInfor.receivecity) {
            post(service.getCity, {
              bodys: {
                state: "country",
                code: this.drawMoneyInfor.receivecity
              }
            }).then(res => {
              if (res.data.headers.code === "200") {
                this.areaListss = res.data.bodys.rows;
              }
            });
          }
          if (this.dangerInfor.profession) {
            post(service.occupation, {
              likename: "",
              pageend: 800,
              pagestart: 0
            }).then(res => {
              const _res1 = res.data.bodys;
              this.workListss = res.data.bodys;
            });
          }
        });
    },
    // 赔案计算信息等四个
    initData() {
      // 赔案计算信息
      post(service.queryClaimInfo, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.countData1 = res.data.bodys;
          if (this.countData1 != "") {
            this.isPipei1 = true;
          }
        }
      });
      // 理赔类型计算类型
      post(service.queryClaimDutyKindInfo, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.countData2 = res.data.bodys;
          if (this.countData2 != "") {
            this.isPipei2 = true;
          }
        }
      });
      // 保单计算类型
      post(service.queryClaimPolicyInfo, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.countData3 = res.data.bodys;
          if (this.countData3 != "") {
            this.isPipei3 = true;
          }
        }
      });
      // 保项计算类型
      post(service.queryClaimDetailInfo, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.countData4 = res.data.bodys;
          this.countData4s = [];
          for (let key in this.countData4) {
            this.countData4s.push(this.countData4[key].realpay);
          }
          sessionStorage.setItem(
            "isCountData4",
            JSON.stringify(this.countData4s)
          );
          this.countData4Copy = JSON.stringify(this.countData4);
          // this.getBenefitInfo();
          if (this.countData4 != "") {
            this.isPipei4 = true;
          }
        }
      });
    },
    // 获取受益人分配信息
    getBenefitInfo() {
      post(service.queryClaimCont, {
        bodys: {
          customerno: JSON.parse(this.$route.params.dataOfTable).customerno, //客户号
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno //赔案号
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.benefitData = res.data.bodys;
        }
      });
    },
    // 重要信息修改
    impInfoChange() {
      this.candisable = false;
    },
    // 诊断代码等标签切换
    handleClick(tab, event) {
      this.isbox = true;
      if (tab.index === "0") {
        this.style1 = "margin: 0 0 0 15px";
      }
      if (tab.index === "1") {
        this.style1 = "margin: 0 0 0 127px";
      }
      if (tab.index === "2") {
        this.style1 = "margin: 0 0 0 230px";
      }
      if (tab.index === "3") {
        this.style1 = "margin: 0 0 0 330px";
      }
      if (tab.index === "4") {
        this.style1 = "margin: 0 0 0 430px";
      }
    },
    // 右边栏
    jump(index) {
      if (index == "top") {
        document.getElementById(0).scrollIntoView();
        this.$store.dispatch("titleshow", "");
      } else {
        this.activeStep = index;
        this.$store.dispatch("titleshow", "true");
        setTimeout(() => {
          if (this.$store.getters.titleclose == "true") {
            document.getElementById(index).scrollIntoView();
          }
        }, 300);
      }
    },
    // 发起二核是否置灰
    toShowTwo() {
      post(service.checkoutsecond, {
        bodys: {
          clmno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        this.isShowTwo = res.data.header.standbyflag2;
      });
    },
    // 发起二核
    toSecondary() {
      this.oldObj1 = JSON.stringify({
        diseaseListArr: this.diseaseListArr,
        diagnoseListArr: this.diagnoseListArr,
        operationListArr: this.operationListArr,
        dangerInfor: this.dangerInfor,
        auditObj: this.auditObj
      });
      if (this.oldObj == this.oldObj1) {
        this.$router.push({
          name: "Secondary",
          query: {
            clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            customerno: JSON.parse(this.$route.params.dataOfTable).customerno,
            accidenttype: this.dangerInfor.accidenttype
          }
        });
      } else {
        this.$confirm("页面信息未保存，是否确认不保存离开本页面！", "提示", {
          confirmButtonText: "是",
          cancelButtonText: "否",
          cancelButtonClass: "cancelButton",
          confirmButtonClass: "confirmButton",
          type: "warning",
          center: true
        }).then(() => {
          this.$router.push({
            name: "Secondary",
            query: {
              clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
              customerno: JSON.parse(this.$route.params.dataOfTable).customerno,
              accidenttype: this.dangerInfor.accidenttype
            }
          });
        });
      }
    },
    // 同一事故认定
    toSameAccident() {
      this.oldObj1 = JSON.stringify({
        diseaseListArr: this.diseaseListArr,
        diagnoseListArr: this.diagnoseListArr,
        operationListArr: this.operationListArr,
        dangerInfor: this.dangerInfor,
        auditObj: this.auditObj
      });
      if (this.oldObj == this.oldObj1) {
        this.$router.push({
          name: "SameAccident",
          params: {
            dataOfTable: this.$route.params.dataOfTable
          }
        });
      } else {
        this.$confirm("页面信息未保存，是否确认不保存离开本页面！", "提示", {
          confirmButtonText: "是",
          cancelButtonText: "否",
          cancelButtonClass: "cancelButton",
          confirmButtonClass: "confirmButton",
          type: "warning",
          center: true
        }).then(() => {
          this.$router.push({
            name: "SameAccident",
            params: {
              dataOfTable: this.$route.params.dataOfTable
            }
          });
        });
      }
    },
    disExmption() {
      if (localStorage.getItem("exemptflag") == "0") {
        return true;
      }
    },
    // 合同处理
    toContractProcess() {
      this.oldObj1 = JSON.stringify({
        diseaseListArr: this.diseaseListArr,
        diagnoseListArr: this.diagnoseListArr,
        operationListArr: this.operationListArr,
        dangerInfor: this.dangerInfor,
        auditObj: this.auditObj
      });
      if (this.oldObj == this.oldObj1) {
        this.$router.push({
          name: "ContractProcess",
          query: {
            clmno: sessionStorage.getItem("caseno"),
            customerno: sessionStorage.getItem("customerno")
          }
        });
      } else {
        this.$confirm("页面信息未保存，是否确认不保存离开本页面！", "提示", {
          confirmButtonText: "是",
          cancelButtonText: "否",
          cancelButtonClass: "cancelButton",
          confirmButtonClass: "confirmButton",
          type: "warning",
          center: true
        }).then(() => {
          this.$router.push({
            name: "ContractProcess",
            query: {
              clmno: sessionStorage.getItem("caseno"),
              customerno: sessionStorage.getItem("customerno")
            }
          });
        });
      }
    },
    //回退查询
    torRollBackMes() {
      this.$router.push({
        name: "RollbackMes",
        params: {
          dataOfTable: this.$route.params.dataOfTable
        }
      });
    },
    // 二核结论查看是否置灰
    searchAudit() {
      post(service.secondSearch, {
        bodys: {
          caseno: JSON.parse(this.$route.params.dataOfTable).rgtno
        }
      }).then(res => {
        if (res.data.bodys.length == 0) {
          this.lookTwo = false;
        } else {
          this.lookTwo = true;
        }
      });
    },
    // 二核结论查看
    goSecond() {
      this.$router.push({
        name: "secondSearch",
        params: {
          dataOfTable: this.$route.params.dataOfTable
        }
      });
    },
    // 提起调查是否置灰
    getState() {
      if (localStorage.getItem("startinqflag") == "0") {
        return true;
      }
    },
    // 提起调查
    toInitiateSurvey() {
      this.oldObj1 = JSON.stringify({
        diseaseListArr: this.diseaseListArr,
        diagnoseListArr: this.diagnoseListArr,
        operationListArr: this.operationListArr,
        dangerInfor: this.dangerInfor,
        auditObj: this.auditObj
      });
      if (this.oldObj == this.oldObj1) {
        this.$router.push({
          name: "InitiateSurvey",
          query: { clmno: JSON.parse(this.$route.params.dataOfTable).rgtno }
        });
      } else {
        this.$confirm("页面信息未保存，是否确认不保存离开本页面！", "提示", {
          confirmButtonText: "是",
          cancelButtonText: "否",
          cancelButtonClass: "cancelButton",
          confirmButtonClass: "confirmButton",
          type: "warning",
          center: true
        })
          .then(() => {
            this.$router.push({
              name: "InitiateSurvey",
              query: { clmno: JSON.parse(this.$route.params.dataOfTable).rgtno }
            });
          })
          .catch(() => {});
      }
    },
    // 生成照会是否置灰
    getPhotoState() {
      if (localStorage.getItem("notesignflag") == "0") {
        return true;
      }
    },
    // 生成照会
    toInitiatingPhoto() {
      this.oldObj1 = JSON.stringify({
        diseaseListArr: this.diseaseListArr,
        diagnoseListArr: this.diagnoseListArr,
        operationListArr: this.operationListArr,
        dangerInfor: this.dangerInfor,
        auditObj: this.auditObj
      });
      if (this.oldObj == this.oldObj1) {
        this.$router.push({
          name: "InitiatingPhoto",
          query: {
            clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            customerno: JSON.parse(this.$route.params.dataOfTable).customerno
          }
        });
      } else {
        this.$confirm("页面信息未保存，是否确认不保存离开本页面！", "提示", {
          confirmButtonText: "是",
          cancelButtonText: "否",
          cancelButtonClass: "cancelButton",
          confirmButtonClass: "confirmButton",
          type: "warning",
          center: true
        })
          .then(() => {
            this.$router.push({
              name: "InitiatingPhoto",
              query: {
                clmno: JSON.parse(this.$route.params.dataOfTable).rgtno,
                customerno: JSON.parse(this.$route.params.dataOfTable)
                  .customerno
              }
            });
          })
          .catch(() => {});
      }
    },
    //获取枚举值
    getCodeList: function() {
      // debugger;
      post(service.getCodeList, {
        // 证件类型，性别，出险类型 事故原因
        codetype: ["relatoinsure"]
      }).then(res => {
        if (res.data.header.code === "200") {
          this.relatoinsureList = res.data.bodys["relatoinsure"]; // 报案人与出现人关系
        }
      });
    },

    round(num, decimal) {
      if (isNaN(num)) {
        return 0;
      }
      const p1 = Math.pow(10, decimal + 1);
      const p2 = Math.pow(10, decimal);
      return Math.round((num * p1) / 10) / p2;
    },
    toFixeds(num, decimal) {
      return this.round(num, decimal).toFixed(decimal);
    },
    // 保留两位
    twoNum(obj) {
      if (obj.bnflot > 0 && obj.bnflot <= 100) {
        obj.bnflot = this.toFixeds(parseFloat(obj.bnflot), 2);
      } else if (obj.bnflot > 100) {
        obj.bnflot = null;
        this.$message.error("分配比例不能超过100%！");
        return false;
      } else {
        obj.bnflot = null;
      }
    },
    ToCDB(str) {
      var result = "";
      for (var i = 0; i < str.length; i++) {
        if (str.charCodeAt(i) == 12288) {
          result += String.fromCharCode(str.charCodeAt(i) - 12256);
          continue;
        }
        if (str.charCodeAt(i) > 65280 && str.charCodeAt(i) < 65375)
          result += String.fromCharCode(str.charCodeAt(i) - 65248);
        else result += String.fromCharCode(str.charCodeAt(i));
      }
      str = result;
      return str;
    },
    // 保项信息PDF
    clickCell(key) {
      post(service.getpath, {
        bodys: {
          riskcode: key
        }
      }).then(res => {
        this.downloadpath = res.data.bodys.downloadpath;
        if (res.data.bodys.downloadpath) {
          window.open("http://" + this.downloadpath, "_blank");
        }
      });
    },
    changeToUpperCase(row) {
      if (row.idtype == 1) {
        row.idno = row.idno.toUpperCase();
      }
      if (row.tcatidtp && row.tcatidtp == 1) {
        row.tcatidnum = row.tcatidnum.toUpperCase();
      }
      if (row.tcacidnum && row.tcacidnum == 1) {
        row.tcacidnum = row.tcacidnum.toUpperCase();
      }
      if (row.tclridnum && row.tclridnum == 1) {
        row.tclridnum = row.tclridnum.toUpperCase();
      }
      if (row.owidtype && row.owidtype == 1) {
        row.owidtype = row.owidtype.toUpperCase();
      }
    },
    disableds(row) {
      if (
        (row.relationtoinsured == "01" ||
          row.relationtoinsured == "02" ||
          row.relationtoinsured == "04") &&
        row.idtype != "7" &&
        row.idtype != "10"
      ) {
        return true;
      }
    },
    loadmore() {
      this.formData1.pagestart += 100;
      if (this.filterVal) {
        this.formData1.likename = this.filterVal;
      }
      this.getDiagnosis(this.formData1);
    },
    getDiagnosis(formData1) {
      post(service.lldiagcode, formData1).then(res => {
        const _res1 = res.data.bodys;
        this.diagcodeList = [...this.diagcodeList, ..._res1];
      });
    },
    loadmore1() {
      this.formData.pagestart++;
      this.getRiskRes(this.formData);
    },
    getRiskRes(formData) {
      post(service.ldaccresult, {
        bodys: formData
        // pagestart: "",
        // pageend: "",
        // likename: this.objForm.accidentcourse
      }).then(res => {
        const _res = res.data.bodys;
        this.riskResultList = [...this.riskResultList, ..._res];
      });
    },
    isHosNames() {
      this.isHosname = "";
    },
    filteredaa(val) {
      this.pageDataaa.startPage = 0;
      this.pageDataaa.endPage = 100;
      this.isHosname = val;
      if (val != "") {
        post(service.getHospital, {
          pagestart: this.pageDataaa.startPage,
          pageend: this.pageDataaa.endPage,
          likename: val
        }).then(res => {
          this.hospitalListsaa = res.data.bodys;
        });
      }
    },
    clearHospital() {
      // this.dangerInfor.hospitalname = "";
      this.pageDataaa.startPage = 0;
      this.pageDataaa.endPage = 100;
      post(service.getHospital, {
        pagestart: this.pageDataaa.startPage,
        pageend: this.pageDataaa.endPage,
        likename: ""
      }).then(res => {
        this.hospitalListsaa = res.data.bodys;
      });
    },
    loadmoreaa() {
      this.pageDataaa.startPage += 100;
      post(service.getHospital, {
        pagestart: this.pageDataaa.startPage,
        pageend: 100,
        likename: this.isHosname || ""
      }).then(res => {
        this.hospitalListsaa = [...this.hospitalListsaa, ...res.data.bodys];
      });
    },
    changeHospital(item) {
      post(service.getHospital, {
        pagestart: 0,
        pageend: 100,
        likename: item
      }).then(res => {
        if (res.data.bodys[0].remark) {
          this.remarkContents = res.data.bodys[0].remark;
        } else {
          this.remarkContents = "";
        }
      });
    },
    // ========================================================
    // 合同状态自动处理按钮
    policyStateAutoDeal() {
      post(service.policyStateAutoDeal, {
        bodys: {
          clmno: this.$route.query.clmno,
          customerno: this.$route.query.customerno,
          operator: localStorage.getItem("userCode")
        }
      }).then(res => {
        if (res.data.headers.code === "200") {
          this.$message.success("操作成功");
        } else {
          this.$emssage.error(res.data.headers.message);
        }
      });
    },
    // ============================================>医疗单证start
    getHosa() {
      this.isShowhospital = true;
      // if (this.rgtno && this.customerno) {
      //   this.getCfee();
      // }
      // this.getFeeItem();
      // this.getHospitalsz();
      // this.getHospitalsz1();
    }
  }
};
</script>
<style lang="less">
.reviewInformation .el-tabs--card > .el-tabs__header .el-tabs__item {
  background-color: #fff;
  color: #999999;
}
/* input[disabled],
input:disabled,
input.disabled {
  -webkit-text-fill-color: #333;
  -webkit-opacity: 1;
  opacity: 1;
} */
.disabledinput {
  -webkit-text-fill-color: #333;
  -webkit-opacity: 1;
  opacity: 1;
}
/* .reviewInformation .place .el-input {
  width: 130px;
} */
.reviewInformation .bank .el-input {
  width: 30%;
}
.reviewInformation {
  .lingAdress {
    .el-input {
      width: 20% !important;
    }
  }
}
.reviewInformation {
  .lingAdress {
    .lingDes {
      width: 100% !important;
    }
  }
}

.reviewInformation .el-checkbox-group {
  display: flex !important;
}

.audit .el-form-item__content {
  display: flex !important;
  margin-left: 3% !important;
}

.audit .el-form-item__label {
  width: 90px !important;
}
</style>
<style lang="less" scoped>
#CompanyStyle {
  /deep/.el-input,
  .el-select,
  .el-date-editor .el-input {
    width: 100% !important;
  }
}
.bottom_box_before {
  overflow: hidden;
  margin-bottom: 40px;
  .box_before {
    float: right;
    margin: 10px 10px 30px 0;
  }
}
.bank {
  .el-select {
    width: 100%;
  }
  .el-input__prefix,
  .el-input__suffix {
    right: 1px;
  }
}
.address {
  display: flex;
  .el-input__inner {
    width: 100%;
  }
  .el-select {
    width: 100%;
  }
  .el-form-item__error {
    white-space: nowrap;
  }
  .address_style {
    .el-form-item__content {
      margin-left: 30px !important;
    }
  }
  // .el-input {
  //   width: 150px;
  // }
  .full {
    .el-input {
      width: 210px;
    }
  }
}
.mels {
  /deep/ .el-tabs__nav-scroll {
    width: 350px;
    margin: 0 auto;
  }
  /deep/ .el-tabs__item {
    font-size: 20px;
  }
}
.twoTitle {
  border-left: 2px solid #409eff;
  padding-left: 10px;
  font-size: 16px;
}
.isshow {
  /deep/ .el-input {
    width: auto !important;
    margin: 0 10px !important;
  }
}
.diamh {
  /deep/.el-dialog__header {
    padding: 0 !important;
  }
  /deep/.el-select {
    width: 100%;
  }
  /deep/.el-date-editor.el-input {
    width: 85% !important;
  }
}
.jiuzhens {
  position: absolute;
  top: 0;
  left: 86%;
  border: none;
  padding: 10px 0px;
}
.jiuzhens:focus,
.jiuzhens:hover {
  color: none;
  background: none;
}
// /deep/.el-table .cell {
//   padding-left: 0 !important;
//   padding-right: 0 !important;
// }
// 支行
.nobankData {
  display: none;
}
.work_queue {
  position: relative;
  text-align: left;
  //   img{
  //      position: relative;
  //   }
  span {
    display: inline-block;
    background-color: #0673ff;
    color: #fff;
    padding: 0 15px;
    height: 33px;
    line-height: 33px;
    border-radius: 10px 10px 0 0;
  }
  .box {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid #0673ff;
    position: absolute;
    top: 33px;
    left: 15px;
    z-index: 999;
  }
}
.reviewInformation {
  margin: 10px;
  // margin-right: 0;
  margin-bottom: 0;
  box-sizing: border-box;

  .left {
    /* margin-left: 10px;
    margin-right: 10px; */
    width: 90%;
    float: left;
  }
  .audit .el-form-item__content {
    display: flex !important;
    margin-left: 28% !important;
  }

  .audit .el-form-item__label {
    width: 0 !important;
    white-space: nowrap;
  }

  .right {
    padding: 0 5px;
    text-align: center;
    float: right;
    width: 7%;
    border: 1px solid #cccccc;
    // height: 580px;
    border-radius: 100px;
    background: #fff;
    position: absolute;
    right: 1%;
    margin-top: 20px;
    // ======================================
    // p标签影响了医疗单证样式
    .btn_text {
      padding-bottom: 8px;
    }
    .btn_text:first-of-type {
      margin-top: 45px;
    }
    .btn_text:last-of-type {
      margin-bottom: 100px;
    }
    .downArrow {
      position: absolute;
      top: -25px;
      left: 50%;
      transform: translateX(-50%);
    }

    .upArrow {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      bottom: 10px;
    }

    .top {
      position: absolute;
      left: 50%;
      transform: translateX(-50%);
      bottom: 30px;
    }

    .btn_text {
      border-bottom: 1px dotted #cccccc;
    }
  }
  // ==================
  .header {
    background-color: #0673ff;
    height: 50px;
    line-height: 50px;
    border-radius: 25px 25px 0 0;
    padding: 0 30px;
    overflow: hidden;
    color: #fff;
    font-size: 20px;
    font-family: Source Han Sans CN;

    i {
      font-size: 30px;
      float: right;
      margin-top: 19px;
    }
  }

  .el-form {
    background-color: #fff;
    // padding: 0 20px;
  }

  .work_queue {
    position: relative;

    //   img{
    //      position: relative;
    //   }
    span {
      display: inline-block;
      background-color: #0673ff;
      color: #fff;
      padding: 0 15px;
      height: 33px;
      line-height: 33px;
      border-radius: 10px 10px 0 0;
    }

    .box {
      width: 0;
      height: 0;
      border-left: 10px solid transparent;
      border-right: 10px solid transparent;
      border-top: 10px solid #0673ff;
      position: absolute;
      top: 33px;
      left: 15px;
      z-index: 999;
    }
  }

  .block {
    background-color: #fff;
    height: 80px;
    padding-top: 27px;
    box-sizing: border-box;
  }

  .el-collapse {
    margin-bottom: 20px;
  }

  .box {
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid #0673ff;
    position: absolute;
    z-index: 999;
  }
  .botton_box {
    width: 74%;
    left: 50%;
    transform: translateX(-50%);
    position: fixed;
    width: 74%;
    bottom: -6.5px;
    height: 74px;
    line-height: 74px;
    background-image: url("../../assets/images/filing/footer2.png");
    background-size: 100% 60px;
    background-repeat: no-repeat;
    background-position: center;
    z-index: 1000;
  }

  .dialog-footer {
    text-align: left;
  }
}
</style>
<style lang="less">
.delete {
  display: inline-block;
  width: 21px;
  height: 4px;
  background: linear-gradient(
    180deg,
    rgba(71, 157, 255, 1) 0%,
    rgba(0, 62, 255, 1) 100%
  );
  opacity: 1;
  border-radius: 2px;
  margin-right: 12px;
}
// 备注表格
.leftItem .el-table .cell {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}
.reviewInformation .el-textarea .el-input__count {
  top: auto !important;
}

//  End
.el-row {
  padding-top: 0px;
  //   margin-bottom: 20px;
  &:first-child {
    padding-top: 20px;
    margin-bottom: 0;
  }

  &:last-child {
    padding-top: 0;
    margin-bottom: 0;
  }
}

.grid-content {
  border-radius: 4px;
  min-height: 36px;

  .report {
    display: inline-block;
    width: 180px;
    height: 40px;
    text-align: center;
    line-height: 40px;
    background-color: #0673ff;
    color: #fff;
    font-size: 14px;
    font-family: Source Han Sans CN;
    border-radius: 25px;
  }
}

.row-bg {
  padding: 10px 0;
  background-color: #f9fafc;
}

.reviewInformation {
  .el-input {
    width: 85%;
  }
  .el-select {
    width: 85%;
    .el-input {
      width: 100%;
    }
  }
  .el-cascader {
    width: 85% !important;
    .el-input {
      width: 100%;
    }
  }
  .el-date-editor.el-input,
  .el-date-editor.el-input__inner {
    width: 85% !important;
  }
  .el-collapse-item__arrow {
    display: none;
  }

  .el-collapse-item__header {
    background-color: #0673ff;
    height: 30px;
    line-height: 30px;
    border-radius: 10px 10px 0 0;
    padding: 0 15px;
    overflow: hidden;
    color: #fff;
    font-size: 16px;
    font-family: Source Han Sans CN;
  }

  .el-collapse-item__content {
    padding-bottom: 0px;
  }

  .el-textarea .el-input__count {
    top: 2px;
  }
}
</style>
<style lang="less">
.reviewInformation .el-tabs--card > .el-tabs__header .el-tabs__item.is-active {
  background-color: #0673ff;
  border-bottom: none;
  border-radius: 8px 8px 0 0;
  color: #fff;
}

.reviewInformation .el-tabs__header {
  margin: 0;
}
.redStars {
  color: #f56c6c;
}

.place {
  display: flex;
  .el-form-item__error {
    white-space: nowrap;
  }
  .el-select {
    width: 100%;
  }

  .risk_address {
    // width: 130px !important;
    .el-form-item__content {
      margin-left: 8px !important;
    }
  }
}
.reviewInformation {
  .applyAddress {
    .el-input {
      width: 20% !important;
    }
    .applyDes {
      width: 100% !important;
    }
  }
}

.reviewInformation .el-checkbox__inner {
  z-index: 0;
}
.reviewInformation {
  .midSty {
    .el-form-item__label {
      line-height: 20px;
    }
  }
}
.el-button.is-round {
  padding: 7px 13px;
}
.reviewInformation
  .el-checkbox__input.is-disabled.is-checked
  .el-checkbox__inner::after {
  border-color: #fff !important;
}
.reviewInformation .el-checkbox__input.is-checked .el-checkbox__inner,
.el-checkbox__input.is-indeterminate .el-checkbox__inner {
  background-color: #409eff !important;
  // border-color: #409EFF;
}
.el-radio__input.is-disabled.is-checked .el-radio__inner {
  background-color: #409eff !important;
}
.el-radio__input.is-disabled.is-checked .el-radio__inner::after {
  background-color: #fff !important;
}
.reviewInformation .el-tabs--card > .el-tabs__header {
  border-bottom: none;
}
.reviewInformation .el-button + .el-button {
  margin-left: 1px;
}
</style>