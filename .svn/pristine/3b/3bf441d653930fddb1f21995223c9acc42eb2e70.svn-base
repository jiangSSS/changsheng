<template>
  <div>
    <!-- 提示框 -->
    <el-dialog title :visible.sync="dialogVisible" class="isshow" width="80%">
      <template>
        <p class="twoTitle">
          费用明细
          <el-button class="titleBtn" type="primary" @click="addRowItem1()">新增</el-button>
        </p>
      </template>
      <el-table
        :data="fyDetail.slice((currentPage3-1)*pagesize3,currentPage3*pagesize3)"
        center="true"
      >
        <el-table-column label="序号" type="index" width="50" :index="indexMethod3"></el-table-column>
        <el-table-column prop="feeitemname" label="费用项名称" width="160" align="center">
          <template slot="header" slot-scope="scope">
            <!-- <span class="redStars">&nbsp*&nbsp</span> -->
            <span>费用项名称</span>
          </template>
          <template slot-scope="scope">
            <el-select
              placeholder="请选择"
              v-model="scope.row.feeitemname"
              filterable
              clearable
              @change="changeFeeItem(scope.row.feeitemname,scope.row,'1')"
            >
              <!-- @focus="getFeeItem(scope.row.feeitemname,scope.row,'1')" -->
              <el-option
                v-for="(item,index) in fyxLists"
                :label="item.codename"
                :value="item.code"
                :key="index"
              ></el-option>
            </el-select>
          </template>
        </el-table-column>
        <el-table-column prop="feeitemdetil" label="费用名称明细" width="240" align="center">
          <template slot="header" slot-scope="scope">
            <!-- <span class="redStars">&nbsp*&nbsp</span> -->
            <span>费用名称明细</span>
          </template>
          <template slot-scope="scope">
            <el-select
              placeholder="请选择"
              v-model="scope.row.feeitemdetil"
              @change="changeFeeitemdetil(scope.row.feeitemdetil,scope.row,'1')"
              @focus="changeFeeitemdetil(scope.row.feeitemdetil,scope.row,'1')"
              v-el-select-loadmore="loadmore"
              filterable
              allow-create
              clearable
            >
              <el-option
                v-for="(item,index) in fyDetailList1"
                :key="index"
                :label="item.itemname"
                :value="item.id+'|@|'+item.itemname"
              ></el-option>
            </el-select>
          </template>
        </el-table-column>
        <el-table-column prop="fee" label="单价" width="130" align="center">
          <template slot-scope="scope">
            <el-input
              v-model="scope.row.fee"
              type="text"
              @blur="getSum(scope.row)"
              clearable
              maxlength="13"
              min="0"
            ></el-input>
          </template>
        </el-table-column>
        <el-table-column prop="number" label="数量" width="100" align="center">
          <template slot-scope="scope">
            <el-input
              v-model="scope.row.number"
              type="text"
              @blur="getSum(scope.row)"
              clearable
              maxlength="13"
              min="0"
            ></el-input>
          </template>
        </el-table-column>
        <el-table-column prop="price" label="费用金额" width="130" align="center">
          <template slot="header" slot-scope="scope">
            <span class="redStars">&nbsp*&nbsp</span>
            <span>费用金额</span>
          </template>
          <template slot-scope="scope">
            <el-input
              v-model="scope.row.price"
              type="text"
              clearable
              @blur="twoNum(scope.row)"
              maxlength="13"
              min="0"
            ></el-input>
          </template>
        </el-table-column>
        <el-table-column prop="specifications" label="规格与单位" width="160" align="center">
          <template slot-scope="scope">
            <el-input v-model="scope.row.specifications" maxlength="100" clearable></el-input>
          </template>
        </el-table-column>
        <el-table-column prop="healthcaretype" label="医保类别" width="160" align="center">
          <template slot-scope="scope">
            <el-input v-model="scope.row.healthcaretype" clearable maxlength="100"></el-input>
          </template>
        </el-table-column>
        <el-table-column label="操作" width="80" align="center">
          <template slot-scope="scope">
            <!-- <span class="delete" @click.native.prevent="deleteRow(scope.$index, gridData)"></span> -->

            <el-button size="mini" @click="delete3(scope.$index)">删除</el-button>
            <!-- <el-button size="mini" @click="dialogVisible = true">录入明细</el-button> -->
          </template>
        </el-table-column>
      </el-table>
      <div style="margin-top:10px;">
        <el-pagination
          background
          @size-change="handleSizeChange3"
          @current-change="handleCurrentChange3"
          :page-size="pagesize3"
          layout="prev, pager, next, jumper"
          :total="fyDetail.length"
        ></el-pagination>
      </div>
      <template>
        <p class="twoTitle">
          扣费明细
          <el-button class="titleBtn" type="primary" @click="addRowItem2()">新增</el-button>
        </p>
      </template>
      <el-table
        :data="kfDetail.slice((currentPage4-1)*pagesize4,currentPage4*pagesize4)"
        center="true"
      >
        <el-table-column label="序号" type="index" width="50" :index="indexMethod4"></el-table-column>
        <el-table-column prop="deducttypes" label="扣费类型" align="center" width="160">
          <template slot="header" slot-scope="scope">
            <span class="redStars">&nbsp*&nbsp</span>
            <span>扣费类型</span>
          </template>
          <template slot-scope="scope">
            <el-select
              placeholder="请选择"
              v-model="scope.row.deducttypes"
              @change="changeKoufeiItem(scope.row.deducttypes,scope.row,'1')"
            >
              <el-option
                v-for="(item,index) in koufeiTypes"
                :label="item.codename"
                :value="item.code"
                :key="index"
                filterable
                clearable
              ></el-option>
            </el-select>
          </template>
        </el-table-column>
        <el-table-column prop="deductnames" label="扣费名称" align="center" width="240" clearable>
          <template slot="header" slot-scope="scope">
            <span class="redStars">&nbsp*&nbsp</span>
            <span>扣费名称</span>
          </template>
          <template slot-scope="scope">
            <!-- :filter-method="filtered(scope.row)" -->

            <el-select
              placeholder="请选择"
              v-model="scope.row.deductnames"
              @change="changeKouFei(scope.row.deductnames,scope.row,'1')"
              @focus="changeKouFei(scope.row.deductnames,scope.row,'1')"
              v-el-select-loadmore="loadmore1"
              filterable
              allow-create
              clearable
            >
              <el-option
                v-for="item in koufeiLists"
                :key="item.id"
                :label="item.itemname"
                :value="item.id+'|@|'+item.itemname"
              ></el-option>
            </el-select>
          </template>
        </el-table-column>
        <el-table-column prop="deductfee " label="扣费金额" align="center" width="130">
          <template slot="header" slot-scope="scope">
            <span class="redStars">&nbsp*&nbsp</span>
            <span>扣费金额</span>
          </template>
          <template slot-scope="scope">
            <el-input
              v-model="scope.row.deductfee"
              type="text"
              @blur="twoNum(scope.row)"
              maxlength="13"
              clearable
              min="0"
            ></el-input>
          </template>
        </el-table-column>
        <el-table-column prop="deductreasontypes" label="扣费原因类型" width="200">
          <template slot="header" slot-scope="scope">
            <span class="redStars">&nbsp*&nbsp</span>
            <span>扣费原因类型</span>
          </template>
          <template slot-scope="scope">
            <!-- <el-input v-model="scope.row.deductreasontypes" clearable></el-input> -->

            <el-select placeholder="请选择" v-model="scope.row.deductreasontypes">
              <el-option
                v-for="(item,index) in koufeiReason"
                :key="index"
                :label="item.codename"
                :value="item.code"
                filterable
                clearable
              ></el-option>
            </el-select>
          </template>
        </el-table-column>
        <el-table-column prop="deductreasons" label="扣费原因" align="center" width="160">
          <template slot-scope="scope">
            <el-input v-model="scope.row.deductreasons" clearable maxlength="100"></el-input>
          </template>
        </el-table-column>
        <el-table-column prop="deductemark" label="备注" align="center" width="160">
          <template slot-scope="scope">
            <el-input v-model="scope.row.deductemark" maxlength="80" clearable></el-input>
          </template>
        </el-table-column>
        <el-table-column label="操作" align="center">
          <template slot-scope="scope">
            <el-button size="mini" @click="delete4(scope.$index)">删除</el-button>
          </template>
        </el-table-column>
      </el-table>
      <div style="margin-top:10px;">
        <el-pagination
          background
          @size-change="handleSizeChange4"
          @current-change="handleCurrentChange4"
          :page-size="pagesize4"
          layout="prev, pager, next, jumper"
          :total="kfDetail.length"
        ></el-pagination>
      </div>
      <span slot="footer" class="dialog-footer">
        <el-button type="primary" @click="beSure">确定</el-button>
        <el-button type="primary" @click="dialogVisible = false">返回</el-button>
      </span>
    </el-dialog>
  </div>
</template>

<script>
export default {
  directives: {
    "el-select-loadmore": {
      bind(el, binding) {
        //  console.log(arg)
        const elsss = el.querySelector(
          ".el-select-dropdown .el-select-dropdown__wrap"
        );
        elsss.addEventListener("scroll", function() {
          const condition =
            this.scrollHeight - this.scrollTop - 1 <= this.clientHeight;
          if (condition) {
            binding.value();
          }
        });
      }
    }
  },
  props:["dialogVisible"],

  data() {
    return {
      pageData2: {
        startPage: 0,
        endPage: 100
      },
      pageData3: {
        startPage: 0,
        endPage: 100
      },
      pagesize3: 10,
      currentPage3: 1,
      pagesize4: 10,
      currentPage4: 1
    };
  },
  methods: {
    addRowItem1() {
      // 普通门诊的费用明细
      this.fyDetail.push({
        feeitemname: "", // 费用项名称
        feeitemdetil: "", // 费用名称明细
        fee: "", //单价
        number: "", //数量
        price: "", //费用金额
        specifications: "", //规格与单价
        healthcaretype: "" //医保类别
      });
    },
    addRowItem2() {
      this.kfDetail.push({
        deductnames: "", // //扣费名称
        deductreasontypes: "", // 扣费原因类型
        deductemark: "", //备注
        deductreasons: "", // 扣费原因
        deductfee: "", //扣费金额
        deducttypes: "" // 扣费类型MenZhen
      });
    },
    delete3(index) {
      // 删除普通门诊
      this.fyDetail.splice(index, 1);
    },
    delete4(index) {
      // 删除住院
      this.kfDetail.splice(index, 1);
    },
    // 获取门诊详细
    getDetail1(data) {
      if (!data.mainfeeno) {
        this.$message({
          message: "请先录入收据编号",
          type: "error"
        });
      } else {
        this.dialogVisible = true;
        this.mainData1 = data;
        post(service.getcfeeDetail, {
          bodys: {
            // rgtno:JSON.parse(this.$route.params.dataOfTable).rgtno,
            rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            mainfeeno: data.mainfeeno
          }
        }).then(result => {
          if (result.data.headers.code === "200") {
            //  this.commonOutDetail =  res.data.headers
            this.kfDetail = result.data.bodys.rows[0].deduct;
            this.fyDetail = result.data.bodys.rows[0].receipt;
            if (this.fyDetail.length == 0) {
              this.addRowItem1();
            }
          } else if (result.data.headers.code === "500") {
            this.kfDetail = [];
            this.fyDetail = [];
          }
        });
      }
    },
    // 获取住院详细
    getDetail2(data) {
      if (!data.mainfeeno) {
        this.$message({
          message: "请先录入收据编号",
          type: "error"
        });
      } else {
        this.dialogVisible = true;
        this.mainData1 = data; // 住院
        post(service.getcfeeDetail, {
          bodys: {
            // rgtno:JSON.parse(this.$route.params.dataOfTable).rgtno,
            rgtno: JSON.parse(this.$route.params.dataOfTable).rgtno,
            mainfeeno: data.mainfeeno
          }
        }).then(result => {
          if (result.data.headers.code === "200") {
            //  this.commonOutDetail =  res.data.headers
            this.kfDetail = result.data.bodys.rows[0].deduct;
            this.fyDetail = result.data.bodys.rows[0].receipt;
            console.log("ggggg", this.kfDetail);

            if (this.fyDetail.length == 0) {
              this.addRowItem1();
            }
          } else if (result.data.headers.code === "500") {
            this.kfDetail = [];
            this.fyDetail = [];
          }
        });
      }
    },
    //医疗单证录入 // 门诊
    beSure() {
      // 通过明细获取费用总金额跟扣费明细
      let _this = this;
      if (_this.kfDetail.length == 0 && _this.fyDetail.length == 0) {
        this.$message({
          message: "请添加一条明细记录",
          type: "error"
        });
      } else if (checkLfor1(_this.fyDetail) || checkLfor2(_this.kfDetail)) {
        this.$message({
          message: checkLfor1(_this.fyDetail)
            ? checkLfor1(_this.fyDetail)
            : checkLfor2(_this.kfDetail),
          type: "error"
        });
      } else {
        if (this.mainData1.feetype == "A") {
          post(service.savecpay, {
            bodys: {
              remark: "1",
              //   customerno: JSON.parse(_this.$route.params.dataOfTable)
              //     .customerno,
              customerno: this.$route.params.customerno,
              operator: localStorage.getItem("userCode"),
              mngcom: localStorage.getItem("comCode"),
              commonMedicineRequest: _this.mainData1,
              medicinerequestdeductlist: _this.kfDetail, //扣费明细
              medicinerequestreceiptlist: _this.fyDetail // 费用明细
            }
          }).then(result => {
            if (result.data.headers && result.data.headers.code === "200") {
              _this.mainData1.refusemoney = result.data.bodys.rows[0].deductfee; // 扣费明细
              _this.mainData1.billmoney = result.data.bodys.rows[0].receiptfee; // 费用总
              console.log(result.data.bodys.rows[0].receiptfee);
              var tbillmoney = parseFloat(_this.mainData1.billmoney);
              var tsocifee = isNaN(this.mainData1.socifee)
                ? 0
                : this.mainData1.socifee;
              console.log(isNaN(tsocifee));
              var totherfee = isNaN(this.mainData1.otherfee)
                ? 0
                : this.mainData1.otherfee;
              //
              var tselfamnt = isNaN(this.mainData1.selfamnt)
                ? 0
                : this.mainData1.selfamnt;
              var trefusemoney = isNaN(this.mainData1.refusemoney)
                ? 0
                : this.mainData1.refusemoney;
              _this.mainData1.indemnity = this.toFixeds(
                tbillmoney - tsocifee - trefusemoney - totherfee - tselfamnt,
                2
              );
              // tselfamnt
              _this.dialogVisible = false;
              this.$message({
                message: "普通门诊明细费用提交成功",
                type: "success"
              });
            } else if (
              result.data.headers &&
              result.data.headers.code === "500"
            ) {
              this.$message({
                message: "普通门诊明细费用提交失败",
                type: "error"
              });
            } else {
              this.$message({
                message: "普通门诊明细费用提交失败",
                type: "error"
              });
            }
          });
        } else if (_this.mainData1.feetype == "B") {
          post(service.savecpay, {
            bodys: {
              //   customerno: JSON.parse(_this.$route.params.dataOfTable)
              //     .customerno,
              customerno: this.$route.params.customerno,
              operator: localStorage.getItem("userCode"),
              mngcom: localStorage.getItem("comCode"),
              commonMedicineRequest: _this.mainData1,
              medicinerequestdeductlist: _this.kfDetail, //扣费明细
              medicinerequestreceiptlist: _this.fyDetail // 费用明细
            }
          }).then(result => {
            if (result.data.headers && result.data.headers.code === "200") {
              _this.mainData1.refusemoney = result.data.bodys.rows[0].deductfee; // 扣费明细
              _this.mainData1.billmoney = result.data.bodys.rows[0].receiptfee; // 费用总

              var tbillmoney = parseFloat(_this.mainData1.billmoney);
              var tsocifee = isNaN(_this.mainData1.socifee)
                ? 0
                : _this.mainData1.socifee;
              var totherfee = isNaN(_this.mainData1.otherfee)
                ? 0
                : _this.mainData1.otherfee;
              var trefusemoney = isNaN(_this.mainData1.refusemoney)
                ? 0
                : _this.mainData1.refusemoney;
              var tselfamnt = isNaN(_this.mainData1.selfamnt)
                ? 0
                : _this.mainData1.selfamnt;
              _this.mainData1.indemnity = this.toFixeds(
                tbillmoney - tsocifee - trefusemoney - totherfee - tselfamnt,
                2
              );
              _this.dialogVisible = false;
              this.$message({
                message: "普通住院明细费用提交成功",
                type: "success"
              });
            } else if (
              result.data.headers &&
              result.data.headers.code === "500"
            ) {
              this.$message({
                message: "普通住院明细费用提交失败",
                type: "error"
              });
            } else {
              this.$message({
                message: "普通住院明细费用提交失败",
                type: "error"
              });
            }
          });
        }
      }
    },
    loadmore() {
      this.pageData2.startPage += 100;
      this.pageData2.endPage += 100;
      // this.getHospitals(this.pageData);
      post(service.llfeeitem, {
        pagestart: this.pageData2.startPage,
        pageend: this.pageData2.endPage,
        code: this.fyListCode,
        likename: ""
      }).then(res => {
        this.fyDetailList1 = [...this.hospitalLists, ...res.data.bodys];
      });
    },
    changeFeeitemdetil() {
      post(service.llfeeitem, {
        pagestart: this.pageData2.startPage,
        pageend: this.pageData2.endPage,
        code: this.fyListCode,
        likename: ""
      }).then(res => {
        console.log("xx111xxx", res);
        this.fyDetailList1 = res.data.bodys;
      });
    }
  }
};
</script>

<style lang="less" scoped>
</style>