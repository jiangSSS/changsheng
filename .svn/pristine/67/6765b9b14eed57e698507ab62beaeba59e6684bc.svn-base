<template>
  <div class="task">
    <el-collapse v-model="activeName">
      <el-collapse-item name="1">
        <template slot="title">
          理赔用户查询
          <i
            class="header-icon el-icon-caret-bottom"
            style="margin: 0 8px 0 auto;font-size: 30px;"
          ></i>
        </template>
        <el-form ref="form" :model="form" v-model="labelPosition" label-width="35%">
          <el-row>
            <el-col :span="8">
              <div class="grid-content">
                <el-form-item label="赔案阶段">
                  <el-select v-model="form.rptorstate" clearable placeholder="请选择">
                    <el-option
                      v-for="item in claimList"
                      :key="item.code"
                      :label="item.name"
                      :value="item.code"
                    ></el-option>
                  </el-select>
                </el-form-item>
              </div>
            </el-col>
            <el-col :span="8">
              <div class="grid-content">
                <el-form-item label="理赔号">
                  <el-input v-model="form.rgtno" maxlength="13" @keyup.enter.native="initTable()"></el-input>
                </el-form-item>
              </div>
            </el-col>
            <el-col :span="8">
              <div class="grid-content">
                <el-form-item label="机构">
                  <el-select v-model="form.mngcom" clearable placeholder="请选择" filterable>
                    <el-option
                      v-for="item in mngcomList"
                      :key="item.comcode"
                      :label="item.name"
                      :value="item.comcode"
                    ></el-option>
                  </el-select>
                </el-form-item>
              </div>
            </el-col>
          </el-row>
          <el-row>
            <el-col :span="8">
              <div class="grid-content">
                <el-form-item label="操作员代码">
                  <el-input v-model="form.defaultoperator" maxlength="100" @keyup.enter.native="initTable()"></el-input>
                </el-form-item>
              </div>
            </el-col>
            <el-col :span="8">
              <div class="grid-content">
                <el-form-item label="工作状态">
                  <el-select v-model="form.workingstatus" clearable placeholder="请选择" filterable>
                    <el-option
                      v-for="item in workStatusList"
                      :key="item.code"
                      :label="item.name"
                      :value="item.code"
                    ></el-option>
                  </el-select>
                </el-form-item>
              </div>
            </el-col>
            <el-col :span="8">
              <div class="grid-content">
                <el-form-item label="任务状态">
                  <!-- <el-input v-model="form.operator" maxlength="100"></el-input> -->
                  <el-select v-model="form.taskstatus" clearable placeholder="请选择" filterable>
                    <el-option
                      v-for="item in taskStatusList"
                      :key="item.code"
                      :label="item.name"
                      :value="item.code"
                    ></el-option>
                  </el-select>
                </el-form-item>
              </div>
            </el-col>
          </el-row>
          <el-row style="text-align:right;padding-right:30px;">
            <el-button type="primary" @click="initTable()" round>查 询</el-button>
          </el-row>
        </el-form>
      </el-collapse-item>
    </el-collapse>

    <div class="work_queue">
      <span>赔案列表</span>
      <div class="box"></div>
    </div>
    <div class="work_table">
      <el-table
        :data="tableData.slice((currentPage-1)*pagesize,currentPage*pagesize)"
        style="width: 100%"
        @select="toAdd"
        @select-all="toAllAdd"
        ref="multipleTable"
        row-key
      >
        <el-table-column type="selection" width="55" :reserve-selection="true"></el-table-column>
        <el-table-column label="序号" type="index" :index="indexMethod" align="center" width="100"></el-table-column>
        <el-table-column prop="missionProp1" label="理赔号" align="center" sortable></el-table-column>
        <el-table-column prop="missionProp2" label="案件状态" align="center" sortable></el-table-column>
        <el-table-column prop="missionProp4" label="出险人姓名" align="center" sortable></el-table-column>
        <el-table-column prop="missionProp6" label="出险日期" align="center" sortable></el-table-column>
        <el-table-column prop="defaultoperator" label="操作员" align="center" sortable></el-table-column>
      </el-table>
      <div class="block">
        <el-pagination
          @size-change="currentPage1"
          @current-change="currentChange"
          :current-page.sync="currentPage1"
          :page-size="10"
          background
          layout="prev, pager, next, jumper"
          :total="tableData.length"
        ></el-pagination>
      </div>
      <el-row style="padding-left:10px;">
        <el-col :span="2">
          <span class="grid-content">指定操作员</span>
        </el-col>
        <el-col :span="6">
          <div class="grid-content">
            <el-input v-model="defaultoperator" maxlength="100" disabled></el-input>
          </div>
        </el-col>
      </el-row>
      <el-row style="text-align:right;padding-right:30px;">
        <!-- <el-button type="primary" @click="toggleSelection([tableData[1], tableData[2]])" round>查询</el-button> -->
        <el-button type="primary" @click="goFinduser" round>查询理赔用户</el-button>
        <el-button type="primary" @click="comfirm" round :disabled="isAppoint">指定确认</el-button>
      </el-row>
    </div>
  </div>
</template>
<script>
import axios from "axios";
import { post, service } from "../../utils/request.js";
// import { getCodeArr } from "../../utils/service";
export default {
  name: "ListQuery",
  data() {
    return {
      isAppoint: true,
      defaultoperator: "",
      form: {
        rptorstate: "",
        rgtno: "",
        mngcom: "",
        defaultoperator: "",
        workingstatus: "",
        taskstatus: ""
      },

      claimList: [
        {
          code: "20",
          name: "立案"
        },
        {
          code: "30",
          name: "审核"
        },
        {
          code: "40",
          name: "审批"
        }
      ],
      multipleSelection: [],
      workStatusList: [
        {
          code: "01",
          name: "工作"
        },
        {
          code: "02",
          name: "休假"
        }
      ],
      isFind: false,
      taskStatusList: [
        {
          code: "0",
          name: "已分配"
        },
        {
          code: "1",
          name: "未分配"
        }
      ],
      mngcomList: [],
      selrow: [],
      activeName: ["1", "2"],
      labelPosition: "right",
      currentPage: 1,
      currentPage1: 1,
      tableData: [],
      selectRow: [],
      pagesize: 10,
      currpage: 1,
      total: 0,
      currentRow: "",
      menugrpcode: ""
    };
  },
  inject: ["reload"],
  created() {
    this.getOperator();
  },
  beforeRouteEnter(to, from, next) {
    next(vm => {
      if (from.path == "/workBench") {
        vm.form.defaultoperator = sessionStorage.getItem("defaultoperator");
        post(service.claimlist, {
          bodys: { defaultoperator: sessionStorage.getItem("defaultoperator") }
        }).then(res => {
          if (res.data.header.code === "200") {
            vm.tableData = res.data.bodys;
            vm.total = res.data.bodys.length;
          }
        });
      }
      if(from.path !== "/findUser"){
    
        // sessionStorage.removeItem("selectObj")
      }
    });
  },
  mounted() {
    this.$watermark.set(
      localStorage.getItem("userCode"),
      localStorage.getItem("userName")
    );
    // if (!this.$route.query.A && !this.$route.query.usercode) {
    //   sessionStorage.removeItem("storage");
    // }
    // console.log(this.$route.query.A,this.$route.query.B,this.$route.query.usercode,)
    if (this.$route.query.A || this.$route.query.usercode) {
      if (!JSON.parse(sessionStorage.getItem("storage"))) {
        this.defaultoperator = "";
      } else {
        this.defaultoperator = this.$route.query.usercode;
      }

      if (JSON.parse(sessionStorage.getItem("storage"))) {
        this.form = JSON.parse(sessionStorage.getItem("storage"));
      }
      if (
        JSON.parse(sessionStorage.getItem("storage")) &&
        this.$route.query.B
      ) {
        this.initTable();
      }else{
        sessionStorage.removeItem('selRow')
      }
    }else{
      sessionStorage.removeItem('selRow')
    }
    //指定确认按钮状态
    if(sessionStorage.getItem('selRow')&&this.defaultoperator){
      this.isAppoint = false;
      // this.selectRow = JSON.parse(sessionStorage.getItem('selRow'))
    }else{
      this.isAppoint = true;
    }
    console.log(this.tableData)
  },

  methods: {
    // getRow(row){
    //   return row.missionProp1
    // },
  
    toAdd(selection, row) {
      console.log(selection)
      this.selectRow = selection;
      // this.multipleSelection = selection;
      // this.selrow=row
      if (selection.length && this.defaultoperator) {
        this.isAppoint = false;
      } else {
        this.isAppoint = true;
      }
    },
    toAllAdd(selection) {
      this.selectRow = selection;
      if (selection.length && this.defaultoperator) {
        this.isAppoint = false;
      } else {
        this.isAppoint = true;
      }
    },
    // 指定确认
    comfirm() {
      var target = [];
      for (var i = 0; i < this.selectRow.length; i++) {
        target.push({
          clmno: this.selectRow[i].missionProp1,
          clmstate: this.selectRow[i].clmstate,
          processid: "",
          oldmngcom: localStorage.getItem("comCode"),
          oldoperator: localStorage.getItem("userCode"),
          appointmngcom: "",
          appointoperator: this.defaultoperator
        });
      }
      post(service.appointoperator, {
        bodys: target
      }).then(res => {
        if (res.data.header.code === "200" && res.data.header.success) {
          this.$message.success(res.data.header.message);
          sessionStorage.removeItem("storage");
          this.reload();
        } else {
          this.$message.error(res.data.header.message);
        }
      });
    },
    goFinduser() {
      sessionStorage.setItem("storage", JSON.stringify(this.form));
      sessionStorage.setItem("selRow", JSON.stringify(this.selectRow));
      // sessionStorage.setItem(
      //   "selectObj",
      //   JSON.stringify(this.multipleSelection)
      // );
      this.$router.push({ name: "FindUser", query: { B: this.isFind } });
    },
    getOperator() {
      post(service.comGradeQuery, {
        bodys: {}
      }).then(res => {
        if (res.data.header.code === "200") {
          this.mngcomList = res.data.bodys;
        }
      });
    },

    // 查询
    initTable: function() {
      this.isFind = true;
      // this.$refs.multipleTable.clearSelection();
      this.currentPage = 1;
      this.currentPage1 = 1;
      post(service.claimlist, {
        bodys: this.form
      }).then(res => {
        if (res.data.header.code === "200" && res.data.header.success) {
          this.tableData = res.data.bodys;
          this.total = res.data.bodys.length;
          if(sessionStorage.getItem("selRow")){
            let sel=[]
            this.sel = JSON.parse(sessionStorage.getItem("selRow"));
            // this.$refs.multipleTable.toggleRowSelection(this.selrow[0],true)
            this.$nextTick(()=>{
              this.tableData.forEach(row => {
                // console.log(this.selectRow.indexOf(row))
                for(let i of this.sel){
                  // console.log(row,i)
                  if(JSON.stringify(row)==JSON.stringify(i)){
                    this.$refs.multipleTable.toggleRowSelection(row,true)
                  }
                }
              })
            })
          }
        }
      });
      let arr = [{"a":"1"},{"b":"2"}]
      let arr1 = {"b":"2"}
      console.log('....',arr.indexOf(JSON.stringify(arr1)))
    },

    currentChange: function(page) {
      this.currentPage = page;
      // this.tableList();
    },
    indexMethod(index) {
      return index + 1 + (this.currentPage - 1) * 10;
    },

  }
};
</script>
<style lang="less" scoped>
.task {
  margin: 10px;
  .header {
    background-color: #0673ff;
    height: 50px;
    line-height: 50px;
    border-radius: 25px 25px 0 0;
    padding: 0 30px;
    overflow: hidden;
    color: #fff;
    font-size: 20px;
    font-family: Source Han Sans CN;
    i {
      font-size: 30px;
      float: right;
      margin-top: 19px;
    }
  }
  .el-form {
    background-color: #fff;
  }
  .work_queue {
    position: relative;
    margin-top: 21px;
    span {
      display: inline-block;
      background-color: #0673ff;
      color: #fff;
      padding: 0 15px;
      height: 33px;
      line-height: 33px;
      border-radius: 10px 10px 0 0;
    }
    .box {
      width: 0;
      height: 0;
      border-left: 10px solid transparent;
      border-right: 10px solid transparent;
      border-top: 10px solid #0673ff;
      position: absolute;
      top: 33px;
      left: 15px;
      z-index: 999;
    }
  }
  .work_table {
    margin-bottom: 21px;
    background-color: #fff;
    padding: 20px 8px;
    .el-form-item__content {
      margin-left: 0 !important;
    }
  }
  .block {
    background-color: #fff;
    height: 80px;
    padding-top: 20px;
    box-sizing: border-box;
  }
  .img_style {
    width: 27px;
    height: 22px;
  }
}
</style>
<style lang="less">
.task {
  .el-row {
    line-height: 40px;
    // padding-top: 20px;
    &:first-child {
      padding-top: 20px;
    }
    &:last-child {
      padding-top: 0;
      margin-bottom: 0;
    }
  }

  .grid-content {
    border-radius: 4px;
    min-height: 36px;
  }
  .row-bg {
    padding: 10px 0;
    background-color: #f9fafc;
  }
}
.task {
  //   .el-input {
  //     width: 80% !important;
  //   }
  .date_style {
    .el-input {
      width: 46% !important;
    }
  }

  .el-select {
    width: 100% !important;
    .el-input {
      width: 100% !important;
    }
  }
  .el-collapse-item__arrow {
    display: none;
  }
  .el-collapse-item__header {
    background-color: #0673ff;
    height: 30px;
    line-height: 30px;
    border-radius: 10px 10px 0 0;
    padding: 0 15px;
    overflow: hidden;
    color: #fff;
    font-size: 16px;
    font-family: Source Han Sans CN;
  }
  .el-collapse-item__content {
    padding-bottom: 17px;
  }
  .el-table--striped .el-table__body tr.el-table__row--striped.current-row td,
  .el-table__body tr.current-row > td,
  .el-table__body tr.hover-row.current-row > td,
  .el-table__body tr.hover-row.el-table__row--striped.current-row > td,
  .el-table__body tr.hover-row.el-table__row--striped > td,
  .el-table__body tr.hover-row > td {
    background-color: #409eff;
  }
}
</style>
